{"version":3,"sources":["logo.svg","main/dicomParse.js","main/RT_DOSE/dosePixelDataParse.js","main/RT_DOSE/doseDataParser.js","main/Loader/firstLoader.js","main/RT_DOSE/doseCheckbox.js","main/RT_DOSE/drawDose.js","main/RT_STRUCTURE/pixel2voxel.js","main/RT_STRUCTURE/voxel2pixel.js","main/RT_STRUCTURE/drawROI.js","main/RT_STRUCTURE/rgbToHex.js","main/RT_STRUCTURE/ROIcheckbox.js","main/Loader/dragAndDrop.js","main/Loader/doseImport.js","main/MainUI.js","main/RT_STRUCTURE/buttonEventFunction.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dicomParse","Rows","Columns","Number_of_Frames","dataSet","image","document","getElementById","textContent","data","string","ex","alert","dose_json_array","dose_pixel_Data_parse","pixelDataElement","elements","x7fe00010","pixel_data","Uint16Array","byteArray","buffer","byteOffset","length","pixelSpacing","parseFloat","split","gridFrameOffsetVectorArray","imagePosition","imagePositionArray_Sz","Sz","i","dose_json","offset","push","uint16","Dose_Grid_Scaling","dose_value_temp","cnt","z","dose_value","y","x","max","count","Math","apply","dosemax","level","parseInt","pres","forEach","n","ul","li","createElement","checkbox","type","value","name","append","text","createTextNode","Dose_Checkbox","$","ready","dose","getElementsByName","addEventListener","addDoseSet","attachEvent","gridScaling","doseFile","file","imageId","cornerstoneWadoImageLoader","fileManager","add","reader","FileReader","onload","arrayBuffer","result","Uint8Array","setTimeout","dicomParser","parseDicom","cornerstone","then","dose_pixelSpacing","pixelSpaceArr","toString","imgPos","imgPosArr","imgOri","imgOriArr","doseData","err","exception","readAsArrayBuffer","Sx","Sy","Di","Dj","CT_Sx","CT_Sy","CT_Di","CT_Dj","CT_Xx","CT_Xy","CT_Yx","CT_Yy","findXY","checkVal_check_dose","color","Vi","Vj","output2","innerHTML","join","coords","ch","require","ch_x","ch_y","Xx","Xy","Yx","Yy","Px","Py","CT_Px","CT_Py","output","ctx","getContext","save","translate","beginPath","moveTo","lineTo","closePath","fillStyle","globalAlpha","stroke","fill","restore","drawDose","doseAlign","voxelCal","modality","SOP_UID","Xz","Yz","pixelSpace","el","event","pixelCoords","pageX","pageY","Pz","getVoxelCalValue","pixelCal","struct","str","vPx","vPy","vPz","voxel","pi","pj","floor","rgbToHex","hex","Number","fullColorHex","rgb","r","g","b","isASCII","test","structFile","removeClass","addClass","empty","kb","mb","toFixed","start","Date","getTime","ROIList","contour","roi_List","ROI_Number","ROI_Name","filter","item","undefined","ROI_LIST_Array","Array","ROI_object","Object","x30060022","x30060026","ROI_addCheckbox","roiJson","contourList","Referenced_Instance_UID","contour_data","Referenced_ROI_Number","ROI_display_color","j","contour_object","x30060084","x00081155","x30060050","x3006002a","contour_data_Array","contourJson","roi","addROIset","warnings","warning","output1","output3","propertyName","element","tag","hadUndefinedLength","vr","items","fragments","itemNumber","fragment","basicOffset","basicOffsetTable","uint32","img","information","ROIs","checkVal_send","sendDrawImage","Instance_UID","draw","getImage","evt","target","checked","checkVal_check","checkDrawImage","index","indexOf","splice","resetCanvas","checkResetImage","canvas_obj","px","canvas","reset","ctx2","clearRect","style","Dose","getCheckValue","cornerstoneTools","Hammer","cornerstoneMath","currentImageIndex","fileJsonArray","imageIdList","e","temp_imageId","files","fileName","fileJson","webkitRelativePath","sort","a","imageIds","imageIndex","viewport","firstLoader","onwheel","stopPropagation","preventDefault","deltaY","updateTheImage","checkAndDraw","handleFileSelect","dataTransfer","handleDragOver","dropEffect","handleFileChange","bold","MainUIElements","this","dropZone","lastX","lastY","mouseButton","which","mouseMoveHandler","deltaX","translation","scale","voi","windowWidth","windowCenter","round","mouseUpHandler","removeEventListener","id","className","onChange","webkitdirectory","directory","multiple","onClick","AngleTool","mouseButtonMask","angleOn","LengthTool","lengthOn","EllipticalRoiTool","drawCircle","RectangleRoiTool","drawRectangle","EraserTool","eraserOn","width","height","reductionOn","expansionOn","invert","invertOn","pixelReplication","interpolationOn","hflip","hflipOn","vflip","vflipOn","rotation","rotateOn","class","onContextMenu","onWheel","ref","input","src","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"wKAAAA,EAAOC,QAAU,IAA0B,kC,4QC2B5BC,ICxBXC,EAAMC,EAASC,ECIfC,EACAH,EAAMC,EFmBKF,EAzBf,SAAoBK,GAChB,IAEIC,SAASC,eAAe,WAAWC,YAAc,gBAAkBH,EAAMI,KAAKC,OAAO,aACrFJ,SAASC,eAAe,WAAWC,YAAc,kBAAoBH,EAAMI,KAAKC,OAAO,aAAtC,mBAA+EL,EAAMI,KAAKC,OAAO,aAClJJ,SAASC,eAAe,YAAYC,YAAc,cAAgBH,EAAMI,KAAKC,OAAO,aACpFJ,SAASC,eAAe,YAAYC,YAAc,cAAgBH,EAAMI,KAAKC,OAAO,aACpFJ,SAASC,eAAe,eAAeC,YAAc,kBAAoBH,EAAMI,KAAKC,OAAO,aAa7F,MAAOC,GACLC,MAAM,mBCrBVC,EAAkB,GAGtB,SAASC,EAAsBT,EAAOD,GAClC,IAAIW,EAAmBX,EAAQY,SAASC,UACpCC,EAAa,IAAIC,YAAYf,EAAQgB,UAAUC,OAAQN,EAAiBO,WAAYP,EAAiBQ,OAAS,GAE9GC,EAAeC,WAAWpB,EAAMI,KAAKC,OAAO,aAAagB,MAAM,MAAM,IAErEC,EADwBtB,EAAMI,KAAKC,OAAO,aACSgB,MAAM,MAGzDE,EAAgBvB,EAAMI,KAAKC,OAAO,aAClCmB,EAAwBJ,WAAWG,EAAcF,MAAM,MAAM,IAC7DI,EAAK,GACTA,EAAG,GAAKD,EAGR,IAAK,IAAIE,EAAI,EAAGA,EAAGJ,EAA2BJ,OAAQQ,IAClDD,EAAGC,GAAKD,EAAGC,EAAI,GAAKP,EAGxB,IAAK,IAAIO,EAAI,EAAGA,EAAGJ,EAA2BJ,OAAQQ,IAAK,CACvD,IAAIC,EAAY,GAChBA,EAAUF,GAAKA,EAAGC,GAClBC,EAAUC,OAASN,EAA2BI,GAE9ClB,EAAgBqB,KAAKF,GAIzB/B,EAAOwB,WAAWrB,EAAQ+B,OAAO,cACjCjC,EAAUuB,WAAWrB,EAAQ+B,OAAO,cACpChC,EAAmBsB,WAAWpB,EAAMI,KAAKC,OAAO,cE4EpD,SAAqBL,EAAOa,EAAYjB,EAAMC,EAASC,GAMnD,IALA,IAAIiC,EAAoBX,WAAWpB,EAAMI,KAAKC,OAAO,cACjD2B,EAAkB,GAIbN,EAAI,EAAGA,EAAI5B,EAAkB4B,IAClCM,EAAgBN,GAAK,GAIzB,IAAK,IAAIA,EAAI,EAAGA,EAAIb,EAAWK,OAAQQ,IACnCM,EAAgBN,GAAKb,EAAWa,GAAKK,EAAoB,IAAM,GAKnE,IAFA,IAAIE,EAAM,EAEDC,EAAI,IAAKA,EAAI,IAAMpC,EAAkBoC,IAE1CC,GAAWD,GAAK,GAGpB,IAAK,IAAIA,EAAI,IAAKA,EAAI,IAAMpC,EAAkBoC,IAC1C,IAAK,IAAIE,EAAI,EAAGA,EAAIvC,EAASuC,IACzBD,GAAWD,GAAGE,GAAK,GAG3B,IAAK,IAAIF,EAAI,IAAKA,EAAI,IAAMpC,EAAkBoC,IAC1C,IAAK,IAAIE,EAAI,EAAGA,EAAIvC,EAASuC,IACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIzC,EAAMyC,IAEtBF,GAAWD,GAAGE,GAAGC,GAAK,GAMlC,IAAK,IAAIH,EAAI,IAAKA,EAAI,IAAMpC,EAAkBoC,IAC1C,IAAK,IAAIE,EAAI,EAAGA,EAAIvC,EAASuC,IACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIzC,EAAMyC,IAEtBF,GAAWD,GAAGE,GAAGC,GAAKL,EAAgBC,GACtCA,IAQZ,IAFA,IAAIK,EAAM,GACNC,EAAM,EACDL,EAAI,IAAKA,EAAI,IAAMpC,EAAkBoC,IAAK,CAAC,IAAD,EAC/CI,EAAIC,IAAU,EAAAC,KAAKF,KAAIG,MAAT,oBAAkBN,GAAWD,KAC3CK,KChKR,SAAuBG,GACnB,IAAIC,EAAQ,GAEZA,EAAM,GAAKC,SAASF,GACpBC,EAAM,GAFK,IAGXA,EAAM,GAAKE,KACXF,EAAM,GAAKE,KACXF,EAAM,GAAKE,KACXF,EAAM,GAAKE,KACXF,EAAM,GAAKE,KACXF,EAAM,GAAKE,IACXF,EAAM,GAAKE,KACXF,EAAM,GAAK,EAEXA,EAAMG,SAAQ,SAAUC,GACpB,IAAIC,EAAK/C,SAASC,eAAe,OAC7B+C,EAAKhD,SAASiD,cAAc,MAE5BC,EAAWlD,SAASiD,cAAc,SACtCC,EAASC,KAAO,WAChBD,EAASE,MAAQN,EACjBI,EAASG,KAAO,OAEhBL,EAAGM,OAAOJ,GAEV,IAAIK,EAAI,UAAMZ,SAAUG,EAvBjB,IAuB6B,KAA5B,eAAuCA,EAAvC,OACRE,EAAGM,OAAOtD,SAASwD,eAAeD,IAClCR,EAAGO,OAAON,OD2IdS,CAFUlB,KAAKF,IAAL,MAAAE,KAAYF,ICnItBqB,IAAE1D,UAAU2D,OAAM,WACd,IAAIC,EAAO5D,SAAS6D,kBAAkB,QACtC,GAAID,EAAK,GAAGE,iBACR,IAAK,IAAIrC,EAAI,EAAGA,EAAImC,EAAK3C,OAAQQ,IAC7BmC,EAAKnC,GAAGqC,iBAAiB,SAAUC,IAAY,QAEhD,GAAIH,EAAK,GAAGI,YACf,IAAK,IAAIvC,EAAI,EAAGA,EAAImC,EAAK3C,OAAQQ,IAC7BmC,EAAKnC,GAAGuC,YAAY,WAAYD,OHP5CE,CAAYlE,EAAOa,EAAYjB,EAAMC,EAASC,GC3BlD,SAASqE,EAASC,GACd,IAAMC,EAAUC,UAAmCC,YAAYC,IAAIJ,GAE/DK,EAAS,IAAIC,WA6BjB,OA5BAD,EAAOE,OAAS,SAAUP,GACtB,IAAIQ,EAAcH,EAAOI,OAGrB9D,EAAY,IAAI+D,WAAWF,GAG/BG,YAAW,WAEP,IAEIhF,EAAUiF,IAAYC,WAAWlE,GACjCnB,EAAOwB,WAAWrB,EAAQ+B,OAAO,cACjCjC,EAAUuB,WAAWrB,EAAQ+B,OAAO,cACjBV,WAAWrB,EAAQM,OAAO,cAqB7D,SAAkBgE,EAAStE,GAGvBmF,YAAsBb,GAASc,MAAK,SAAUnF,GAC1C,GAAuC,kCAAnCA,EAAMI,KAAKC,OAAO,aAAkD,CACpE,IAAI+E,EAAoB,EACxBC,EAAgB,GAGhBD,GADAA,EAAoBpF,EAAMI,KAAKC,OAAO,cACAiF,WACtCD,EAAgBD,EAAkB/D,MAAM,MAExC,IAAIkE,EAASvF,EAAMI,KAAKC,OAAO,aAC/BmF,EAAYD,EAAOlE,MAAM,MAEzB,IAAIoE,EAASzF,EAAMI,KAAKC,OAAO,aAC/BoF,EAASA,EAAOH,WAChBI,EAAYD,EAAOpE,MAAM,MAGzBZ,EAAsBT,EAAOD,GAE3BC,KAxCE2F,CAAStB,EAAStE,GACpB,MAAO6F,GAEDA,EAAIC,WACMD,EAAIC,aAGvB,KAEPpB,EAAOqB,kBAAkB1B,GAElBrE,EAGX,IAqFIgG,EAAIC,EAAIC,EAAIC,EACZC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAAOC,EAtFjDhB,EAAY,GACZF,EAAY,GACZH,EAAgB,GA6BpB,SAASsB,EAAOxE,EAAYyE,EAAqBC,GAM7C,IALA,IAAIC,EAAK,GAAIC,EAAK,GACd9E,EAAM,EAEN+E,EAAU,GAEL5E,EAAI,EAAGA,EAAIvC,EAASuC,IACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIzC,EAAMyC,IAClBF,EAAWC,GAAGC,IAAMO,SAASgE,KAE7BI,EAAQnF,KAAKM,EAAWC,GAAGC,IAE3ByE,EAAG7E,GAAOI,EACV0E,EAAG9E,GAAOG,EACVH,KAIZhC,SAASC,eAAe,SAAS+G,UAAY,OAASD,EAAQE,KAAK,KAAO,QAI1E,IADA,IAAIC,EAAS,GACJzF,EAAI,EAAGA,EAAIO,EAAKP,IACrByF,EAAOzF,GAAK,GAEhB,IAAK,IAAIA,EAAI,EAAGA,EAAIO,EAAKP,IACrByF,EAAOzF,GAAG,GAAKoF,EAAGpF,GAClByF,EAAOzF,GAAG,GAAKqF,EAAGrF,GAItB,IADA,IAAI0F,EAAK,GACA1F,EAAI,EAAGA,EAAI0F,EAAGlG,OAAQQ,IAC3B0F,EAAG1F,GAAK,GAEZ0F,EAAKC,EAAQ,GAARA,CAAmCF,GAKxC,IAHA,IAAIG,EAAO,GACPC,EAAO,GAEF7F,EAAI,EAAGA,EAAI0F,EAAGlG,OAAQQ,IAC3B4F,EAAK5F,GAAK,GACV6F,EAAK7F,GAAK,GAGd,IAAK,IAAIA,EAAI,EAAGA,EAAI0F,EAAGlG,OAAQQ,IAC3B4F,EAAK5F,GAAK0F,EAAG1F,GAAG,GAChB6F,EAAK7F,GAAK0F,EAAG1F,GAAG,IAuBxB,SAAmBoF,EAAIC,EAAIF,GACvBd,EAAK3E,WAAWoE,EAAU,IAC1BQ,EAAK5E,WAAWoE,EAAU,IAE1B,IAAIgC,EAAKpG,WAAWsE,EAAU,IAC1B+B,EAAKrG,WAAWsE,EAAU,IAC1BgC,EAAKtG,WAAWsE,EAAU,IAC1BiC,EAAKvG,WAAWsE,EAAU,IAE9BO,EAAK7E,WAAWiE,EAAc,IAC9Ba,EAAK9E,WAAWiE,EAAc,IAK9B,IAHA,IAAIuC,EAAK,GACLC,EAAK,GAEAnG,EAAI,EAAGA,EAAIoF,EAAG5F,OAAQQ,IAC3BkG,EAAGlG,GAAO8F,EAAKvB,EAAKa,EAAGpF,GAAOgG,EAAKxB,EAAKa,EAAGrF,GAAMqE,EAErD,IAAK,IAAIrE,EAAI,EAAGA,EAAIqF,EAAG7F,OAAQQ,IAC3BmG,EAAGnG,GAAO+F,EAAKxB,EAAKa,EAAGpF,GAAOiG,EAAKzB,EAAKa,EAAGrF,GAAMsE,EAQrD,IAHA,IAAI8B,EAAQ,GAAIC,EAAQ,GAGfrG,EAAI,EAAGA,EAAIoF,EAAG5F,OAAQQ,IAC3BoG,EAAMpG,GAAM6E,EAAQF,EAAQS,EAAGpF,GAAO+E,EAAQH,EAAQS,EAAGrF,GAAMyE,EAGnE,IAAK,IAAIzE,EAAI,EAAGA,EAAIqF,EAAG7F,OAAQQ,IAC3BqG,EAAMrG,GAAM8E,EAAQH,EAAQS,EAAGpF,GAAOgF,EAAQJ,EAAQS,EAAGrF,GAAM0E,EAKnE,IAFA,IAAI4B,EAAS,GAEJtG,EAAI,EAAGA,EAAIoG,EAAM5G,OAAQQ,IAC9BsG,EAAOnG,KAAK,IAAMiG,EAAMpG,GAAK,IAAMqG,EAAMrG,GAAK,KAGlDzB,SAASC,eAAe,QAAQ+G,UAAY,OAASe,EAAOd,KAAK,KAAO,QGhJ5E,SAAkBU,EAAIC,EAAIhB,GAEtB,IACIoB,EADShI,SAASC,eAAe,cACpBgI,WAAW,MAE5BD,EAAIE,OACJF,EAAIG,UAAU,IAAI,KAElBH,EAAII,YACJJ,EAAIK,OAAOV,EAAG,GAAIC,EAAG,IACrB,IAAK,IAAInG,EAAI,EAAGA,EAAIkG,EAAG1G,OAAQQ,IAC3BuG,EAAIM,OAAOX,EAAGlG,GAAImG,EAAGnG,IAEzBuG,EAAIO,YAEJP,EAAIQ,UAAY5B,EAChBoB,EAAIS,YAAc,GAClBT,EAAIU,SACJV,EAAIW,OACJX,EAAIY,UH+HJC,CAAShB,EAAOC,EAAOlB,GA7DvBkC,CAAUzB,EAAMC,EAAMV,GInDXmC,MAvEf,SAAkBhJ,GACd,IAAIiJ,EAAWjJ,EAAMI,KAAKC,OAAO,aAC7B6I,EAAUlJ,EAAMI,KAAKC,OAAO,aAChC,GAAkB,OAAd4I,GAAmC,kCAAZC,GAA4D,WAAbD,EAAuB,CAC7F,IACIzD,EADSxF,EAAMI,KAAKC,OAAO,aACRgB,MAAM,MAEzB0E,EAAiC,GAA3B3E,WAAWoE,EAAU,IAAY,GACvCQ,EAAiC,GAA3B5E,WAAWoE,EAAU,IAAY,GACvC/D,EAAiC,GAA3BL,WAAWoE,EAAU,IAAY,GAEvCC,EAASzF,EAAMI,KAAKC,OAAO,aAE3BqF,GADJD,EAASA,EAAOH,YACOjE,MAAM,MAEzBmG,EAAiC,GAA3BpG,WAAWsE,EAAU,IAAY,GACvC+B,EAAiC,GAA3BrG,WAAWsE,EAAU,IAAY,GACvCyD,EAAiC,GAA3B/H,WAAWsE,EAAU,IAAY,GACvCgC,EAAiC,GAA3BtG,WAAWsE,EAAU,IAAY,GACvCiC,EAAiC,GAA3BvG,WAAWsE,EAAU,IAAY,GACvC0D,EAAiC,GAA3BhI,WAAWsE,EAAU,IAAY,GAEvC2D,EAAarJ,EAAMI,KAAKC,OAAO,aAE/BgF,GADJgE,EAAaA,EAAW/D,YACOjE,MAAM,MAEjC4E,EAAK7E,WAAgC,GAApBiE,EAAc,IAAY,GAC3Ca,EAAK9E,WAAgC,GAApBiE,EAAc,IAAY,GAE3CiE,EAAKrJ,SAASC,eAAe,cAoCjC,OA3BAoJ,EAAGvF,iBAAiB,aAAa,SAAUwF,GACvC,IAAMC,EAActE,cAAwBoE,EAAIC,EAAME,MAAOF,EAAMG,OAG/D9B,EAAMJ,EAAKvB,EAAKuD,EAAYnH,EAAMqF,EAAKxB,EAAKsD,EAAYpH,EAAK2D,EAC7D8B,EAAMJ,EAAKxB,EAAKuD,EAAYnH,EAAMsF,EAAKzB,EAAKsD,EAAYpH,EAAK4D,EAC7D2D,EAAMR,EAAKlD,EAAKuD,EAAYnH,EAAM+G,EAAKlD,EAAKsD,EAAYpH,EAAKX,EAIjExB,SAASC,eAAe,eAAeC,YAAc,QAAUyH,EAAK,UAAYC,EAAK,UAAY8B,KAGrGL,EAAGvF,iBAAiB,YAAY,SAAUwF,GACtC,IAAMC,EAActE,cAAwBoE,EAAIC,EAAME,MAAOF,EAAMG,OAG/D9B,EAAMJ,EAAKvB,EAAKuD,EAAYnH,EAAMqF,EAAKxB,EAAKsD,EAAYpH,EAAK2D,EAC7D8B,EAAMJ,EAAKxB,EAAKuD,EAAYnH,EAAMsF,EAAKzB,EAAKsD,EAAYpH,EAAK4D,EAC7D2D,EAAMR,EAAKlD,EAAKuD,EAAYnH,EAAM+G,EAAKlD,EAAKsD,EAAYpH,EAAKX,EAKjExB,SAASC,eAAe,cAAcC,YAAc,QAAUyH,EAAK,UAAYC,EAAK,UAAY8B,KJkE5G,SAA0B5D,EAAIC,EAAIC,EAAIC,EAAIsB,EAAIC,EAAI0B,EAAIzB,EAAIC,EAAIyB,GAC1DjD,EAAQJ,EACRK,EAAQJ,EACRK,EAAQJ,EACRK,EAAQJ,EACRK,EAAQiB,EACRhB,EAAQiB,EACRhB,EAAQiB,EACRhB,EAAQiB,EIxEJiC,CAAiB7D,EAAIC,EAAIC,EAAIC,EAAIsB,EAAIC,EAAI0B,EAAIzB,EAAIC,GAC1C,CAAC5B,EAAIC,EAAIC,EAAIC,GAEpB3F,MAAM,kB,gBClBCsJ,IC3CX9J,GD2CW8J,GA/Cf,SAAkB7J,EAAO8J,GAOrB,IANA,IAAIC,EAAMD,EAAOzI,MAAM,MACnB2I,EAAM,GACNC,EAAM,GACNC,EAAM,GAGDxI,EAAI,EAAGA,EAAIqI,EAAI7I,OAAQQ,IACxBA,EAAI,IAAM,EACVsI,EAAItI,GAAKqI,EAAIrI,GACNA,EAAI,IAAM,EACjBuI,EAAIvI,GAAKqI,EAAIrI,GACPA,EAAI,IAAM,IAChBwI,EAAIxI,GAAKqI,EAAIrI,IAiBrB,IAXA,IAAIyI,EAAQnB,EAAShJ,GACjB+F,EAAKoE,EAAM,GACXnE,EAAKmE,EAAM,GACXlE,EAAKkE,EAAM,GACXjE,EAAKiE,EAAM,GAEXC,EAAK,GACLC,EAAK,GAIA3I,EAAI,EAAGA,EAAIqI,EAAI7I,OAAQQ,IACxBA,EAAI,IAAM,EACV0I,EAAG1I,GAAKc,KAAK8H,OAAQN,EAAItI,GAAKqE,GAAOE,EAAO,IAAM,GAC3CvE,EAAI,IAAM,IACjB2I,EAAG3I,GAAKc,KAAK8H,OAAQL,EAAIvI,GAAKsE,GAAOE,EAAO,IAAM,IAW1D,MAAO,CAACkE,EAAIC,IEpDZE,GAAW,SAAU1D,GACrB,IAAI2D,EAAMC,OAAO5D,GAAOvB,SAAS,IAIjC,OAHIkF,EAAItJ,OAAS,IACbsJ,EAAM,IAAMA,GAETA,GAiBIE,GAdI,SAAUC,GAGzB,IAAIC,GAFJD,EAAMA,EAAItJ,MAAM,OAEJ,GACRwJ,EAAIF,EAAI,GACRG,EAAIH,EAAI,GAMZ,MAAO,IAJGJ,GAASK,GACPL,GAASM,GACVN,GAASO,IDVxB,SAASC,GAAQhB,GACb,MAAO,iBAAiBiB,KAAKjB,GAKjC,SAASkB,GAAW7G,GAKhBT,IAAE,WAAWuH,YAAY,4CAA4CC,SAAS,cAC9ExH,IAAE,aAAayH,QAGf,IAAI3G,EAAS,IAAIC,WAgFjB,OA/EAD,EAAOE,OAAS,SAAUP,GACtB,IAAIQ,EAAcH,EAAOI,OAGrB9D,EAAY,IAAI+D,WAAWF,GAE3ByG,EAAKtK,EAAUG,OAAS,KACxBoK,EAAKD,EAAK,KACAC,EAAK,EAAIA,EAAGC,QAAQ,GAAaF,EAAGE,QAAQ,GAM1DxG,YAAW,WAEP,IACI,IAAIyG,GAAQ,IAAIC,MAAOC,UACvB3L,GAAUiF,IAAYC,WAAWlE,GAKjC4K,GAAQ5L,IACR6L,GAAQ7L,GAJM,GACA,IAgO9B,SAAiB8L,GAIb,IAHA,IAAIC,EAAa,GACbC,EAAW,GAENrK,EAAI,EAAGA,EAAImK,EAAS3K,OAAQQ,IACd,aAAfmK,EAASnK,GACToK,EAAWpK,GAAKmK,EAASnK,EAAI,GACP,aAAfmK,EAASnK,KAChBqK,EAASrK,GAAKmK,EAASnK,EAAI,IAKnCoK,EAAaA,EAAWE,QAAO,SAAUC,GACrC,OAAgB,OAATA,QAA0BC,IAATD,GAA+B,KAATA,KAElDF,EAAWA,EAASC,QAAO,SAAUC,GACjC,OAAgB,OAATA,QAA0BC,IAATD,GAA+B,KAATA,KAIlDtI,KAAE,WAGE,IAFA,IAAIwI,EAAiB,IAAIC,MAEhB1K,EAAI,EAAGA,EAAIqK,EAAS7K,OAAQQ,IAAK,CACtC,IAAI2K,EAAa,IAAIC,OACrBD,EAAWE,UAAYT,EAAWpK,GAClC2K,EAAWG,UAAYT,EAASrK,GAEhCyK,EAAetK,KAAKwK,IEtShC,SAAyBF,GACrBA,EAAerJ,SAAQ,SAAUC,GAC7B,IAAIC,EAAK/C,SAASC,eAAe,MAC7B+C,EAAKhD,SAASiD,cAAc,MAE5BC,EAAWlD,SAASiD,cAAc,SACtCC,EAASC,KAAO,WAChBD,EAASE,MAAQN,EAAEwJ,UACnBpJ,EAASG,KAAO,MAEhBL,EAAGM,OAAOJ,GAEV,IAAIK,EAAOT,EAAEyJ,UACbvJ,EAAGM,OAAOtD,SAASwD,eAAeD,IAClCR,EAAGO,OAAON,MF0RVwJ,CAAgBN,MA3PRO,CAAQb,IAkQxB,SAAqBc,GAMjB,IALA,IAAIC,EAA0B,GAC1BC,EAAe,GACfC,EAAwB,GACxBC,EAAoB,GAEfrL,EAAI,EAAGA,EAAIiL,EAAYzL,OAAQQ,IAAK,CACzC,IAAIsL,EAAI,EACR,GAA2B,cAAvBL,EAAYjL,EAAI,GAAoB,CAGpC,GAFAkL,EAAwBlL,GAAKiL,EAAYjL,EAAI,GAC7CmL,EAAanL,GAAKiL,EAAYjL,EAAI,GACP,cAAvBiL,EAAYjL,EAAI,GAChBoL,EAAsBpL,GAAKiL,EAAYjL,EAAI,QACxC,GAA2B,cAAvBiL,EAAYjL,EAAI,GACvB,IAAKsL,EAAItL,EAAI,EAAGsL,EAAIL,EAAYzL,OAAQ8L,IACpC,GAA2B,cAAvBL,EAAYK,EAAI,GAAoB,CACpCF,EAAsBpL,GAAKiL,EAAYK,EAAI,GAC3C,MAIZ,GAAuB,cAAnBL,EAAYjL,GACZqL,EAAkBrL,GAAKiL,EAAYjL,EAAI,QACpC,GAAuB,cAAnBiL,EAAYjL,GACnB,IAAKsL,EAAItL,EAAGsL,EAAI,EAAGA,IACf,GAAuB,cAAnBL,EAAYK,GAAoB,CAChCD,EAAkBrL,GAAKiL,EAAYK,EAAI,GACvC,QAOpBD,EAAoBA,EAAkBf,QAAO,SAAUC,GACnD,OAAgB,OAATA,QAA0BC,IAATD,GAA+B,KAATA,KAElDW,EAA0BA,EAAwBZ,QAAO,SAAUC,GAC/D,OAAgB,OAATA,QAA0BC,IAATD,GAA+B,KAATA,KAElDY,EAAeA,EAAab,QAAO,SAAUC,GACzC,OAAgB,OAATA,QAA0BC,IAATD,GAA+B,KAATA,KAElDa,EAAwBA,EAAsBd,QAAO,SAAUC,GAC3D,OAAgB,OAATA,QAA0BC,IAATD,GAA+B,KAATA,KAIlDtI,KAAE,WACE,IAAK,IAAIjC,EAAI,EAAGA,EAAIiL,EAAYzL,OAAQQ,IAAK,CACzC,IAAIuL,EAAiB,GACrBA,EAAeC,UAAYJ,EAAsBpL,GACjDuL,EAAeE,UAAYP,EAAwBlL,GACnDuL,EAAeG,UAAYP,EAAanL,GACxCuL,EAAeI,UAAYN,EAAkBrL,GAE7C4L,GAAmBzL,KAAKoL,OAzTpBM,CAAYZ,IEzBxBhJ,IAAE1D,UAAU2D,OAAM,WACd,IAAI4J,EAAMvN,SAAS6D,kBAAkB,OACrC,GAAI0J,EAAI,GAAGzJ,iBACP,IAAK,IAAIrC,EAAI,EAAGA,EAAI8L,EAAItM,OAAQQ,IAC5B8L,EAAI9L,GAAGqC,iBAAiB,SAAU0J,IAAW,QAE9C,GAAID,EAAI,GAAGvJ,YACd,IAAK,IAAIvC,EAAI,EAAGA,EAAI8L,EAAItM,OAAQQ,IAC5B8L,EAAI9L,GAAGuC,YAAY,WAAYwJ,QFyBrB,IAAIhC,MAAOC,UAErB,GAAI3L,GAAQ2N,SAASxM,OAAS,EAC1ByC,IAAE,YAAYuH,YAAY,yCAAyCC,SAAS,iBAG5EpL,GAAQ2N,SAAS5K,SAAQ,SAAU6K,GAC/BhK,IAAE,aAAaJ,OAAO,OAASoK,EAAU,gBAE1C,CACa5N,GAAQY,SAASC,UAE7B+C,IAAE,YAAYuH,YAAY,yCAAyCC,SAAS,kBAQtF,MAAOvF,GAQL,GANIA,EAAIC,WACMD,EAAIC,UAElBlC,IAAE,WAAWuH,YAAY,0CAA0CC,SAAS,gBAGxEvF,EAAIgI,SAAWhI,EAAIiI,cAGhB,GAAIjI,EAAI7F,QAAS,CAIpB4L,GAAQ/F,EAAI7F,SACZ6L,GAAQhG,EAAI7F,QAJE,GACA,QAQvB,KAEP0E,EAAOqB,kBAAkB1B,GAElBrE,GAGX,IAAI8L,GAAW,GAEf,SAASF,GAAQ5L,GACb,IAAK,IAAD,WACS+N,GAEL,IAAIC,EAAUhO,EAAQY,SAASmN,GAG/B,GAAoB,cAAhBC,EAAQC,KAAwC,cAAhBD,EAAQC,KAAwC,cAAhBD,EAAQC,IAAqB,CAClFD,EAAQC,IACfD,EAAQE,oBACA,yBAEJ,KACJF,EAAQG,IACA,OAASH,EAAQG,GAAK,KAIlC,GAAIH,EAAQI,MACRJ,EAAQI,MAAMrL,SAAQ,SAAUmJ,GAE5BN,GAAQM,EAAKlM,iBAEd,GAAIgO,EAAQK,UAAW,CAE1B,IAAIC,EAAa,EACjBN,EAAQK,UAAUtL,SAAQ,SAAUwL,GAChC,IAAIC,EACAR,EAAQS,mBACRD,EAAcR,EAAQS,iBAAiBH,IAEdA,IAA8BC,EAAS1M,OAE7C0M,EAASpN,cAEjC,CACoB,IAAnB6M,EAAQ7M,OACA,KAAOnB,EAAQ+B,OAAOgM,GAAgB,IAEpB,IAAnBC,EAAQ7M,QACP,KAAOnB,EAAQ0O,OAAOX,GAAgB,IAGlD,IAAI/D,EAAMhK,EAAQM,OAAOyN,GACL/C,GAAQhB,QAIZmC,IAARnC,GACQ,IAAMA,EAAM,IAGD,IAAnBgE,EAAQ7M,QAAmC,IAAnB6M,EAAQ7M,SACxB,UAEA,sBAGO,IAAnB6M,EAAQ7M,QACA,UAEZ2K,GAAShK,KAAKkM,EAAQC,IAAKjO,EAAQM,OAAOyN,OA3DtD,IAAK,IAAIA,KAAgB/N,EAAQY,SAAW,EAAnCmN,GA+DX,MAAOlI,GAIL,KAHS,CACLC,UAAWD,IAMvB,IAAI+G,GAAc,GAElB,SAASf,GAAQ7L,EAAS6N,EAASC,GAC/B,IAAK,IAAD,WACSC,GACL,IAAIC,EAAUhO,EAAQY,SAASmN,GAG/B,GAAoB,cAAhBC,EAAQC,KAAuC,cAAhBD,EAAQC,KAAuC,cAAhBD,EAAQC,KAAuC,cAAhBD,EAAQC,KAAuC,cAAhBD,EAAQC,KAAuC,cAAhBD,EAAQC,KAAuC,cAAhBD,EAAQC,IAAqB,CAC5MD,EAAQC,IAEfD,EAAQE,oBACA,yBAEJ,KACJF,EAAQG,IACA,OAASH,EAAQG,GAAK,KAOlC,GAAIH,EAAQI,MAAO,CAEfJ,EAAQI,MAAMrL,SAAQ,SAAUmJ,GAI5BL,GAAQK,EAAKlM,QAAS6N,EAASC,WAIhC,GAAIE,EAAQK,UAAW,CAE1B,IAAIC,EAAa,EACjBN,EAAQK,UAAUtL,SAAQ,SAAUwL,GAChC,IAAIC,EACAR,EAAQS,mBACRD,EAAcR,EAAQS,iBAAiBH,IAEdA,IAA8BC,EAAS1M,OAE7C0M,EAASpN,cAEjC,CACoB,IAAnB6M,EAAQ7M,OACA,KAAOnB,EAAQ+B,OAAOgM,GAAgB,IAEpB,IAAnBC,EAAQ7M,QACP,KAAOnB,EAAQ0O,OAAOX,GAAgB,IAGlD,IAAI/D,EAAMhK,EAAQM,OAAOyN,GACL/C,GAAQhB,QAIZmC,IAARnC,GACQ,IAAMA,EAAM,IAGD,IAAnBgE,EAAQ7M,QAAmC,IAAnB6M,EAAQ7M,SACxB,UAEA,sBAGO,IAAnB6M,EAAQ7M,QACA,UAKZyL,GAAY9K,KAAKkM,EAAQC,IAAKjO,EAAQM,OAAOyN,OAtEzD,IAAK,IAAIA,KAAgB/N,EAAQY,SAAW,EAAnCmN,GA0EX,MAAOlI,GAKL,KAJS,CACLC,UAAWD,EACXiI,QAASA,GAIjB,OAAOlB,GAuCX,IAAIW,GAAqB,IAAIlB,MA+D7B,IAGItC,GAAQjD,GAsBR6H,GAzBAC,GAAc,CACdC,KAAM,IAINC,GAAgBF,GAAYC,KAEhC,SAASE,GAAc9O,GACnB,IAAI+O,EACJA,EAAe/O,EAAMI,KAAKC,OAAO,aAEjC,IAAI,IAAI2M,EAAE,EAAEA,EAAE6B,GAAc3N,OAAO8L,IAC/B,IAAK,IAAItL,EAAI,EAAGA,EAAI4L,GAAmBpM,OAAQQ,IACvC4L,GAAmB5L,GAAnB,YAAuCmN,GAAc7B,IACjDM,GAAmB5L,GAAnB,YAAuCqN,IACvCjF,GAASwD,GAAmB5L,GAAnB,UACTmF,GAAQyG,GAAmB5L,GAAnB,UAERsN,GAAKhP,EAAO8J,GAAQjD,KAQxC,SAASoI,GAASjP,GAEd,OADA0O,GAAM1O,EAqCV,SAASyN,GAAUyB,GAEf,GAA0B,GAAtBA,EAAIC,OAAOC,QACXT,GAAYC,KAAK/M,KAAKqN,EAAIC,OAAO9L,OApCzC,SAAwBgM,GACpB,IAAIN,EACJA,EAAeL,GAAItO,KAAKC,OAAO,aAE/B,IAAK,IAAIqB,EAAI,EAAGA,EAAI4L,GAAmBpM,OAAQQ,IACvC4L,GAAmB5L,GAAnB,YAAuC2N,GACnC/B,GAAmB5L,GAAnB,YAAuCqN,IACvCjF,GAASwD,GAAmB5L,GAAnB,UACTmF,GAAQyG,GAAmB5L,GAAnB,UAERsN,GAAKN,GAAK5E,GAAQjD,GAAOwI,IA6BjCC,CAFiBJ,EAAIC,OAAO9L,WAG1B,CACF,IAAIkM,EAAQZ,GAAYC,KAAKY,QAAQN,EAAIC,OAAO9L,QACjC,IAAXkM,GACAZ,GAAYC,KAAKa,OAAOF,EAAO,GA3B3C,SAAyBF,GACrB,IAAIN,EACJA,EAAeL,GAAItO,KAAKC,OAAO,aAE/B,IAAK,IAAIqB,EAAI,EAAGA,EAAI4L,GAAmBpM,OAAQQ,IACvC4L,GAAmB5L,GAAnB,YAAuC2N,GACnC/B,GAAmB5L,GAAnB,YAAuCqN,IACvCjF,GAASwD,GAAmB5L,GAAnB,UACTmF,GAAQyG,GAAmB5L,GAAnB,UAERgO,GAAYL,IAoBpBM,CADiBT,EAAIC,OAAO9L,QAKpC,IAAIuM,GAAa,GACjB,SAASZ,GAAKhP,EAAM8J,EAAOjD,EAAMwI,GAC7B,IAAIQ,EAAKhG,GAAS7J,EAAO8J,GACrBM,EAAKyF,EAAG,GACRxF,EAAKwF,EAAG,GAERC,EAAS7P,SAASC,eAAe,YACjC+H,EAAM6H,EAAO5H,WAAW,MAE5BD,EAAIE,OACJF,EAAII,YACJJ,EAAIK,OAAO8B,EAAG,GAAIC,EAAG,IACrB,IAAK,IAAI3I,EAAI,EAAGA,GAAiB,EAAZ0I,EAAGlJ,OAAYQ,IAC5BA,EAAI,IAAM,GACVuG,EAAIM,OAAO6B,EAAG1I,GAAI2I,EAAG3I,EAAI,IAIjCuG,EAAIO,YACJP,EAAIQ,UAAYiC,GAAa7D,GAC7BoB,EAAIS,YAAc,GAClBT,EAAIU,SACJV,EAAIW,OACJX,EAAIY,UACJ+G,GAAWP,GAAkBS,EAGjC,SAASC,KACL,IACI9H,EADShI,SAASC,eAAe,YACpBgI,WAAW,MAGxB8H,EADU/P,SAASC,eAAe,cACnBgI,WAAW,MAC9BD,EAAIgI,UAAU,EAAE,EAAE,IAAI,KACtBD,EAAKC,UAAU,EAAE,EAAE,IAAI,KAG3B,SAASP,GAAYL,GACjBO,GAAWP,GAAgBa,MAAMzH,UAAU,UAC3CmH,GAAWP,GAAgBa,MAAMxH,YAAY,EJpbjD,IAAIiG,GAAc,CACdwB,KAAM,IAGV,SAASnM,GAAWkL,GAEhB,IAA2B,IAAvBA,EAAIC,OAAOC,QACXT,GAAYwB,KAAKtO,KAAKqN,EAAIC,OAAO9L,OACjC+M,GAAczB,GAAYwB,UACvB,CACH,IAAIZ,EAAQZ,GAAYwB,KAAKX,QAAQN,EAAIC,OAAO9L,QACjC,IAAXkM,GACAZ,GAAYwB,KAAKV,OAAOF,EAAO,GAEnCa,GAAczB,GAAYwB,ODpDlC7L,WAAoCY,YAAcA,EAClDZ,WAAoCU,YAAcA,IAClDqL,WAA0BnL,YAAcA,EACxCmL,WAA0BC,OAASA,IACnCD,WAA0BE,gBAAkBA,EAC5CF,SAEA,IAAIG,GAAoB,IACpBC,GAAgB,GAGpB,SAASC,GAAYC,GAOjB,IANA,IAAItM,EAAU,GACVuM,EAAe,GAEfC,EAAQF,EAAExB,OAAO0B,MACjBC,EAAW,GAENpP,EAAI,EAAGA,EAAImP,EAAM3P,OAAQQ,IAAK,CACnC,IAAIqP,EAAW,GACfD,EAASpP,GAAKN,WAAWyP,EAAMnP,GAAGsP,mBAAmB1L,WAAWjE,MAAM,KAAK,KAC3EuP,EAAalP,GAAK4C,UAAmCC,YAAYC,IAAIqM,EAAMnP,IAE3EqP,EAASD,SAAWA,EAASpP,GAC7BqP,EAAS1M,QAAUuM,EAAalP,GAEhC+O,GAAc5O,KAAKkP,GAIvBN,GAAcQ,MAAK,SAAUC,EAAGpG,GAC5B,OAAOoG,EAAEJ,SAAWhG,EAAEgG,YAI1B,IAAK,IAAIpP,EAAI,EAAGA,EAAImP,EAAM3P,OAAQQ,IAC9B2C,EAAQ3C,GAAK+O,GAAc/O,GAAG2C,SA0JtC,SAAqB8M,EAAUC,GAC3B,IAAI9H,EAAKrJ,SAASC,eAAe,cACjCgF,SAAmBoE,GACnBpE,YAAsBiM,EAASC,IAAajM,MAAK,SAAUnF,GACvD,IAAMqR,EAAWnM,6BAAuCoE,EAAItJ,GACrB,8BAAnCA,EAAMI,KAAKC,OAAO,cAAmF,kCAAnCL,EAAMI,KAAKC,OAAO,cACpF6E,eAAyBoE,EAAItJ,EAAOqR,GAEpC1R,EAAWK,GACXgJ,EAAShJ,GACTiP,GAASjP,GACT8O,GAAc9O,GAEdoQ,GAAc,IACd1B,GAAM1O,GAEmC,kCAAlCA,EAAMI,KAAKC,OAAO,YACzBE,MAAM,aAENA,MAAM,2DA9Jd+Q,CAAYjN,EAASmM,IACrBvF,GAAW4F,EAAM,MACjB1M,EAAS0M,EAAM,MAEN5Q,SAASC,eAAe,cAC9BqR,QAEH,SAAgBZ,GAGZA,EAAEa,kBACFb,EAAEc,iBAEF,IAAIlC,EAAQiB,GAGRjB,GAAS,GAAKA,EAAQlL,EAAQnD,OAC1ByP,EAAEe,OAAS,EACPnC,IAAUiB,KACVmB,GAAetN,EAASmM,GAAoB,GAC5CT,MAGAR,IAAUiB,KACVmB,GAAetN,EAASmM,GAAoB,GAC5CT,OAIR4B,GAAetN,EAASmM,IACxBT,MAGJ,OAAO,GAIf,IAAInJ,GAAsB,GAE1B,SAASwJ,GAAcf,GACnBzI,GAAsByI,EAI1B,IAkEIX,GAlEAvM,GAAa,GAqEjB,SAASwP,GAAeR,EAAUC,GAC9B,IAAI9H,EAAKrJ,SAASC,eAAe,cAoBjC,OAnBAgF,SAAmBoE,GACnBkH,GAAoBY,EACpBlM,YAAsBiM,EAASC,IAAajM,MAAK,SAAUnF,GACvD,IAAMqR,EAAWnM,6BAAuCoE,EAAItJ,GACrB,8BAAnCA,EAAMI,KAAKC,OAAO,cAAmF,kCAAnCL,EAAMI,KAAKC,OAAO,cACpF6E,eAAyBoE,EAAItJ,EAAOqR,GAEpC1R,EAAWK,GACXgJ,EAAShJ,GACTiP,GAASjP,GACT8O,GAAc9O,GE3L1B,SAAsBmC,EAAYyE,GAE9B,IAAIC,EAAQ,GACZA,EAAM,GAAK,UACXA,EAAM,GAAK,UACXA,EAAM,GAAK,UACXA,EAAM,GAAK,UACXA,EAAM,GAAK,UACXA,EAAM,GAAK,UACXA,EAAM,GAAK,UACXA,EAAM,GAAK,UACXA,EAAM,GAAK,UACXA,EAAM,GAAK,UAEX,IAAK,IAAInF,EAAI,EAAGA,EAAIkF,EAAoB1F,OAAQQ,IACH,OAArCkB,SAASgE,EAAoBlF,IAC7BiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IACL,MAArCjE,SAASgE,EAAoBlF,IACpCiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IACL,OAArCjE,SAASgE,EAAoBlF,IACpCiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IACL,OAArCjE,SAASgE,EAAoBlF,IACpCiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IACL,OAArCjE,SAASgE,EAAoBlF,IACpCiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IACL,OAArCjE,SAASgE,EAAoBlF,IACpCiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IACL,OAArCjE,SAASgE,EAAoBlF,IACpCiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IACN,MAArCjE,SAASgE,EAAoBlF,IACnCiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IACN,OAArCjE,SAASgE,EAAoBlF,IACnCiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IACN,IAArCjE,SAASgE,EAAoBlF,KACnCiF,EAAOxE,EAAYyE,EAAoBlF,GAAImF,EAAM,IF2JjD+K,CAAazP,GAAWqO,IAAoB5J,IAE5C8H,GAAM1O,GAENO,MAAM,2DAGPmO,GQjMX,SAASmD,GAAiB3C,GACtBA,EAAIsC,kBACJtC,EAAIuC,iBAGJ,IAAIZ,EAAQ3B,EAAI4C,aAAajB,MAE7B1M,EAAS0M,EAAM,IACCvM,UAAmCC,YAAYC,IAAIqM,EAAM,IAI7E,SAASkB,GAAe7C,GACpBA,EAAIsC,kBACJtC,EAAIuC,iBAEJvC,EAAI4C,aAAaE,WAAa,OCVnBC,OATf,SAA0BtB,GACtBA,EAAEa,kBACFb,EAAEc,iBAIFtN,EAFYwM,EAAExB,OAAO0B,MAEN,KCkBnBvM,WAAoCY,YAAcA,EAClDZ,WAAoCU,YAAcA,IAClDqL,WAA0BnL,YAAcA,EACxCmL,WAA0BC,OAASA,IACnCD,WAA0BE,gBAAkBA,EAC5CF,SACArL,IAAYM,WAAW4M,O,IAoTRC,G,kLA/SP,IAAMpE,EAAUqE,KAAKrE,QAGjBsE,EAAWpS,SAASC,eAAe,cACvCmS,EAAStO,iBAAiB,WAAYgO,IAAgB,GACtDM,EAAStO,iBAAiB,OAAQ8N,IAAkB,GAEpD9D,EAAQhK,iBAAiB,aAAa,SAAU4M,GAC5C,IAAI2B,EAAQ3B,EAAElH,MACV8I,EAAQ5B,EAAEjH,MACR8I,EAAc7B,EAAE8B,MAGtB,SAASC,EAAiB/B,GACtB,IAAMgC,EAAShC,EAAElH,MAAQ6I,EACnBZ,EAASf,EAAEjH,MAAQ6I,EAIzB,GAHAD,EAAQ3B,EAAElH,MACV8I,EAAQ5B,EAAEjH,MAEU,IAAhB8I,EAAmB,CACnB,IAAInB,EAAWnM,cAAwB6I,GACvCsD,EAASuB,YAAYvQ,GAAMsQ,EAAStB,EAASwB,MAC7CxB,EAASuB,YAAYxQ,GAAMsP,EAASL,EAASwB,MAC7C3N,cAAwB6I,EAASsD,QAE9B,GAAoB,IAAhBmB,EAAmB,CAC1B,IAAInB,EAAWnM,cAAwB6I,GACvCsD,EAASyB,IAAIC,aAAgBJ,EAAStB,EAASwB,MAC/CxB,EAASyB,IAAIE,cAAiBtB,EAASL,EAASwB,MAChD3N,cAAwB6I,EAASsD,GAEjCpR,SAASC,eAAe,cAAcC,YAAc,SAAWqC,KAAKyQ,MAAM5B,EAASyB,IAAIC,aACjF,IAAMvQ,KAAKyQ,MAAM5B,EAASyB,IAAIE,mBAGjC,GAAoB,IAAhBR,EAAmB,CAC1B,IAAInB,EAAWnM,cAAwB6I,GACvCsD,EAASwB,OAAUnB,EAAS,IAC5BxM,cAAwB6I,EAASsD,GACjCpR,SAASC,eAAe,eAAeC,YAAc,QAAUkR,EAASwB,MAAQ,KASxF5S,SAAS8D,iBAAiB,YAAa2O,GACvCzS,SAAS8D,iBAAiB,WAN1B,SAASmP,IACLjT,SAASkT,oBAAoB,YAAaT,GAC1CzS,SAASkT,oBAAoB,UAAWD,W,+BAS1C,IAAD,OACL,OACI,yBAAKE,GAAG,iBAAiBC,UAAW,kBAChC,4DACI,2BAAOjQ,KAAK,OAAOkQ,SAAU,SAAC3C,GAC1BsB,GAAiBtB,MAFzB,YAKA,mDACI,2BAAOvN,KAAK,OAAOgQ,GAAG,aAAa9P,KAAK,WAAWiQ,gBAAiB,GAAIC,UAAW,GAAIC,UAAQ,EACxFH,SAAU,SAAC3C,GACPD,GAAYC,OAG3B,wBAAIyC,GAAG,YAEP,yBAAKC,UAAW,QACZ,6BACI,4BAAQK,QAAS,YCzFzC,WACI,IAAMC,EAAYtD,YAClBA,UAAyBsD,GACzBtD,gBAA+B,QAAS,CAACuD,gBAAiB,IDuFlCC,KADJ,SADJ,WAMI,4BAAQH,QAAS,YCtFzC,WACI,IAAMI,EAAazD,aACnBA,UAAyByD,GACzBzD,gBAA+B,SAAU,CAACuD,gBAAiB,IDoFnCG,KADJ,UANJ,WAWI,4BAAQL,QAAS,YC7BzC,WACI,IAAMM,EAAoB3D,oBAC1BA,UAAyB2D,GACzB3D,gBAA+B,gBAAiB,CAACuD,gBAAiB,ID2B1CK,KADJ,UAXJ,WAgBI,4BAAQP,QAAS,YC5BzC,WACI,IAAMQ,EAAmB7D,mBACzBA,UAAyB6D,GACzB7D,gBAA+B,eAAgB,CAACuD,gBAAiB,ID0BzCO,KADJ,aAhBJ,WAqBI,4BAAQT,QAAS,YC/FzC,WACI,IAAMU,EAAa/D,aACnBA,UAAyB+D,GACzB/D,gBAA+B,SAAU,CAACuD,gBAAiB,ID6FnCS,KADJ,SArBJ,WA0BI,4BAAQX,QAAS,YC9FzC,WACI,IAAM3F,EAAU9N,SAASC,eAAe,cACxC6N,EAAQmC,MAAMoE,MAAQ,QACtBvG,EAAQmC,MAAMqE,OAAS,QACvBrP,SAAmB6I,GD2FKyG,KADJ,WA1BJ,WA+BI,4BAAQd,QAAS,YC5FzC,WACI,IAAM3F,EAAU9N,SAASC,eAAe,cACxC6N,EAAQmC,MAAMoE,MAAQ,QACtBvG,EAAQmC,MAAMqE,OAAS,QACvBrP,SAAmB6I,GDyFK0G,KADJ,WA/BJ,YAqCA,6BACI,4BAAQf,QAAS,YC3FzC,WACI,IAAM3F,EAAU9N,SAASC,eAAe,cAClCmR,EAAWnM,cAAwB6I,GACzCsD,EAASqD,QAAUrD,EAASqD,OAC5BxP,cAAwB6I,EAASsD,GDwFTsD,KADJ,iBADJ,WAMI,4BAAQjB,QAAS,YCzFzC,WACI,IAAM3F,EAAU9N,SAASC,eAAe,cAClCmR,EAAWnM,cAAwB6I,GACzCsD,EAASuD,kBAAoBvD,EAASuD,iBACtC1P,cAAwB6I,EAASsD,GDsFTwD,KADJ,wBANJ,WAWI,4BAAQnB,QAAS,YCvFzC,WACI,IAAM3F,EAAU9N,SAASC,eAAe,cAClCmR,EAAWnM,cAAwB6I,GACzCsD,EAASyD,OAASzD,EAASyD,MAC3B5P,cAAwB6I,EAASsD,GDoFT0D,KADJ,mBAXJ,WAgBI,4BAAQrB,QAAS,YCrFzC,WACI,IAAM3F,EAAU9N,SAASC,eAAe,cAClCmR,EAAWnM,cAAwB6I,GACzCsD,EAAS2D,OAAS3D,EAAS2D,MAC3B9P,cAAwB6I,EAASsD,GDkFT4D,KADJ,iBAhBJ,WAqBI,4BAAQvB,QAAS,YCnFzC,WACI,IAAM3F,EAAU9N,SAASC,eAAe,cAClCmR,EAAWnM,cAAwB6I,GACzCsD,EAAS6D,UAAY,GACrBhQ,cAAwB6I,EAASsD,GDgFT8D,KADJ,aArBJ,aA4BJ,yBAAK9B,UAAW,SACZ,4BACI,8DACA,8DACA,uDACA,2DACA,iEAGR,6BAzFJ,IAyFc,6BAzFd,IAyFwB,6BACpB,yBAAK+B,MAAM,QACP,6BACI,yBAAKhC,GAAG,oBAAoBC,UAAU,UACjCgC,cAAc,eAAeC,QAAS,SAAC3E,MAExC,yBAAKyC,GAAG,aAAaC,UAAU,kBAC1BkC,IAAK,SAAAC,GACD,EAAKzH,QAAUyH,IAEpB,4BAAQpC,GAAG,WAAWC,UAAW,SAAUiB,MAAO,IAAKC,OAAQ,MAC/D,4BAAQnB,GAAG,aAAaC,UAAW,SAAUiB,MAAO,IAAKC,OAAQ,OAErE,qCAAKnB,GAAG,UAAUC,UAAU,WAA5B,YAAgD,WAAhD,8BAIA,qCAAKD,GAAG,WAAWC,UAAU,WAA7B,YAAiD,YAAjD,cAGA,qCAAKD,GAAG,aAAaC,UAAU,WAA/B,YAAmD,cAAnD,UAGA,qCAAKD,GAAG,cAAcC,UAAU,WAAhC,YAAoD,eAApD,WAKR,6BACI,6BAAK,0BAAMD,GAAG,iBACd,6BAAK,0BAAMA,GAAG,gBAEd,6BAAK,0BAAMA,GAAG,WAAT,kBACL,6BAAK,0BAAMA,GAAG,YAAT,gBACL,6BAAK,0BAAMA,GAAG,eAAT,sBAKb,yBAAKC,UAAW,SACZ,yBAAKA,UAAU,YACX,wBAAID,GAAG,MAAP,eAEJ,yBAAKC,UAAU,aACX,wBAAID,GAAG,OAAP,cAGR,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAChJ,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAAS,6BAkFtD,yBAAKC,UAAU,SACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKD,GAAG,QACJ,yBAAKC,UAAU,eACX,yCAMpB,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKD,GAAG,SACJ,yBAAKC,UAAU,eACX,yCAMpB,yBAAKD,GAAI,QAASqC,IAAK,U,GA3SVC,IAAMC,WErBpBC,G,uKAPX,OAAO,6BACL,kBAAC,GAAD,W,GAHYF,IAAMC,WCOJE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFnW,SAASC,eAAe,SDyHpB,kBAAmBmW,WACrBA,UAAUC,cAAc1S,MACrBuB,MAAK,SAAAoR,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.658630e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\n\r\nfunction dicomParse(image) {\r\n    try {\r\n        // print the dicom information\r\n        document.getElementById('patient').textContent = 'Patient ID : ' + image.data.string('x00100020');\r\n        document.getElementById('topleft').textContent = 'Patient Name : ' + image.data.string('x00100010') + '\\n' + 'Patient Sex : ' + image.data.string('x00100040');\r\n        document.getElementById('topright').textContent = 'Modality : ' + image.data.string('x00080060');\r\n        document.getElementById('modality').textContent = 'Modality : ' + image.data.string('x00080060');\r\n        document.getElementById('instanceUID').textContent = 'Instance UID : ' + image.data.string('x00080018');\r\n\r\n        /*\r\n        document.getElementById('studyUID').textContent = 'Study UID : ' + image.data.string('x0020000d');\r\n        document.getElementById('seriesUID').textContent = 'Series UID : ' + image.data.string('x0020000e');\r\n        document.getElementById('instanceUID').textContent = 'Instance UID : ' + image.data.string('x00080018');\r\n        document.getElementById('frameUID').textContent = 'Frame of Reference UID : ' + image.data.string('x00200052');\r\n\r\n        document.getElementById('imageOrientation').textContent = 'Image Orientation : ' + image.data.string('x00200037');\r\n        document.getElementById('pixelSpacing').textContent = 'Pixel Spacing : ' + image.data.string('x00280030');\r\n        document.getElementById('imagePosition').textContent = 'Image Position : ' + image.data.string('x00200032');\r\n         */\r\n\r\n    } catch (ex) {\r\n        alert('parsing error');\r\n    }\r\n}\r\n\r\nexport default dicomParse;\r\n","import {gridScaling} from \"../Loader/firstLoader\";\r\n\r\nlet dose_json_array = [];\r\nlet Rows, Columns, Number_of_Frames;\r\n\r\nfunction dose_pixel_Data_parse(image, dataSet) {\r\n    let pixelDataElement = dataSet.elements.x7fe00010;\r\n    let pixel_data = new Uint16Array(dataSet.byteArray.buffer, pixelDataElement.byteOffset, pixelDataElement.length / 4);\r\n\r\n    let pixelSpacing = parseFloat(image.data.string('x00280030').split('\\\\')[0]);\r\n    let gridFrameOffsetVector = image.data.string('x3004000c');\r\n    let gridFrameOffsetVectorArray = gridFrameOffsetVector.split('\\\\');\r\n\r\n\r\n    let imagePosition = image.data.string('x00200032');\r\n    let imagePositionArray_Sz = parseFloat(imagePosition.split('\\\\')[2]);\r\n    let Sz = [];\r\n    Sz[0] = imagePositionArray_Sz;\r\n\r\n\r\n    for (let i = 1; i <gridFrameOffsetVectorArray.length; i++) {\r\n        Sz[i] = Sz[i - 1] + pixelSpacing;\r\n    }\r\n\r\n    for (let i = 0; i <gridFrameOffsetVectorArray.length; i++) {\r\n        let dose_json = {};\r\n        dose_json.Sz = Sz[i];\r\n        dose_json.offset = gridFrameOffsetVectorArray[i];\r\n\r\n        dose_json_array.push(dose_json);\r\n    }\r\n\r\n\r\n    Rows = parseFloat(dataSet.uint16('x00280010'));\r\n    Columns = parseFloat(dataSet.uint16('x00280011'));\r\n    Number_of_Frames = parseFloat(image.data.string('x00280008'));\r\n\r\n    gridScaling(image, pixel_data, Rows, Columns, Number_of_Frames);\r\n}\r\n\r\n\r\nexport {dose_pixel_Data_parse}\r\n","import * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport dicomParser from \"dicom-parser\";\r\nimport {dose_pixel_Data_parse} from \"./dosePixelDataParse\";\r\nimport {drawDose} from \"./drawDose\";\r\nimport voxelCal from \"../RT_STRUCTURE/pixel2voxel\";\r\n\r\nlet dataSet;\r\nlet Rows, Columns, Number_of_Frames;\r\n\r\nfunction doseFile(file) {\r\n    const imageId = cornerstoneWadoImageLoader.wadouri.fileManager.add(file);\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (file) {\r\n        let arrayBuffer = reader.result;\r\n        // Here we have the file data as an ArrayBuffer.  dicomParser requires as input a\r\n        // Uint8Array so we create that here\r\n        let byteArray = new Uint8Array(arrayBuffer);\r\n\r\n        // set a short timeout to do the parse so the DOM has time to update itself with the above message\r\n        setTimeout(function () {\r\n            // Invoke the paresDicom function and get back a DataSet object with the contents\r\n            try {\r\n\r\n                dataSet = dicomParser.parseDicom(byteArray);\r\n                Rows = parseFloat(dataSet.uint16('x00280010'));\r\n                Columns = parseFloat(dataSet.uint16('x00280011'));\r\n                Number_of_Frames = parseFloat(dataSet.string('x00280008'));\r\n\r\n\r\n                doseData(imageId, dataSet);\r\n            } catch (err) {\r\n                var message = err;\r\n                if (err.exception) {\r\n                    message = err.exception;\r\n                }\r\n            }\r\n        }, 10);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    return dataSet;\r\n}\r\n\r\nlet imgOriArr = [];\r\nlet imgPosArr = [];\r\nlet pixelSpaceArr = [];\r\n\r\nfunction doseData(imageId, dataSet) {\r\n    let img = 0;\r\n\r\n    cornerstone.loadImage(imageId).then(function (image) {\r\n        if (image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            let dose_pixelSpacing = 0;\r\n            pixelSpaceArr = [];\r\n\r\n            dose_pixelSpacing = image.data.string('x00280030');\r\n            dose_pixelSpacing = dose_pixelSpacing.toString();\r\n            pixelSpaceArr = dose_pixelSpacing.split(\"\\\\\");\r\n\r\n            let imgPos = image.data.string('x00200032');\r\n            imgPosArr = imgPos.split(\"\\\\\");\r\n\r\n            let imgOri = image.data.string('x00200037');\r\n            imgOri = imgOri.toString();\r\n            imgOriArr = imgOri.split(\"\\\\\");\r\n\r\n\r\n            dose_pixel_Data_parse(image, dataSet);\r\n        }\r\n        img = image;\r\n    });\r\n\r\n}\r\n\r\nfunction findXY(dose_value, checkVal_check_dose, color) {\r\n    let Vi = [], Vj = [];\r\n    let cnt = 0;\r\n\r\n    let output2 = [];\r\n\r\n    for (let y = 0; y < Columns; y++) {\r\n        for (let x = 0; x < Rows; x++) {\r\n            if (dose_value[y][x] >= parseInt(checkVal_check_dose)) {\r\n\r\n                output2.push(dose_value[y][x]);\r\n\r\n                Vi[cnt] = x;\r\n                Vj[cnt] = y;\r\n                cnt++;\r\n            }\r\n        }\r\n    }\r\n    document.getElementById('dose2').innerHTML = '<ul>' + output2.join(',') + '</ul>';\r\n\r\n\r\n    let coords = [];\r\n    for (let i = 0; i < cnt; i++) {\r\n        coords[i] = [];\r\n    }\r\n    for (let i = 0; i < cnt; i++) {\r\n        coords[i][0] = Vi[i];\r\n        coords[i][1] = Vj[i];\r\n    }\r\n\r\n    let ch = [];\r\n    for (let i = 0; i < ch.length; i++) {\r\n        ch[i] = [];\r\n    }\r\n    ch = require('graham-scan-convex-hull')(coords);\r\n\r\n    let ch_x = [];\r\n    let ch_y = [];\r\n\r\n    for (let i = 0; i < ch.length; i++) {\r\n        ch_x[i] = [];\r\n        ch_y[i] = [];\r\n    }\r\n\r\n    for (let i = 0; i < ch.length; i++) {\r\n        ch_x[i] = ch[i][0];\r\n        ch_y[i] = ch[i][1];\r\n    }\r\n\r\n    //drawDose(ch_x, ch_y, color);\r\n\r\n    doseAlign(ch_x, ch_y, color);\r\n}\r\n\r\nlet Sx, Sy, Di, Dj;\r\nlet CT_Sx, CT_Sy, CT_Di, CT_Dj, CT_Xx, CT_Xy, CT_Yx, CT_Yy ;\r\n\r\nfunction getVoxelCalValue(Sx, Sy, Di, Dj, Xx, Xy, Xz, Yx, Yy, Yz) {\r\n    CT_Sx = Sx;\r\n    CT_Sy = Sy;\r\n    CT_Di = Di;\r\n    CT_Dj = Dj;\r\n    CT_Xx = Xx;\r\n    CT_Xy = Xy;\r\n    CT_Yx = Yx;\r\n    CT_Yy = Yy;\r\n\r\n}\r\n\r\nfunction doseAlign(Vi, Vj, color) {\r\n    Sx = parseFloat(imgPosArr[0]);\r\n    Sy = parseFloat(imgPosArr[1]);\r\n\r\n    let Xx = parseFloat(imgOriArr[0]);\r\n    let Xy = parseFloat(imgOriArr[1]);\r\n    let Yx = parseFloat(imgOriArr[3]);\r\n    let Yy = parseFloat(imgOriArr[4]);\r\n\r\n    Di = parseFloat(pixelSpaceArr[0]);\r\n    Dj = parseFloat(pixelSpaceArr[1]);\r\n\r\n    let Px = [];\r\n    let Py = [];\r\n\r\n    for (let i = 0; i < Vi.length; i++) {\r\n        Px[i] = ((Xx * Di * Vi[i]) + (Yx * Dj * Vj[i]) + Sx);\r\n    }\r\n    for (let i = 0; i < Vj.length; i++) {\r\n        Py[i] = ((Xy * Di * Vi[i]) + (Yy * Dj * Vj[i]) + Sy);\r\n    }\r\n\r\n\r\n\r\n    let CT_Px = [], CT_Py = [];\r\n\r\n\r\n    for (let i = 0; i < Vi.length; i++) {\r\n        CT_Px[i] = (CT_Xx * CT_Di * Vi[i]) + (CT_Yx * CT_Dj * Vj[i]) + CT_Sx;\r\n\r\n    }\r\n    for (let i = 0; i < Vj.length; i++) {\r\n        CT_Py[i] = (CT_Xy * CT_Di * Vi[i]) + (CT_Yy * CT_Dj * Vj[i]) + CT_Sy;\r\n    }\r\n\r\n    let output = [];\r\n\r\n    for (let i = 0; i < CT_Px.length; i++) {\r\n        output.push('[' + CT_Px[i] + ',' + CT_Py[i] + ']');\r\n    }\r\n\r\n    document.getElementById('dose').innerHTML = '<ul>' + output.join(',') + '</ul>';\r\n\r\n    drawDose(CT_Px, CT_Py, color);\r\n\r\n\r\n}\r\n\r\nexport {doseFile, doseData, findXY, getVoxelCalValue}\r\n","import dicomParse from \"../dicomParse\";\r\nimport dicomParser from \"dicom-parser\";\r\nimport Hammer from \"hammerjs\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstoneMath from \"cornerstone-math\"\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport voxelCal from \"../RT_STRUCTURE/pixel2voxel\";\r\nimport {structFile, reset, getImage, sendDrawImage} from \"../RT_STRUCTURE/drawROI\";\r\nimport {doseFile} from \"../RT_DOSE/doseDataParser\";\r\nimport {Dose_Checkbox, Dose_checkEvent} from \"../RT_DOSE/doseCheckbox\";\r\nimport {checkAndDraw} from \"../RT_DOSE/drawDose\";\r\n\r\ncornerstoneWadoImageLoader.external.cornerstone = cornerstone\r\ncornerstoneWadoImageLoader.external.dicomParser = dicomParser\r\ncornerstoneTools.external.cornerstone = cornerstone\r\ncornerstoneTools.external.Hammer = Hammer;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\r\ncornerstoneTools.init();\r\n\r\nlet currentImageIndex = 110; //for dose z coords setting\r\nlet fileJsonArray = [];\r\n\r\n//Import a list of file names from a selected folder\r\nfunction imageIdList(e) {\r\n    let imageId = []; //image ID list from file name list\r\n    let temp_imageId = [];\r\n\r\n    let files = e.target.files;\r\n    let fileName = [];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        let fileJson = {};\r\n        fileName[i] = parseFloat(files[i].webkitRelativePath.toString().split('.')[11]);\r\n        temp_imageId[i] = cornerstoneWadoImageLoader.wadouri.fileManager.add(files[i])\r\n\r\n        fileJson.fileName = fileName[i];\r\n        fileJson.imageId = temp_imageId[i];\r\n\r\n        fileJsonArray.push(fileJson);\r\n    }\r\n\r\n    //file name sorting\r\n    fileJsonArray.sort(function (a, b) {\r\n        return a.fileName - b.fileName;\r\n    })\r\n\r\n    //assign imageId value\r\n    for (let i = 0; i < files.length; i++) {\r\n        imageId[i] = fileJsonArray[i].imageId;\r\n    }\r\n\r\n    /*  // show file list\r\n        let output = document.getElementById(\"listing\");\r\n        for (let i = 0; i < files.length; i++) {\r\n            let item = document.createElement(\"li\");\r\n            item.innerHTML = fileName[i];\r\n            output.appendChild(item);\r\n        }\r\n     */\r\n\r\n    //Index 111 : RT DOSE FILE\r\n    //Index 112 : RT PLAN FILE\r\n    //Index 113 : RT STRUCTURE FILE\r\n    firstLoader(imageId, currentImageIndex);\r\n    structFile(files[113]);\r\n    doseFile(files[111]);\r\n\r\n    let el = document.getElementById('dicomImage');\r\n    el.onwheel = wheelE;\r\n\r\n    function wheelE(e) {\r\n        // Firefox e.detail > 0 scroll back, < 0 scroll forward\r\n        // chrome/safari e.wheelDelta < 0 scroll back, > 0 scroll forward\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        let index = currentImageIndex;\r\n\r\n\r\n        if (index >= 0 || index < imageId.length) {\r\n            if (e.deltaY < 0) {\r\n                if (index === currentImageIndex) {\r\n                    updateTheImage(imageId, currentImageIndex + 1); //update images\r\n                    reset();\r\n                }\r\n            } else {\r\n                if (index === currentImageIndex) {\r\n                    updateTheImage(imageId, currentImageIndex - 1); //update images\r\n                    reset();\r\n                }\r\n            }\r\n        } else {\r\n            updateTheImage(imageId, currentImageIndex); //update images\r\n            reset();\r\n        }\r\n        // Prevent page fom scrolling\r\n        return false;\r\n    }\r\n}\r\n\r\nlet checkVal_check_dose = [];\r\n\r\nfunction getCheckValue(checkVal_check) {\r\n    checkVal_check_dose = checkVal_check;\r\n}\r\n\r\n\r\nlet dose_value = [];\r\n\r\n//calculate Dose value\r\nfunction gridScaling(image, pixel_data, Rows, Columns, Number_of_Frames) {\r\n    let Dose_Grid_Scaling = parseFloat(image.data.string('x3004000e'));\r\n    let dose_value_temp = [];\r\n\r\n\r\n    //초기화\r\n    for (let i = 0; i < Number_of_Frames; i++) {\r\n        dose_value_temp[i] = [];\r\n    }\r\n\r\n    //calculate dose value\r\n    for (let i = 0; i < pixel_data.length; i++) {\r\n        dose_value_temp[i] = pixel_data[i] * Dose_Grid_Scaling * 100 * 40;\r\n    }\r\n\r\n    let cnt = 0;\r\n\r\n    for (let z = 110; z > 110 - Number_of_Frames; z--) {\r\n\r\n        dose_value[z] = [];\r\n\r\n    }\r\n    for (let z = 110; z > 110 - Number_of_Frames; z--) {\r\n        for (let y = 0; y < Columns; y++) {\r\n            dose_value[z][y] = [];\r\n        }\r\n    }\r\n    for (let z = 110; z > 110 - Number_of_Frames; z--) {\r\n        for (let y = 0; y < Columns; y++) {\r\n            for (let x = 0; x < Rows; x++) {\r\n\r\n                dose_value[z][y][x] = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    //convert array to 3 dimension\r\n    for (let z = 110; z > 110 - Number_of_Frames; z--) {\r\n        for (let y = 0; y < Columns; y++) {\r\n            for (let x = 0; x < Rows; x++) {\r\n\r\n                dose_value[z][y][x] = dose_value_temp[cnt];\r\n                cnt++;\r\n            }\r\n        }\r\n    }\r\n\r\n    //find max dose value\r\n    let max = []; //max dose z array\r\n    let count=0;\r\n    for (let z = 110; z > 110 - Number_of_Frames; z--) {\r\n        max[count] = (Math.max.apply(...dose_value[z]));\r\n        count++;\r\n    }\r\n\r\n    let dosemax = 0;\r\n    dosemax = Math.max(...max); //dose max\r\n\r\n    Dose_Checkbox(dosemax);\r\n    Dose_checkEvent();\r\n}\r\n\r\n\r\nlet img;\r\n\r\n// show image #1 initially\r\nfunction updateTheImage(imageIds, imageIndex) {\r\n    let el = document.getElementById('dicomImage');\r\n    cornerstone.enable(el)\r\n    currentImageIndex = imageIndex;\r\n    cornerstone.loadImage(imageIds[imageIndex]).then(function (image) {\r\n        const viewport = cornerstone.getDefaultViewportForImage(el, image);\r\n        if (image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.2' || image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            cornerstone.displayImage(el, image, viewport);\r\n\r\n            dicomParse(image);\r\n            voxelCal(image);\r\n            getImage(image);\r\n            sendDrawImage(image);\r\n\r\n            checkAndDraw(dose_value[currentImageIndex], checkVal_check_dose);\r\n\r\n            img = image;\r\n        } else {\r\n            alert(\"ERROR: Confirm this image's modality : CT , MRI ... \");\r\n        }\r\n    });\r\n    return img;\r\n}\r\n\r\n\r\n//load one CT Image from local file\r\nfunction firstLoader(imageIds, imageIndex) {\r\n    let el = document.getElementById('dicomImage');\r\n    cornerstone.enable(el)\r\n    cornerstone.loadImage(imageIds[imageIndex]).then(function (image) {\r\n        const viewport = cornerstone.getDefaultViewportForImage(el, image);\r\n        if (image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.2' || image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            cornerstone.displayImage(el, image, viewport);\r\n\r\n            dicomParse(image);\r\n            voxelCal(image);\r\n            getImage(image);\r\n            sendDrawImage(image);\r\n\r\n            getCheckValue([]);\r\n            img = image;\r\n\r\n        } else if (image.data.string('x0080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            alert('dose file')\r\n        } else {\r\n            alert(\"ERROR: Confirm this image's modality : CT , MRI ... \");\r\n        }\r\n    });\r\n\r\n    return img;\r\n}\r\n\r\nexport {firstLoader, imageIdList, gridScaling, getCheckValue}\r\n\r\n\r\n","import $ from \"jquery\";\r\nimport {getCheckValue} from \"../Loader/firstLoader\";\r\n\r\nfunction Dose_Checkbox(dosemax) {\r\n    let level = [];\r\n    let pres = 40 * 100; //cGy\r\n    level[0] = parseInt(dosemax);\r\n    level[1] = pres;\r\n    level[2] = pres * 0.98;\r\n    level[3] = pres * 0.95;\r\n    level[4] = pres * 0.9;\r\n    level[5] = pres * 0.8;\r\n    level[6] = pres * 0.7;\r\n    level[7] = pres * 0.5;\r\n    level[8] = pres * 0.3;\r\n    level[9] = 0;\r\n\r\n    level.forEach(function (n) {\r\n        let ul = document.getElementById('ul2');\r\n        let li = document.createElement('li');\r\n\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = 'checkbox';\r\n        checkbox.value = n;\r\n        checkbox.name = 'dose';\r\n\r\n        li.append(checkbox);\r\n\r\n        let text = `${parseInt((n / pres) * 100)}% / ${n}cGy`;\r\n        li.append(document.createTextNode(text));\r\n        ul.append(li);\r\n    });\r\n}\r\n\r\nfunction Dose_checkEvent() {\r\n    /*Event Listener*/\r\n    $(document).ready(function () {\r\n        let dose = document.getElementsByName(\"dose\");\r\n        if (dose[0].addEventListener) {\r\n            for (let i = 0; i < dose.length; i++) {\r\n                dose[i].addEventListener(\"change\", addDoseSet, false);\r\n            }\r\n        } else if (dose[0].attachEvent) {\r\n            for (let i = 0; i < dose.length; i++) {\r\n                dose[i].attachEvent(\"onchange\", addDoseSet);\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\n\r\nlet information = {\r\n    Dose: []\r\n}\r\n\r\nfunction addDoseSet(evt) {\r\n\r\n    if (evt.target.checked === true) {\r\n        information.Dose.push(evt.target.value);\r\n        getCheckValue(information.Dose);\r\n    } else {\r\n        let index = information.Dose.indexOf(evt.target.value);\r\n        if (index !== -1) {\r\n            information.Dose.splice(index, 1);\r\n        }\r\n        getCheckValue(information.Dose);\r\n    }\r\n}\r\n\r\nexport {Dose_Checkbox, Dose_checkEvent};\r\n","import {findXY} from \"./doseDataParser\";\r\n\r\nfunction checkAndDraw(dose_value, checkVal_check_dose) {\r\n\r\n    let color = [];\r\n    color[0] = '#780000';\r\n    color[1] = '#EE4500';\r\n    color[2] = '#FFA500';\r\n    color[3] = '#FFFF00';\r\n    color[4] = '#00FF00';\r\n    color[5] = '#008B00';\r\n    color[6] = '#00FFFF';\r\n    color[7] = '#0000FF';\r\n    color[8] = '#000080';\r\n    color[9] = '#C93F98';\r\n\r\n    for (let i = 0; i < checkVal_check_dose.length; i++) {\r\n        if (parseInt(checkVal_check_dose[i]) === 4185) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[0]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 4000) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[1]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 3920) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[2]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 3800) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[3]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 3600) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[4]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 3200) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[5]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 2800) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[6]);\r\n        }else if (parseInt(checkVal_check_dose[i]) === 2000) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[7]);\r\n        }else if (parseInt(checkVal_check_dose[i]) === 1200) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[8]);\r\n        }else if (parseInt(checkVal_check_dose[i]) === 0) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[9]);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction drawDose(Px, Py, color) {\r\n\r\n    let canvas = document.getElementById('doseCanvas');\r\n    let ctx = canvas.getContext('2d');\r\n\r\n    ctx.save();\r\n    ctx.translate(150,150);\r\n    //draw path\r\n    ctx.beginPath();\r\n    ctx.moveTo(Px[0], Py[0]);\r\n    for (let i = 1; i < Px.length; i++) {\r\n        ctx.lineTo(Px[i], Py[i]);\r\n    }\r\n    ctx.closePath();\r\n\r\n    ctx.fillStyle = color;\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.restore();\r\n\r\n}\r\n\r\nexport {drawDose, checkAndDraw}\r\n","import React from \"react\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport {getVoxelCalValue} from \"../RT_DOSE/doseDataParser\";\r\n\r\n//caculate voxel from pixel\r\nfunction voxelCal(image) {\r\n    let modality = image.data.string('x00080060');\r\n    let SOP_UID = image.data.string('x00080016');\r\n    if (modality === ('CT') || SOP_UID === '1.2.840.10008.5.1.4.1.1.481.2' || modality === 'RTDOSE') {\r\n        let imgPos = image.data.string('x00200032');\r\n        let imgPosArr = imgPos.split(\"\\\\\");\r\n\r\n        let Sx = (parseFloat(imgPosArr[0]) * 10) / 10;\r\n        let Sy = (parseFloat(imgPosArr[1]) * 10) / 10;\r\n        let Sz = (parseFloat(imgPosArr[2]) * 10) / 10;\r\n\r\n        let imgOri = image.data.string('x00200037');\r\n        imgOri = imgOri.toString();\r\n        let imgOriArr = imgOri.split(\"\\\\\");\r\n\r\n        let Xx = (parseFloat(imgOriArr[0]) * 10) / 10;\r\n        let Xy = (parseFloat(imgOriArr[1]) * 10) / 10;\r\n        let Xz = (parseFloat(imgOriArr[2]) * 10) / 10;\r\n        let Yx = (parseFloat(imgOriArr[3]) * 10) / 10;\r\n        let Yy = (parseFloat(imgOriArr[4]) * 10) / 10;\r\n        let Yz = (parseFloat(imgOriArr[5]) * 10) / 10;\r\n\r\n        let pixelSpace = image.data.string('x00280030');\r\n        pixelSpace = pixelSpace.toString();\r\n        let pixelSpaceArr = pixelSpace.split(\"\\\\\");\r\n\r\n        let Di = parseFloat((pixelSpaceArr[0]) * 10) / 10;\r\n        let Dj = parseFloat((pixelSpaceArr[1]) * 10) / 10;\r\n\r\n        let el = document.getElementById('dicomImage');\r\n\r\n        /*\r\n        document.getElementById('Sxyz').textContent = 'Sx : ' + Sx + ', Sy : ' + Sy + ', Sz : ' + Sz;\r\n        document.getElementById('Xxyz').textContent = 'Xx : ' + Xx + ', Xy : ' + Xy + ', Xz : ' + Xz;\r\n        document.getElementById('Yxyz').textContent = 'Yx : ' + Yx + ', Yy : ' + Yy + ', Yz : ' + Yz;\r\n        document.getElementById('Dij').textContent = 'Di : ' + Di + ', Dj : ' + Dj;\r\n        */\r\n\r\n        el.addEventListener('mousemove', function (event) {\r\n            const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n            //  document.getElementById('coords').textContent = \"pageX=\" + event.pageX + \", pageY=\" + event.pageY + \", pixelX=\" + pixelCoords.x + \", pixelY=\" + pixelCoords.y;\r\n\r\n            let Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n            let Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n            let Pz = (Xz * Di * pixelCoords.x) + (Yz * Dj * pixelCoords.y) + Sz;\r\n\r\n            //Px = Math.floor(Px * 10) / 10;\r\n            // Py = Math.floor(Py * 10) / 10;\r\n            document.getElementById('voxelCoords').textContent = \"Px = \" + Px + \", Py = \" + Py + \", Pz = \" + Pz;\r\n        });\r\n\r\n        el.addEventListener('dblclick', function (event) {\r\n            const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n            //   document.getElementById('pixelValue').textContent = \"pageX=\" + event.pageX + \", pageY=\" + event.pageY + \", pixelX=\" + pixelCoords.x + \", pixelY=\" + pixelCoords.y;\r\n\r\n            let Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n            let Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n            let Pz = (Xz * Di * pixelCoords.x) + (Yz * Dj * pixelCoords.y) + Sz;\r\n\r\n            // Px = Math.floor(Px * 10) / 10;\r\n            //  Py = Math.floor(Py * 10) / 10;\r\n\r\n            document.getElementById('voxelValue').textContent = \"Px = \" + Px + \", Py = \" + Py + \", Pz = \" + Pz;\r\n        });\r\n        getVoxelCalValue(Sx, Sy, Di, Dj, Xx, Xy, Xz, Yx, Yy, Yz);\r\n        return [Sx, Sy, Di, Dj]\r\n    } else {\r\n        alert('NOT CT IMAGES')\r\n    }\r\n}\r\n\r\nexport default voxelCal;\r\n","import voxelCal from \"./pixel2voxel\";\r\n\r\nfunction isASCII(str) {\r\n    return /^[\\x00-\\x7F]*$/.test(str);\r\n}\r\n\r\n//Convert Parsed contour data to Array\r\nfunction pixelCal(image, struct) {\r\n    let str = struct.split(\"\\\\\");\r\n    let vPx = []; //contour Data Px (voxel point x )\r\n    let vPy = []; //contour Data Py (voxel point y )\r\n    let vPz = []; //contour Data Pz (voxel point z )\r\n\r\n    //document.getElementById('str').textContent = \"str : \" + str;\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (i % 3 === 0) {\r\n            vPx[i] = str[i];\r\n        } else if (i % 3 === 1) {\r\n            vPy[i] = str[i];\r\n        }else if (i % 3 === 2) {\r\n            vPz[i] = str[i];\r\n        }\r\n    }\r\n    //document.getElementById('vPx').textContent = \"vPx : \" + vPx;\r\n    // document.getElementById('vPy').textContent = \"vPy : \" + vPy;\r\n\r\n    let voxel = voxelCal(image);\r\n    let Sx = voxel[0];\r\n    let Sy = voxel[1];\r\n    let Di = voxel[2];\r\n    let Dj = voxel[3];\r\n\r\n    let pi = [];\r\n    let pj = [];\r\n\r\n    //convert voxel vPx,vPy to pixel pi,pj\r\n\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (i % 3 === 0) {\r\n            pi[i] = Math.floor(((vPx[i] - Sx) / (Di)) * 10) / 10;\r\n        } else if (i % 3 === 1) {\r\n            pj[i] = Math.floor(((vPy[i] - Sy) / (Dj)) * 10) / 10;\r\n        }\r\n    }\r\n\r\n    /*\r\n    document.getElementById('vPx').textContent = \"vPx : \" + vPx;\r\n    document.getElementById('vPy').textContent = \"vPy : \" + vPy;\r\n\r\n    document.getElementById('pi').textContent = \"Pi : \" + pi;\r\n    document.getElementById('pj').textContent = \"Pj : \" + pj;\r\n    */\r\n    return [pi, pj]\r\n};\r\nexport default pixelCal\r\n","import $ from \"jquery\";\r\nimport dicomParser from \"dicom-parser\";\r\nimport {ROI_addCheckbox,ROI_checkEvent} from \"./ROIcheckbox\";\r\nimport pixelCal from \"./voxel2pixel\";\r\nimport fullColorHex from \"./rgbToHex.js\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\n\r\nfunction isASCII(str) {\r\n    return /^[\\x00-\\x7F]*$/.test(str);\r\n}\r\n\r\nlet dataSet;\r\n\r\nfunction structFile(file) {\r\n    // clear any data currently being displayed as we parse this next file\r\n    //document.getElementById('rtstruct').innerHTML = '';\r\n    //document.getElementById('rtstruct3').innerHTML = '';\r\n\r\n    $('#status').removeClass('alert-warning alert-success alert-danger').addClass('alert-info');\r\n    $('#warnings').empty();\r\n    //document.getElementById('statusText2').innerHTML = 'Status: Loading file, please wait..';\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (file) {\r\n        let arrayBuffer = reader.result;\r\n        // Here we have the file data as an ArrayBuffer.  dicomParser requires as input a\r\n        // Uint8Array so we create that here\r\n        let byteArray = new Uint8Array(arrayBuffer);\r\n\r\n        let kb = byteArray.length / 1024;\r\n        let mb = kb / 1024;\r\n        let byteStr = mb > 1 ? mb.toFixed(3) + \" MB\" : kb.toFixed(0) + \" KB\";\r\n\r\n        //document.getElementById('statusText2').innerHTML = 'Status: Parsing ' + byteStr + ' bytes, please wait..';\r\n\r\n\r\n        // set a short timeout to do the parse so the DOM has time to update itself with the above message\r\n        setTimeout(function () {\r\n            // Invoke the paresDicom function and get back a DataSet object with the contents\r\n            try {\r\n                let start = new Date().getTime();\r\n                dataSet = dicomParser.parseDicom(byteArray);\r\n\r\n                let output1 = [];\r\n                let output3 = [];\r\n\r\n                ROIList(dataSet);\r\n                contour(dataSet, output1, output3);\r\n                roiJson(roi_List);\r\n                contourJson(contourList);\r\n\r\n                ROI_checkEvent();\r\n\r\n                // Combine the array of strings into one string and add it to the DOM\r\n               // document.getElementById('rtstruct').innerHTML = '<ul>' + output1.join('') + '</ul>';\r\n                //document.getElementById('rtstruct3').innerHTML = '<ul>' + output3.join('') + '</ul>';\r\n\r\n                let end = new Date().getTime();\r\n                let time = end - start;\r\n                if (dataSet.warnings.length > 0) {\r\n                    $('#status1').removeClass('alert-success alert-info alert-danger').addClass('alert-warning');\r\n                   // $('#statusText2').html('Status: Warnings encountered while parsing file (file of size ' + byteStr + ' parsed in ' + time + 'ms)');\r\n\r\n                    dataSet.warnings.forEach(function (warning) {\r\n                        $(\"#warnings\").append('<li>' + warning + '</li>');\r\n                    });\r\n                } else {\r\n                    let pixelData = dataSet.elements.x7fe00010;\r\n                    if (pixelData) {\r\n                        $('#status1').removeClass('alert-warning alert-info alert-danger').addClass('alert-success');\r\n                     //   $('#statusText2').html('Status: Ready (file of size ' + byteStr + ' parsed in ' + time + 'ms)');\r\n                    } else {\r\n                        $('#status1').removeClass('alert-warning alert-info alert-danger').addClass('alert-success');\r\n                      //  $('#statusText2').html('Status: Ready - no pixel data found (file of size ' + byteStr + ' parsed in ' + time + 'ms)');\r\n                    }\r\n                }\r\n\r\n            } catch (err) {\r\n                let message = err;\r\n                if (err.exception) {\r\n                    message = err.exception;\r\n                }\r\n                $('#status').removeClass('alert-success alert-info alert-warning').addClass('alert-danger');\r\n               // document.getElementById('statusText2').innerHTML = 'Status: Error - ' + message + ' (file of size ' + byteStr + ' )';\r\n\r\n                if (err.output1 || err.output3) {\r\n                  //  document.getElementById('rtstruct').innerHTML = '<ul>' + output1.join('') + '</ul>';\r\n                  //  document.getElementById('rtstruct3').innerHTML = '<ul>' + output3.join('') + '</ul>';\r\n                } else if (err.dataSet) {\r\n                    var output1 = [];\r\n                    var output3 = [];\r\n\r\n                    ROIList(err.dataSet);\r\n                    contour(err.dataSet, output1, output3);\r\n                  //  document.getElementById('rtstruct').innerHTML = '<ul>' + output1.join('') + '</ul>';\r\n                   // document.getElementById('rtstruct3').innerHTML = '<ul>' + output3.join('') + '</ul>';\r\n                }\r\n            }\r\n        }, 10);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    return dataSet;\r\n}\r\n\r\nlet roi_List = [];\r\n\r\nfunction ROIList(dataSet) {\r\n    try {\r\n        for (let propertyName in dataSet.elements) {\r\n\r\n            let element = dataSet.elements[propertyName];\r\n\r\n            //show ROI List\r\n            if (element.tag === 'x30060020' || (element.tag === 'x30060022') || element.tag === 'x30060026') {\r\n                let text = element.tag;\r\n                if (element.hadUndefinedLength) {\r\n                    text += \" <strong>(-1)</strong>\";\r\n                }\r\n                text += \"; \";\r\n                if (element.vr) {\r\n                    text += \" VR=\" + element.vr + \"; \";\r\n                }\r\n                let color = 'black';\r\n\r\n                if (element.items) { //item들을 표시\r\n                    element.items.forEach(function (item) {\r\n                        // each item contains its own data set so we iterate over the items and recursively call this function\r\n                        ROIList(item.dataSet);\r\n                    });\r\n                } else if (element.fragments) {\r\n                    // each item contains its own data set so we iterate over the items and recursively call this function\r\n                    let itemNumber = 0;\r\n                    element.fragments.forEach(function (fragment) {\r\n                        let basicOffset;\r\n                        if (element.basicOffsetTable) {\r\n                            basicOffset = element.basicOffsetTable[itemNumber];\r\n                        }\r\n                        let str = '<li>Fragment #' + itemNumber++ + ' offset = ' + fragment.offset;\r\n                        str += '(' + basicOffset + ')';\r\n                        str += '; length = ' + fragment.length + '</li>';\r\n                    });\r\n                } else {\r\n                    if (element.length === 2) {\r\n                        text += \" (\" + dataSet.uint16(propertyName) + \")\";\r\n\r\n                    } else if (element.length === 4) {\r\n                        text += \" (\" + dataSet.uint32(propertyName) + \")\";\r\n                    }\r\n                    //대부분은 문자열이지만 그렇지 않은 것들을 확인해서 표시하는 것을 위함\r\n                    let str = dataSet.string(propertyName);\r\n                    let stringIsAscii = isASCII(str);\r\n\r\n                    if (stringIsAscii) {\r\n                        // 정의되지 않은 경우 아무것도 넣지 않음\r\n                        if (str !== undefined) {\r\n                            text += '\"' + str + '\"';\r\n                        }\r\n                    } else {\r\n                        if (element.length !== 2 && element.length !== 4) {\r\n                            color = '#C8C8C8';\r\n                            // If it is some other length and we have no string\r\n                            text += \"<i>binary data</i>\";\r\n                        }\r\n                    }\r\n                    if (element.length === 0) {\r\n                        color = '#C8C8C8';\r\n                    }\r\n                    roi_List.push(element.tag, dataSet.string(propertyName));\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        let ex = {\r\n            exception: err\r\n        }\r\n        throw ex;\r\n    }\r\n}\r\n\r\nlet contourList = [];\r\n\r\nfunction contour(dataSet, output1, output3) {\r\n    try {\r\n        for (let propertyName in dataSet.elements) {\r\n            let element = dataSet.elements[propertyName];\r\n            //show contour data list\r\n\r\n            if (element.tag === 'x30060039' || element.tag === 'x3006002a' || element.tag === 'x30060040' || element.tag === 'x30060050' || element.tag === 'x30060016' || element.tag === 'x00081155' || element.tag === 'x30060084') {\r\n                let text = element.tag;\r\n\r\n                if (element.hadUndefinedLength) {\r\n                    text += \" <strong>(-1)</strong>\";\r\n                }\r\n                text += \"; \";\r\n                if (element.vr) {\r\n                    text += \" VR=\" + element.vr + \"; \";\r\n                }\r\n                let color = 'black';\r\n\r\n                // Here we check for Sequence items and iterate over them if present.\r\n                // items will not be set in the element object for elements that don't have SQ VR type.\r\n                //  Note that implicit little endian sequences will are currently not parsed.\r\n                if (element.items) { //item들을 표시\r\n                    let itemNumber = 0;\r\n                    element.items.forEach(function (item) {\r\n                        // each item contains its own data set so we iterate over the items and recursively call this function\r\n                        //   output1.push('<li class = \"item\">Item #' + itemNumber++ + ' ' + item.tag + '</li>')\r\n                        //   output1.push('<ul class = \"data\">');\r\n                        contour(item.dataSet, output1, output3);\r\n\r\n                        // output1.push('</ul>');\r\n                    });\r\n                } else if (element.fragments) {\r\n                    // each item contains its own data set so we iterate over the items and recursively call this function\r\n                    let itemNumber = 0;\r\n                    element.fragments.forEach(function (fragment) {\r\n                        let basicOffset;\r\n                        if (element.basicOffsetTable) {\r\n                            basicOffset = element.basicOffsetTable[itemNumber];\r\n                        }\r\n                        let str = '<li>Fragment #' + itemNumber++ + ' offset = ' + fragment.offset;\r\n                        str += '(' + basicOffset + ')';\r\n                        str += '; length = ' + fragment.length + '</li>';\r\n                    });\r\n                } else {\r\n                    if (element.length === 2) {\r\n                        text += \" (\" + dataSet.uint16(propertyName) + \")\";\r\n\r\n                    } else if (element.length === 4) {\r\n                        text += \" (\" + dataSet.uint32(propertyName) + \")\";\r\n                    }\r\n                    //대부분은 문자열이지만 그렇지 않은 것들을 확인해서 표시하는 것을 위함\r\n                    let str = dataSet.string(propertyName);\r\n                    let stringIsAscii = isASCII(str);\r\n\r\n                    if (stringIsAscii) {\r\n                        // 정의되지 않은 경우 아무것도 넣지 않음\r\n                        if (str !== undefined) {\r\n                            text += '\"' + str + '\"';\r\n                        }\r\n                    } else {\r\n                        if (element.length !== 2 && element.length !== 4) {\r\n                            color = '#C8C8C8';\r\n                            // If it is some other length and we have no string\r\n                            text += \"<i>binary data</i>\";\r\n                        }\r\n                    }\r\n                    if (element.length === 0) {\r\n                        color = '#C8C8C8';\r\n                    }\r\n                    //   output3.push('<li style=\"color:' + color + ';\">' + text + '</li>');\r\n                    // output1.push('<li style=\"color:' + color + ';\">' + text + '</li>');\r\n                    // finally we add the string to our  array\r\n                    contourList.push(element.tag, dataSet.string(propertyName));\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        let ex = {\r\n            exception: err,\r\n            output3: output3\r\n        }\r\n        throw ex;\r\n    }\r\n    return contourList;\r\n}\r\n\r\nfunction roiJson(roi_List) {\r\n    let ROI_Number = [];\r\n    let ROI_Name = [];\r\n\r\n    for (let i = 0; i < roi_List.length; i++) {\r\n        if (roi_List[i] == 'x30060022') {\r\n            ROI_Number[i] = roi_List[i + 1];\r\n        } else if (roi_List[i] == 'x30060026') {\r\n            ROI_Name[i] = roi_List[i + 1];\r\n        }\r\n    }\r\n\r\n    //remove undefined in array\r\n    ROI_Number = ROI_Number.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    })\r\n    ROI_Name = ROI_Name.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    })\r\n\r\n    //parsing to JSON\r\n    $(function () {\r\n        var ROI_LIST_Array = new Array();\r\n\r\n        for (let i = 0; i < ROI_Name.length; i++) {\r\n            let ROI_object = new Object();\r\n            ROI_object.x30060022 = ROI_Number[i];\r\n            ROI_object.x30060026 = ROI_Name[i];\r\n\r\n            ROI_LIST_Array.push(ROI_object);\r\n        }\r\n        ROI_addCheckbox(ROI_LIST_Array);\r\n    });\r\n\r\n}\r\n\r\nlet contour_data_Array = new Array();\r\n\r\nfunction contourJson(contourList) {\r\n    let Referenced_Instance_UID = [];\r\n    let contour_data = [];\r\n    let Referenced_ROI_Number = [];\r\n    let ROI_display_color = [];\r\n\r\n    for (let i = 0; i < contourList.length; i++) {\r\n        let j = 0;\r\n        if (contourList[i + 2] === 'x00081155') {\r\n            Referenced_Instance_UID[i] = contourList[i + 3];\r\n            contour_data[i] = contourList[i + 5];\r\n            if (contourList[i + 6] === 'x30060084') {\r\n                Referenced_ROI_Number[i] = contourList[i + 7];\r\n            } else if (contourList[i + 6] === 'x00081155') {\r\n                for (j = i + 6; j < contourList.length; j++) {\r\n                    if (contourList[j + 2] === 'x30060084') {\r\n                        Referenced_ROI_Number[i] = contourList[j + 3];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (contourList[i] === 'x3006002a') {\r\n                ROI_display_color[i] = contourList[i + 1];\r\n            } else if (contourList[i] === 'x30060050') {\r\n                for (j = i; j > 0; j--) {\r\n                    if (contourList[j] === 'x3006002a') {\r\n                        ROI_display_color[i] = contourList[j + 1];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ROI_display_color = ROI_display_color.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    Referenced_Instance_UID = Referenced_Instance_UID.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    contour_data = contour_data.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    Referenced_ROI_Number = Referenced_ROI_Number.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n\r\n    //parsing to JSON\r\n    $(function () {\r\n        for (let i = 0; i < contourList.length; i++) {\r\n            let contour_object = {};\r\n            contour_object.x30060084 = Referenced_ROI_Number[i];\r\n            contour_object.x00081155 = Referenced_Instance_UID[i];\r\n            contour_object.x30060050 = contour_data[i];\r\n            contour_object.x3006002a = ROI_display_color[i];\r\n\r\n            contour_data_Array.push(contour_object);\r\n        }\r\n    });\r\n}\r\n\r\nlet information = {\r\n    ROIs: []\r\n}\r\nlet struct, color;\r\n\r\nlet checkVal_send = information.ROIs;\r\n\r\nfunction sendDrawImage(image) {\r\n    let Instance_UID = 0;\r\n    Instance_UID = image.data.string('x00080018');\r\n\r\n    for(let j=0;j<checkVal_send.length;j++){\r\n        for (let i = 0; i < contour_data_Array.length; i++) {\r\n            if (contour_data_Array[i]['x30060084'] === checkVal_send[j]) {\r\n                if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                    struct = contour_data_Array[i]['x30060050'];\r\n                    color = contour_data_Array[i]['x3006002a'];\r\n\r\n                    draw(image, struct, color);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet img;\r\nfunction getImage(image){\r\n    img = image;\r\n    return img;\r\n}\r\n\r\nfunction checkDrawImage(checkVal_check) {\r\n    let Instance_UID = 0;\r\n    Instance_UID = img.data.string('x00080018');\r\n\r\n    for (let i = 0; i < contour_data_Array.length; i++) {\r\n        if (contour_data_Array[i]['x30060084'] === checkVal_check) {\r\n            if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                struct = contour_data_Array[i]['x30060050'];\r\n                color = contour_data_Array[i]['x3006002a'];\r\n\r\n                draw(img, struct, color, checkVal_check);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkResetImage(checkVal_check) {\r\n    let Instance_UID = 0;\r\n    Instance_UID = img.data.string('x00080018');\r\n\r\n    for (let i = 0; i < contour_data_Array.length; i++) {\r\n        if (contour_data_Array[i]['x30060084'] === checkVal_check) {\r\n            if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                struct = contour_data_Array[i]['x30060050'];\r\n                color = contour_data_Array[i]['x3006002a'];\r\n\r\n                resetCanvas(checkVal_check);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n/*Function*/\r\nfunction addROIset(evt) {\r\n    let checkVal_check;\r\n    if (evt.target.checked == true) {\r\n        information.ROIs.push(evt.target.value);\r\n        checkVal_check = evt.target.value;\r\n\r\n        checkDrawImage(checkVal_check);\r\n    }else {\r\n        let index = information.ROIs.indexOf(evt.target.value);\r\n        if (index !== -1){\r\n            information.ROIs.splice(index, 1);\r\n        }\r\n        checkVal_check = evt.target.value;\r\n        checkResetImage(checkVal_check);\r\n    }\r\n}\r\n\r\nlet canvas_obj = [];\r\nfunction draw(image,struct,color,checkVal_check) {\r\n    let px = pixelCal(image, struct);\r\n    let pi = px[0];\r\n    let pj = px[1];\r\n\r\n    let canvas = document.getElementById(\"myCanvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(pi[0], pj[1]);\r\n    for (let i = 1; i <= pi.length * 3; i++) {\r\n        if (i % 3 === 0) {\r\n            ctx.lineTo(pi[i], pj[i + 1]);\r\n\r\n        }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fillStyle = fullColorHex(color);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.restore();\r\n    canvas_obj[checkVal_check] = canvas;\r\n}\r\n\r\nfunction reset() {\r\n    let canvas = document.getElementById(\"myCanvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let canvas2 = document.getElementById('doseCanvas');\r\n    let ctx2 = canvas2.getContext(\"2d\");\r\n    ctx.clearRect(0,0,512,512);\r\n    ctx2.clearRect(0,0,512,512);\r\n}\r\n\r\nfunction resetCanvas(checkVal_check) {\r\n    canvas_obj[checkVal_check].style.fillStyle='#ffffff';\r\n    canvas_obj[checkVal_check].style.globalAlpha=0;\r\n}\r\n\r\nexport {structFile, draw, reset , sendDrawImage, getImage , addROIset}\r\n","var rgbToHex = function (color) {\r\n    var hex = Number(color).toString(16);\r\n    if (hex.length < 2) {\r\n        hex = \"0\" + hex;\r\n    }\r\n    return hex;\r\n};\r\n\r\nvar fullColorHex = function (rgb) {\r\n    rgb = rgb.split('\\\\');\r\n\r\n    let r = rgb[0];\r\n    let g = rgb[1];\r\n    let b = rgb[2];\r\n\r\n    var red = rgbToHex(r);\r\n    var green = rgbToHex(g);\r\n    var blue = rgbToHex(b);\r\n\r\n    return \"#\" + red + green + blue;\r\n};\r\n\r\nexport default fullColorHex\r\n","import $ from \"jquery\";\r\nimport {addROIset} from \"./drawROI\";\r\n\r\nfunction ROI_addCheckbox(ROI_LIST_Array) {\r\n    ROI_LIST_Array.forEach(function (n) {\r\n        let ul = document.getElementById('ul');\r\n        let li = document.createElement('li');\r\n\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = 'checkbox';\r\n        checkbox.value = n.x30060022;\r\n        checkbox.name = 'roi';\r\n\r\n        li.append(checkbox);\r\n\r\n        let text = n.x30060026;\r\n        li.append(document.createTextNode(text));\r\n        ul.append(li);\r\n    });\r\n\r\n}\r\n\r\nfunction ROI_checkEvent(){\r\n    /*Event Listener*/\r\n    $(document).ready(function(){\r\n        let roi = document.getElementsByName(\"roi\");\r\n        if (roi[0].addEventListener) {\r\n            for (let i = 0; i < roi.length; i++) {\r\n                roi[i].addEventListener(\"change\", addROIset, false);\r\n            }\r\n        } else if (roi[0].attachEvent) {\r\n            for (let i = 0; i < roi.length; i++) {\r\n                roi[i].attachEvent(\"onchange\", addROIset);\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\nexport {ROI_addCheckbox,ROI_checkEvent};\r\n","import * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport {doseFile} from \"../RT_DOSE/doseDataParser\";\r\n\r\n// this function gets called once the user drops the file onto the div\r\n//for drag and drop import doseFile\r\nfunction handleFileSelect(evt) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    // Get the FileList object that contains the list of files that were dropped\r\n    let files = evt.dataTransfer.files;\r\n\r\n    doseFile(files[0]);\r\n    const imageId = cornerstoneWadoImageLoader.wadouri.fileManager.add(files[0]);\r\n}\r\n\r\n//this function manage drag event\r\nfunction handleDragOver(evt) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\r\n}\r\n\r\nexport {handleFileSelect,handleDragOver}\r\n","import {doseFile} from \"../RT_DOSE/doseDataParser\";\r\n\r\nfunction handleFileChange(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    let files = e.target.files;\r\n    // this UI is only built for a single file so just dump the first one\r\n    doseFile(files[0]);\r\n}\r\n\r\nexport default handleFileChange\r\n","import React from \"react\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstoneMath from \"cornerstone-math\"\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport Hammer from \"hammerjs\";\r\nimport dicomParser from \"dicom-parser\"\r\nimport \"./MainUI.css\"\r\nimport {\r\n    angleOn,\r\n    lengthOn,\r\n    eraserOn,\r\n    drawCircle,\r\n    drawRectangle,\r\n    reductionOn,\r\n    expansionOn,\r\n    invertOn,\r\n    interpolationOn,\r\n    hflipOn,\r\n    vflipOn,\r\n    rotateOn\r\n} from \"./RT_STRUCTURE/buttonEventFunction.js\"\r\nimport {imageIdList} from './Loader/firstLoader.js'\r\nimport {handleFileSelect, handleDragOver} from \"./Loader/dragAndDrop\";\r\nimport handleFileChange from \"./Loader/doseImport\";\r\n\r\ncornerstoneWadoImageLoader.external.cornerstone = cornerstone\r\ncornerstoneWadoImageLoader.external.dicomParser = dicomParser\r\ncornerstoneTools.external.cornerstone = cornerstone\r\ncornerstoneTools.external.Hammer = Hammer;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\r\ncornerstoneTools.init();\r\ndicomParser.toString().bold()\r\n\r\n\r\nclass MainUIElements extends React.Component {\r\n    componentDidMount() {\r\n        const element = this.element;\r\n\r\n        // Setup the dnd listeners.\r\n        let dropZone = document.getElementById('dicomImage');\r\n        dropZone.addEventListener('dragover', handleDragOver, false);\r\n        dropZone.addEventListener('drop', handleFileSelect, false);\r\n\r\n        element.addEventListener('mousedown', function (e) {\r\n            let lastX = e.pageX;\r\n            let lastY = e.pageY;\r\n            const mouseButton = e.which;\r\n\r\n\r\n            function mouseMoveHandler(e) {\r\n                const deltaX = e.pageX - lastX;\r\n                const deltaY = e.pageY - lastY;\r\n                lastX = e.pageX;\r\n                lastY = e.pageY;\r\n\r\n                if (mouseButton === 1) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.translation.x += (deltaX / viewport.scale);\r\n                    viewport.translation.y += (deltaY / viewport.scale);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                } else if (mouseButton === 2) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.voi.windowWidth += (deltaX / viewport.scale);\r\n                    viewport.voi.windowCenter += (deltaY / viewport.scale);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                    document.getElementById('bottomleft').textContent = \"WW/WC:\" + Math.round(viewport.voi.windowWidth)\r\n                        + \"/\" + Math.round(viewport.voi.windowCenter);\r\n\r\n\r\n                } else if (mouseButton === 3) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.scale += (deltaY / 100);\r\n                    cornerstone.setViewport(element, viewport);\r\n                    document.getElementById('bottomright').textContent = \"Zoom:\" + viewport.scale + \"x\";\r\n                }\r\n            }\r\n\r\n            function mouseUpHandler() {\r\n                document.removeEventListener('mousemove', mouseMoveHandler);\r\n                document.removeEventListener('mouseup', mouseUpHandler);\r\n            }\r\n\r\n            document.addEventListener('mousemove', mouseMoveHandler);\r\n            document.addEventListener('mouseup', mouseUpHandler);\r\n        });\r\n    }\r\n\r\n    //Rendering\r\n    render() {\r\n        return (\r\n            <div id=\"outsideWrapper\" className={\"outsideWrapper\"}>\r\n                <div>For Only Import Dose File =>\r\n                    <input type=\"file\" onChange={(e) => {\r\n                        handleFileChange(e)\r\n                    }}/>&nbsp;&nbsp;\r\n                </div>\r\n                <div>Directory Select =>\r\n                    <input type=\"file\" id=\"filepicker\" name=\"fileList\" webkitdirectory={\"\"} directory={\"\"} multiple\r\n                           onChange={(e) => {\r\n                               imageIdList(e);\r\n                           }}/>\r\n                </div>\r\n                <ul id=\"listing\"></ul>\r\n\r\n                <div className={'left'}>\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            angleOn()\r\n                        }}>Angle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            lengthOn()\r\n                        }}>Length\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            drawCircle()\r\n                        }}>Circle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            drawRectangle()\r\n                        }}>Rectangle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            eraserOn()\r\n                        }}>Erase\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            reductionOn()\r\n                        }}>256x256\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            expansionOn()\r\n                        }}>512x512\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            invertOn()\r\n                        }}>Toggle Invert\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            interpolationOn()\r\n                        }}>Toggle Interpolation\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            hflipOn()\r\n                        }}>Horizontal Flip\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            vflipOn()\r\n                        }}>Vertical Flip\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            rotateOn()\r\n                        }}>Rotate 90\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                </div>\r\n                <div className={'right'}>\r\n                    <ul>\r\n                        <li>Left click drag - window/level</li>\r\n                        <li>Middle Mouse button drag - pan</li>\r\n                        <li>Right click drag - zoom</li>\r\n                        <li>Mouse wheel - scroll images</li>\r\n                        <li>Double Click - save pixel/voxel</li>\r\n                    </ul>\r\n                </div>\r\n                <br></br> <br></br> <br></br>\r\n                <div class=\"left\">\r\n                    <div>\r\n                        <div id=\"dicomImageWrapper\" className=\"wrapper\"\r\n                             onContextMenu=\"return false\" onWheel={(e) => {\r\n                        }}>\r\n                            <div id=\"dicomImage\" className=\"viewportElement\"\r\n                                 ref={input => {\r\n                                     this.element = input;\r\n                                 }}>\r\n                                <canvas id=\"myCanvas\" className={\"canvas\"} width={512} height={512}/>\r\n                                <canvas id=\"doseCanvas\" className={\"canvas\"} width={512} height={512}/>\r\n                            </div>\r\n                            <div id=\"topleft\" className=\"overlay\" className=\"topleft\">\r\n                                Patient Name:\r\n                                Patient Sex:\r\n                            </div>\r\n                            <div id=\"topright\" className=\"overlay\" className=\"topright\">\r\n                                Modality :\r\n                            </div>\r\n                            <div id=\"bottomleft\" className=\"overlay\" className=\"bottomleft\">\r\n                                WW/WC:\r\n                            </div>\r\n                            <div id=\"bottomright\" className=\"overlay\" className=\"bottomright\">\r\n                                Zoom:\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div><span id=\"voxelCoords\"></span></div>\r\n                        <div><span id=\"voxelValue\"></span></div>\r\n\r\n                        <div><span id=\"patient\">Patient ID : </span></div>\r\n                        <div><span id=\"modality\">Modality : </span></div>\r\n                        <div><span id=\"instanceUID\">Instance UID : </span></div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={'right'}>\r\n                    <div className=\"lefthalf\">\r\n                        <ul id=\"ul\">Structures</ul>\r\n                    </div>\r\n                    <div className=\"righthalf\">\r\n                        <ul id=\"ul2\">Isodoses</ul>\r\n                    </div>\r\n                </div>\r\n                <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n                <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n\r\n                {/*\r\n                < div class = \"patient INFO\">\r\n                    <div id=\"info\">\r\n                        <div><span id=\"studyUID\">Study UID :</span></div>\r\n                        <div><span id=\"seriesUID\">Series UID :</span></div>\r\n                        <div><span id=\"instanceUID\">Instance UID : </span></div>\r\n                        <div><span id=\"frameUID\">Frame of Reference UID : </span></div>\r\n                    </div>\r\n\r\n                    <br></br>\r\n                    <div id=\"voxel\">\r\n                        <div><span id=\"imageOrientation\">Image Orientation :</span></div>\r\n                        <div><span id=\"pixelSpacing\">Pixel Spacing :</span></div>\r\n                        <div><span id=\"imagePosition\">Image Position : </span></div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div id=\"voxelCal\">\r\n                        <div><span id=\"Sxyz\"></span></div>\r\n                        <div><span id=\"Xxyz\"></span></div>\r\n                        <div><span id=\"Yxyz\"></span></div>\r\n                        <div><span id=\"Dij\"></span></div>\r\n\r\n                    </div>\r\n                    <br></br>\r\n                    <div id=\"pixelCal\">\r\n                        <div><span id=\"struct\">Struct :</span></div>\r\n                        <br></br>\r\n                        <div><span id=\"str\">str :</span></div>\r\n                        <br></br>\r\n                        <div><span id=\"vPx\">vPx : </span></div>\r\n                        <br></br>\r\n                        <div><span id=\"vPy\">vPy : </span></div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div><span id=\"contour\">contour data :</span></div>\r\n\r\n                    <div id=\"point\">\r\n                        <div id=\"pi\">Pi :</div>\r\n                        <br></br>\r\n                        <div id=\"pj\">Pj :</div>\r\n                    </div>\r\n                </div>\r\n               */}\r\n                {/*\r\n                <div>\r\n                    <div className=\"left\">\r\n                        <div id=\"status1\" className=\"alert alert-success\">\r\n                            <div id=\"statusText\">\r\n                                Status: Ready (no file loaded)\r\n                            </div>\r\n                            <ul id=\"warnings\">\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"row2\">\r\n                            <div className=\"col-md-12\">\r\n                                <div id=\"rtstruct\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3>item</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br></br><br></br>\r\n\r\n                    <div className=\"right\">\r\n                        <div className=\"row2\">\r\n                            <div className=\"col-md-12\">\r\n                                <div id=\"rtstruct3\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3>contour data</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                */}\r\n                <div className=\"right\">\r\n                    <div className=\"row2\">\r\n                        <div className=\"col-md-12\">\r\n                            <div id=\"dose\">\r\n                                <div className=\"text-center\">\r\n                                    <h3>dose</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"left\">\r\n                    <div className=\"row2\">\r\n                        <div className=\"col-md-12\">\r\n                            <div id=\"dose2\">\r\n                                <div className=\"text-center\">\r\n                                    <h3>dose</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <img id={\"image\"} src={\"\"}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainUIElements\r\n","import \"../MainUI.css\"\r\nimport \"../MainUI.js\"\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\n\r\nexport {\r\n    angleOn,\r\n    lengthOn,\r\n    eraserOn,\r\n    drawCircle,\r\n    drawRectangle,\r\n    reductionOn,\r\n    expansionOn,\r\n    invertOn,\r\n    interpolationOn,\r\n    hflipOn,\r\n    vflipOn,\r\n    rotateOn\r\n}\r\n\r\nfunction angleOn() {\r\n    const AngleTool = cornerstoneTools.AngleTool;\r\n    cornerstoneTools.addTool(AngleTool)\r\n    cornerstoneTools.setToolActive('Angle', {mouseButtonMask: 1})\r\n\r\n\r\n}\r\n\r\nfunction lengthOn() {\r\n    const LengthTool = cornerstoneTools.LengthTool;\r\n    cornerstoneTools.addTool(LengthTool)\r\n    cornerstoneTools.setToolActive(\"Length\", {mouseButtonMask: 1})\r\n}\r\n\r\nfunction eraserOn() {\r\n    const EraserTool = cornerstoneTools.EraserTool;\r\n    cornerstoneTools.addTool(EraserTool);\r\n    cornerstoneTools.setToolActive(\"Eraser\", {mouseButtonMask: 1})\r\n}\r\n\r\nfunction reductionOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    element.style.width = '256px';\r\n    element.style.height = '256px';\r\n    cornerstone.resize(element);\r\n}\r\n\r\nfunction expansionOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    element.style.width = '512px';\r\n    element.style.height = '512px';\r\n    cornerstone.resize(element);\r\n\r\n}\r\n\r\nfunction invertOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.invert = !viewport.invert;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction interpolationOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.pixelReplication = !viewport.pixelReplication;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction hflipOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.hflip = !viewport.hflip;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction vflipOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.vflip = !viewport.vflip;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction rotateOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.rotation += 90;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction drawCircle() {\r\n    const EllipticalRoiTool = cornerstoneTools.EllipticalRoiTool;\r\n    cornerstoneTools.addTool(EllipticalRoiTool)\r\n    cornerstoneTools.setToolActive('EllipticalRoi', {mouseButtonMask: 1})\r\n}\r\n\r\nfunction drawRectangle() {\r\n    const RectangleRoiTool = cornerstoneTools.RectangleRoiTool;\r\n    cornerstoneTools.addTool(RectangleRoiTool)\r\n    cornerstoneTools.setToolActive('RectangleRoi', {mouseButtonMask: 1})\r\n}\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport MainUIElements from \"./main/MainUI\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <div>\r\n      <MainUIElements/>\r\n    </div>\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}