{"version":3,"sources":["logo.svg","main/dicomParse.js","main/RT_STRUCTURE/pixel2voxel.js","main/RT_STRUCTURE/voxel2pixel.js","main/RT_STRUCTURE/ROI.js","main/RT_STRUCTURE/rgbToHex.js","main/RT_STRUCTURE/checkbox.js","main/RT_DOSE/dosePixelDataParse.js","main/Loader/loadCTImage.js","main/RT_DOSE/doseCheckbox.js","main/RT_DOSE/isodose.js","main/Loader/dragAndDrop.js","main/Loader/doseImport.js","main/MainUI.js","main/RT_STRUCTURE/buttonEventFunction.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dicomParse","image","document","getElementById","textContent","data","string","ex","alert","voxelCal","modality","SOP_UID","imgPosArr","split","Sx","parseFloat","Sy","Sz","imgOri","imgOriArr","toString","Xx","Xy","Xz","Yx","Yy","Yz","pixelSpace","pixelSpaceArr","Di","Dj","el","addEventListener","event","pixelCoords","cornerstone","pageX","pageY","Px","x","y","Py","Pz","pixelCal","dataSet","struct","str","vPx","vPy","vPz","i","length","voxel","pi","pj","Math","floor","rgbToHex","color","hex","Number","fullColorHex","rgb","r","g","b","isASCII","test","structFile","file","$","removeClass","addClass","empty","reader","FileReader","onload","arrayBuffer","result","byteArray","Uint8Array","kb","mb","toFixed","setTimeout","start","Date","getTime","dicomParser","parseDicom","ROIList","contour","roi_List","ROI_Number","ROI_Name","filter","item","undefined","ROI_LIST_Array","Array","ROI_object","Object","x30060022","x30060026","push","forEach","n","ul","li","createElement","checkbox","type","value","name","append","text","createTextNode","ROI_addCheckbox","roiJson","contourList","Referenced_Instance_UID","contour_data","Referenced_ROI_Number","ROI_display_color","j","contour_object","x30060084","x00081155","x30060050","x3006002a","contour_data_Array","contourJson","ready","roi","getElementsByName","addROIset","attachEvent","warnings","warning","elements","x7fe00010","err","exception","output1","output3","readAsArrayBuffer","propertyName","element","tag","hadUndefinedLength","vr","items","fragments","itemNumber","fragment","basicOffset","basicOffsetTable","offset","uint16","uint32","img","information","ROIs","checkVal_send","sendDrawImage","Instance_UID","draw","getImage","evt","target","checked","checkVal_check","checkDrawImage","index","indexOf","splice","resetCanvas","checkResetImage","Rows","Columns","Number_of_Frames","canvas_obj","px","canvas","ctx","getContext","save","beginPath","moveTo","lineTo","closePath","fillStyle","globalAlpha","stroke","fill","restore","reset","clearRect","style","dose_pixel_Data_parse","pixelDataElement","pixel_data","Uint32Array","buffer","byteOffset","dose_grid","z","count","Dose_Grid_Scaling","dosemax","dose_value","k","max","level","parseInt","Dose_Checkbox","dose","addDoseSet","dose_data","getDoseValue","gridScaling","Dose","drawDose","doseFile","imageId","cornerstoneWadoImageLoader","fileManager","add","dose_pixelSpacing","then","doseAlign","doseData","cornerstoneTools","Hammer","cornerstoneMath","currentImageIndex","updateTheImage","imageIds","imageIndex","viewport","handleFileSelect","stopPropagation","preventDefault","files","dataTransfer","handleDragOver","dropEffect","handleFileChange","e","bold","MainUIElements","this","dropZone","lastX","lastY","mouseButton","which","mouseMoveHandler","deltaX","deltaY","translation","scale","voi","windowWidth","windowCenter","round","mouseUpHandler","removeEventListener","id","className","onChange","webkitdirectory","directory","multiple","dumpFiles","cnt","onwheel","imageIdList","onClick","AngleTool","mouseButtonMask","angleOn","LengthTool","lengthOn","EllipticalRoiTool","drawCircle","RectangleRoiTool","drawRectangle","EraserTool","eraserOn","width","height","reductionOn","expansionOn","invert","invertOn","pixelReplication","interpolationOn","hflip","hflipOn","vflip","vflipOn","rotation","rotateOn","class","onContextMenu","onWheel","ref","input","src","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.37efd3dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\n\r\nfunction dicomParse(image) {\r\n    try {\r\n        // print the dicom information\r\n        document.getElementById('patient').textContent = 'Patient ID : ' + image.data.string('x00100020');\r\n        document.getElementById('topleft').textContent = 'Patient Name : ' + image.data.string('x00100010') + '\\n' + 'Patient Sex : ' + image.data.string('x00100040');\r\n        document.getElementById('topright').textContent = 'Modality : ' + image.data.string('x00080060');\r\n        document.getElementById('modality').textContent = 'Modality : ' + image.data.string('x00080060');\r\n        document.getElementById('instanceUID').textContent = 'Instance UID : ' + image.data.string('x00080018');\r\n\r\n        /*\r\n        document.getElementById('studyUID').textContent = 'Study UID : ' + image.data.string('x0020000d');\r\n        document.getElementById('seriesUID').textContent = 'Series UID : ' + image.data.string('x0020000e');\r\n        document.getElementById('instanceUID').textContent = 'Instance UID : ' + image.data.string('x00080018');\r\n        document.getElementById('frameUID').textContent = 'Frame of Reference UID : ' + image.data.string('x00200052');\r\n\r\n        document.getElementById('imageOrientation').textContent = 'Image Orientation : ' + image.data.string('x00200037');\r\n        document.getElementById('pixelSpacing').textContent = 'Pixel Spacing : ' + image.data.string('x00280030');\r\n        document.getElementById('imagePosition').textContent = 'Image Position : ' + image.data.string('x00200032');\r\n         */\r\n\r\n    } catch (ex) {\r\n        alert('parsing error');\r\n    }\r\n}\r\n\r\nexport default dicomParse;\r\n","import React from \"react\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\n\r\n//caculate voxel from pixel\r\nfunction voxelCal(image) {\r\n    let modality = image.data.string('x00080060');\r\n    let SOP_UID = image.data.string('x00080016');\r\n    if (modality === ('CT') || SOP_UID ==='1.2.840.10008.5.1.4.1.1.481.2' || modality === 'RTDOSE') {\r\n        let imgPos = image.data.string('x00200032');\r\n        let imgPosArr = imgPos.split(\"\\\\\");\r\n\r\n        let Sx = (parseFloat(imgPosArr[0]) * 10) / 10;\r\n        let Sy = (parseFloat(imgPosArr[1]) * 10) / 10;\r\n        let Sz = (parseFloat(imgPosArr[2]) * 10) / 10;\r\n\r\n        let imgOri = image.data.string('x00200037');\r\n        imgOri = imgOri.toString();\r\n        let imgOriArr = imgOri.split(\"\\\\\");\r\n\r\n        let Xx = (parseFloat(imgOriArr[0]) * 10) / 10;\r\n        let Xy = (parseFloat(imgOriArr[1]) * 10) / 10;\r\n        let Xz = (parseFloat(imgOriArr[2]) * 10) / 10;\r\n        let Yx = (parseFloat(imgOriArr[3]) * 10) / 10;\r\n        let Yy = (parseFloat(imgOriArr[4]) * 10) / 10;\r\n        let Yz = (parseFloat(imgOriArr[5]) * 10) / 10;\r\n\r\n        let pixelSpace = image.data.string('x00280030');\r\n        pixelSpace = pixelSpace.toString();\r\n        let pixelSpaceArr = pixelSpace.split(\"\\\\\");\r\n\r\n        let Di = parseFloat((pixelSpaceArr[0]) * 10) / 10;\r\n        let Dj = parseFloat((pixelSpaceArr[1]) * 10) / 10;\r\n\r\n        let el = document.getElementById('dicomImage');\r\n\r\n        /*\r\n        document.getElementById('Sxyz').textContent = 'Sx : ' + Sx + ', Sy : ' + Sy + ', Sz : ' + Sz;\r\n        document.getElementById('Xxyz').textContent = 'Xx : ' + Xx + ', Xy : ' + Xy + ', Xz : ' + Xz;\r\n        document.getElementById('Yxyz').textContent = 'Yx : ' + Yx + ', Yy : ' + Yy + ', Yz : ' + Yz;\r\n        document.getElementById('Dij').textContent = 'Di : ' + Di + ', Dj : ' + Dj;\r\n        */\r\n\r\n        el.addEventListener('mousemove', function (event) {\r\n            const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n            //  document.getElementById('coords').textContent = \"pageX=\" + event.pageX + \", pageY=\" + event.pageY + \", pixelX=\" + pixelCoords.x + \", pixelY=\" + pixelCoords.y;\r\n\r\n            let Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n            let Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n            let Pz = (Xz * Di * pixelCoords.x) + (Yz * Dj * pixelCoords.y) + Sz;\r\n\r\n            //Px = Math.floor(Px * 10) / 10;\r\n            // Py = Math.floor(Py * 10) / 10;\r\n            document.getElementById('voxelCoords').textContent = \"Px = \" + Px + \", Py = \" + Py + \", Pz = \" + Pz;\r\n        });\r\n\r\n        el.addEventListener('dblclick', function (event) {\r\n            const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n            //   document.getElementById('pixelValue').textContent = \"pageX=\" + event.pageX + \", pageY=\" + event.pageY + \", pixelX=\" + pixelCoords.x + \", pixelY=\" + pixelCoords.y;\r\n\r\n            let Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n            let Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n            let Pz = (Xz * Di * pixelCoords.x) + (Yz * Dj * pixelCoords.y) + Sz;\r\n\r\n            // Px = Math.floor(Px * 10) / 10;\r\n            //  Py = Math.floor(Py * 10) / 10;\r\n\r\n            document.getElementById('voxelValue').textContent = \"Px = \" + Px + \", Py = \" + Py + \", Pz = \" + Pz;\r\n        });\r\n        return [Sx, Sy, Di, Dj]\r\n    }\r\n    else {\r\n        alert('NOT CT IMAGES')\r\n    }\r\n}\r\n\r\nexport default voxelCal;\r\n","import voxelCal from \"./pixel2voxel\";\r\n\r\nfunction isASCII(str) {\r\n    return /^[\\x00-\\x7F]*$/.test(str);\r\n}\r\n\r\n//Convert Parsed contour data to Array\r\nfunction pixelCal(image, struct) {\r\n    let str = struct.split(\"\\\\\");\r\n    let vPx = []; //contour Data Px (voxel point x )\r\n    let vPy = []; //contour Data Py (voxel point y )\r\n    let vPz = []; //contour Data Pz (voxel point z )\r\n\r\n    //document.getElementById('str').textContent = \"str : \" + str;\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (i % 3 === 0) {\r\n            vPx[i] = str[i];\r\n        } else if (i % 3 === 1) {\r\n            vPy[i] = str[i];\r\n        }else if (i % 3 === 2) {\r\n            vPz[i] = str[i];\r\n        }\r\n    }\r\n    //document.getElementById('vPx').textContent = \"vPx : \" + vPx;\r\n    // document.getElementById('vPy').textContent = \"vPy : \" + vPy;\r\n\r\n    let voxel = voxelCal(image);\r\n    let Sx = voxel[0];\r\n    let Sy = voxel[1];\r\n    let Di = voxel[2];\r\n    let Dj = voxel[3];\r\n\r\n    let pi = [];\r\n    let pj = [];\r\n\r\n    //convert voxel vPx,vPy to pixel pi,pj\r\n\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (i % 3 === 0) {\r\n            pi[i] = Math.floor(((vPx[i] - Sx) / (Di)) * 10) / 10;\r\n        } else if (i % 3 === 1) {\r\n            pj[i] = Math.floor(((vPy[i] - Sy) / (Dj)) * 10) / 10;\r\n        }\r\n    }\r\n\r\n    /*\r\n    document.getElementById('vPx').textContent = \"vPx : \" + vPx;\r\n    document.getElementById('vPy').textContent = \"vPy : \" + vPy;\r\n\r\n    document.getElementById('pi').textContent = \"Pi : \" + pi;\r\n    document.getElementById('pj').textContent = \"Pj : \" + pj;\r\n    */\r\n    return [pi, pj]\r\n};\r\nexport default pixelCal\r\n","import $ from \"jquery\";\r\nimport dicomParser from \"dicom-parser\";\r\nimport {ROI_addCheckbox,ROI_checkEvent} from \"./checkbox\";\r\nimport pixelCal from \"./voxel2pixel\";\r\nimport fullColorHex from \"./rgbToHex.js\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\n\r\nfunction isASCII(str) {\r\n    return /^[\\x00-\\x7F]*$/.test(str);\r\n}\r\n\r\nlet dataSet;\r\n\r\nfunction structFile(file) {\r\n    // clear any data currently being displayed as we parse this next file\r\n    //document.getElementById('rtstruct').innerHTML = '';\r\n    //document.getElementById('rtstruct3').innerHTML = '';\r\n\r\n    $('#status').removeClass('alert-warning alert-success alert-danger').addClass('alert-info');\r\n    $('#warnings').empty();\r\n    //document.getElementById('statusText2').innerHTML = 'Status: Loading file, please wait..';\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (file) {\r\n        let arrayBuffer = reader.result;\r\n        // Here we have the file data as an ArrayBuffer.  dicomParser requires as input a\r\n        // Uint8Array so we create that here\r\n        let byteArray = new Uint8Array(arrayBuffer);\r\n\r\n        let kb = byteArray.length / 1024;\r\n        let mb = kb / 1024;\r\n        let byteStr = mb > 1 ? mb.toFixed(3) + \" MB\" : kb.toFixed(0) + \" KB\";\r\n\r\n        //document.getElementById('statusText2').innerHTML = 'Status: Parsing ' + byteStr + ' bytes, please wait..';\r\n\r\n\r\n        // set a short timeout to do the parse so the DOM has time to update itself with the above message\r\n        setTimeout(function () {\r\n            // Invoke the paresDicom function and get back a DataSet object with the contents\r\n            try {\r\n                let start = new Date().getTime();\r\n                dataSet = dicomParser.parseDicom(byteArray);\r\n\r\n                let output1 = [];\r\n                let output3 = [];\r\n\r\n                ROIList(dataSet);\r\n                contour(dataSet, output1, output3);\r\n                roiJson(roi_List);\r\n                contourJson(contourList);\r\n\r\n                ROI_checkEvent();\r\n\r\n                // Combine the array of strings into one string and add it to the DOM\r\n               // document.getElementById('rtstruct').innerHTML = '<ul>' + output1.join('') + '</ul>';\r\n                //document.getElementById('rtstruct3').innerHTML = '<ul>' + output3.join('') + '</ul>';\r\n\r\n                let end = new Date().getTime();\r\n                let time = end - start;\r\n                if (dataSet.warnings.length > 0) {\r\n                    $('#status1').removeClass('alert-success alert-info alert-danger').addClass('alert-warning');\r\n                   // $('#statusText2').html('Status: Warnings encountered while parsing file (file of size ' + byteStr + ' parsed in ' + time + 'ms)');\r\n\r\n                    dataSet.warnings.forEach(function (warning) {\r\n                        $(\"#warnings\").append('<li>' + warning + '</li>');\r\n                    });\r\n                } else {\r\n                    let pixelData = dataSet.elements.x7fe00010;\r\n                    if (pixelData) {\r\n                        $('#status1').removeClass('alert-warning alert-info alert-danger').addClass('alert-success');\r\n                     //   $('#statusText2').html('Status: Ready (file of size ' + byteStr + ' parsed in ' + time + 'ms)');\r\n                    } else {\r\n                        $('#status1').removeClass('alert-warning alert-info alert-danger').addClass('alert-success');\r\n                      //  $('#statusText2').html('Status: Ready - no pixel data found (file of size ' + byteStr + ' parsed in ' + time + 'ms)');\r\n                    }\r\n                }\r\n\r\n            } catch (err) {\r\n                let message = err;\r\n                if (err.exception) {\r\n                    message = err.exception;\r\n                }\r\n                $('#status').removeClass('alert-success alert-info alert-warning').addClass('alert-danger');\r\n               // document.getElementById('statusText2').innerHTML = 'Status: Error - ' + message + ' (file of size ' + byteStr + ' )';\r\n\r\n                if (err.output1 || err.output3) {\r\n                  //  document.getElementById('rtstruct').innerHTML = '<ul>' + output1.join('') + '</ul>';\r\n                  //  document.getElementById('rtstruct3').innerHTML = '<ul>' + output3.join('') + '</ul>';\r\n                } else if (err.dataSet) {\r\n                    var output1 = [];\r\n                    var output3 = [];\r\n\r\n                    ROIList(err.dataSet);\r\n                    contour(err.dataSet, output1, output3);\r\n                  //  document.getElementById('rtstruct').innerHTML = '<ul>' + output1.join('') + '</ul>';\r\n                   // document.getElementById('rtstruct3').innerHTML = '<ul>' + output3.join('') + '</ul>';\r\n                }\r\n            }\r\n        }, 10);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    return dataSet;\r\n}\r\n\r\nlet roi_List = [];\r\n\r\nfunction ROIList(dataSet) {\r\n    try {\r\n        for (let propertyName in dataSet.elements) {\r\n\r\n            let element = dataSet.elements[propertyName];\r\n\r\n            //show ROI List\r\n            if (element.tag === 'x30060020' || (element.tag === 'x30060022') || element.tag === 'x30060026') {\r\n                let text = element.tag;\r\n                if (element.hadUndefinedLength) {\r\n                    text += \" <strong>(-1)</strong>\";\r\n                }\r\n                text += \"; \";\r\n                if (element.vr) {\r\n                    text += \" VR=\" + element.vr + \"; \";\r\n                }\r\n                let color = 'black';\r\n\r\n                if (element.items) { //item들을 표시\r\n                    element.items.forEach(function (item) {\r\n                        // each item contains its own data set so we iterate over the items and recursively call this function\r\n                        ROIList(item.dataSet);\r\n                    });\r\n                } else if (element.fragments) {\r\n                    // each item contains its own data set so we iterate over the items and recursively call this function\r\n                    let itemNumber = 0;\r\n                    element.fragments.forEach(function (fragment) {\r\n                        let basicOffset;\r\n                        if (element.basicOffsetTable) {\r\n                            basicOffset = element.basicOffsetTable[itemNumber];\r\n                        }\r\n                        let str = '<li>Fragment #' + itemNumber++ + ' offset = ' + fragment.offset;\r\n                        str += '(' + basicOffset + ')';\r\n                        str += '; length = ' + fragment.length + '</li>';\r\n                    });\r\n                } else {\r\n                    if (element.length === 2) {\r\n                        text += \" (\" + dataSet.uint16(propertyName) + \")\";\r\n\r\n                    } else if (element.length === 4) {\r\n                        text += \" (\" + dataSet.uint32(propertyName) + \")\";\r\n                    }\r\n                    //대부분은 문자열이지만 그렇지 않은 것들을 확인해서 표시하는 것을 위함\r\n                    let str = dataSet.string(propertyName);\r\n                    let stringIsAscii = isASCII(str);\r\n\r\n                    if (stringIsAscii) {\r\n                        // 정의되지 않은 경우 아무것도 넣지 않음\r\n                        if (str !== undefined) {\r\n                            text += '\"' + str + '\"';\r\n                        }\r\n                    } else {\r\n                        if (element.length !== 2 && element.length !== 4) {\r\n                            color = '#C8C8C8';\r\n                            // If it is some other length and we have no string\r\n                            text += \"<i>binary data</i>\";\r\n                        }\r\n                    }\r\n                    if (element.length === 0) {\r\n                        color = '#C8C8C8';\r\n                    }\r\n                    roi_List.push(element.tag, dataSet.string(propertyName));\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        let ex = {\r\n            exception: err\r\n        }\r\n        throw ex;\r\n    }\r\n}\r\n\r\nlet contourList = [];\r\n\r\nfunction contour(dataSet, output1, output3) {\r\n    try {\r\n        for (let propertyName in dataSet.elements) {\r\n            let element = dataSet.elements[propertyName];\r\n            //show contour data list\r\n\r\n            if (element.tag === 'x30060039' || element.tag === 'x3006002a' || element.tag === 'x30060040' || element.tag === 'x30060050' || element.tag === 'x30060016' || element.tag === 'x00081155' || element.tag === 'x30060084') {\r\n                let text = element.tag;\r\n\r\n                if (element.hadUndefinedLength) {\r\n                    text += \" <strong>(-1)</strong>\";\r\n                }\r\n                text += \"; \";\r\n                if (element.vr) {\r\n                    text += \" VR=\" + element.vr + \"; \";\r\n                }\r\n                let color = 'black';\r\n\r\n                // Here we check for Sequence items and iterate over them if present.\r\n                // items will not be set in the element object for elements that don't have SQ VR type.\r\n                //  Note that implicit little endian sequences will are currently not parsed.\r\n                if (element.items) { //item들을 표시\r\n                    let itemNumber = 0;\r\n                    element.items.forEach(function (item) {\r\n                        // each item contains its own data set so we iterate over the items and recursively call this function\r\n                        //   output1.push('<li class = \"item\">Item #' + itemNumber++ + ' ' + item.tag + '</li>')\r\n                        //   output1.push('<ul class = \"data\">');\r\n                        contour(item.dataSet, output1, output3);\r\n\r\n                        // output1.push('</ul>');\r\n                    });\r\n                } else if (element.fragments) {\r\n                    // each item contains its own data set so we iterate over the items and recursively call this function\r\n                    let itemNumber = 0;\r\n                    element.fragments.forEach(function (fragment) {\r\n                        let basicOffset;\r\n                        if (element.basicOffsetTable) {\r\n                            basicOffset = element.basicOffsetTable[itemNumber];\r\n                        }\r\n                        let str = '<li>Fragment #' + itemNumber++ + ' offset = ' + fragment.offset;\r\n                        str += '(' + basicOffset + ')';\r\n                        str += '; length = ' + fragment.length + '</li>';\r\n                    });\r\n                } else {\r\n                    if (element.length === 2) {\r\n                        text += \" (\" + dataSet.uint16(propertyName) + \")\";\r\n\r\n                    } else if (element.length === 4) {\r\n                        text += \" (\" + dataSet.uint32(propertyName) + \")\";\r\n                    }\r\n                    //대부분은 문자열이지만 그렇지 않은 것들을 확인해서 표시하는 것을 위함\r\n                    let str = dataSet.string(propertyName);\r\n                    let stringIsAscii = isASCII(str);\r\n\r\n                    if (stringIsAscii) {\r\n                        // 정의되지 않은 경우 아무것도 넣지 않음\r\n                        if (str !== undefined) {\r\n                            text += '\"' + str + '\"';\r\n                        }\r\n                    } else {\r\n                        if (element.length !== 2 && element.length !== 4) {\r\n                            color = '#C8C8C8';\r\n                            // If it is some other length and we have no string\r\n                            text += \"<i>binary data</i>\";\r\n                        }\r\n                    }\r\n                    if (element.length === 0) {\r\n                        color = '#C8C8C8';\r\n                    }\r\n                    //   output3.push('<li style=\"color:' + color + ';\">' + text + '</li>');\r\n                    // output1.push('<li style=\"color:' + color + ';\">' + text + '</li>');\r\n                    // finally we add the string to our  array\r\n                    contourList.push(element.tag, dataSet.string(propertyName));\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        let ex = {\r\n            exception: err,\r\n            output3: output3\r\n        }\r\n        throw ex;\r\n    }\r\n    return contourList;\r\n}\r\n\r\nfunction roiJson(roi_List) {\r\n    let ROI_Number = [];\r\n    let ROI_Name = [];\r\n\r\n    for (let i = 0; i < roi_List.length; i++) {\r\n        if (roi_List[i] == 'x30060022') {\r\n            ROI_Number[i] = roi_List[i + 1];\r\n        } else if (roi_List[i] == 'x30060026') {\r\n            ROI_Name[i] = roi_List[i + 1];\r\n        }\r\n    }\r\n\r\n    //remove undefined in array\r\n    ROI_Number = ROI_Number.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    })\r\n    ROI_Name = ROI_Name.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    })\r\n\r\n    //parsing to JSON\r\n    $(function () {\r\n        var ROI_LIST_Array = new Array();\r\n\r\n        for (let i = 0; i < ROI_Name.length; i++) {\r\n            let ROI_object = new Object();\r\n            ROI_object.x30060022 = ROI_Number[i];\r\n            ROI_object.x30060026 = ROI_Name[i];\r\n\r\n            ROI_LIST_Array.push(ROI_object);\r\n        }\r\n        ROI_addCheckbox(ROI_LIST_Array);\r\n    });\r\n\r\n}\r\n\r\nlet contour_data_Array = new Array();\r\n\r\nfunction contourJson(contourList) {\r\n    let Referenced_Instance_UID = [];\r\n    let contour_data = [];\r\n    let Referenced_ROI_Number = [];\r\n    let ROI_display_color = [];\r\n\r\n    for (let i = 0; i < contourList.length; i++) {\r\n        let j = 0;\r\n        if (contourList[i + 2] === 'x00081155') {\r\n            Referenced_Instance_UID[i] = contourList[i + 3];\r\n            contour_data[i] = contourList[i + 5];\r\n            if (contourList[i + 6] === 'x30060084') {\r\n                Referenced_ROI_Number[i] = contourList[i + 7];\r\n            } else if (contourList[i + 6] === 'x00081155') {\r\n                for (j = i + 6; j < contourList.length; j++) {\r\n                    if (contourList[j + 2] === 'x30060084') {\r\n                        Referenced_ROI_Number[i] = contourList[j + 3];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (contourList[i] === 'x3006002a') {\r\n                ROI_display_color[i] = contourList[i + 1];\r\n            } else if (contourList[i] === 'x30060050') {\r\n                for (j = i; j > 0; j--) {\r\n                    if (contourList[j] === 'x3006002a') {\r\n                        ROI_display_color[i] = contourList[j + 1];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ROI_display_color = ROI_display_color.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    Referenced_Instance_UID = Referenced_Instance_UID.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    contour_data = contour_data.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    Referenced_ROI_Number = Referenced_ROI_Number.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n\r\n    //parsing to JSON\r\n    $(function () {\r\n        for (let i = 0; i < contourList.length; i++) {\r\n            let contour_object = {};\r\n            contour_object.x30060084 = Referenced_ROI_Number[i];\r\n            contour_object.x00081155 = Referenced_Instance_UID[i];\r\n            contour_object.x30060050 = contour_data[i];\r\n            contour_object.x3006002a = ROI_display_color[i];\r\n\r\n            contour_data_Array.push(contour_object);\r\n        }\r\n    });\r\n}\r\n\r\nlet information = {\r\n    ROIs: []\r\n}\r\nlet struct, color;\r\n\r\nlet checkVal_send = information.ROIs;\r\n\r\nfunction sendDrawImage(image) {\r\n    let Instance_UID = 0;\r\n    Instance_UID = image.data.string('x00080018');\r\n\r\n    for(let j=0;j<checkVal_send.length;j++){\r\n        for (let i = 0; i < contour_data_Array.length; i++) {\r\n            if (contour_data_Array[i]['x30060084'] === checkVal_send[j]) {\r\n                if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                    struct = contour_data_Array[i]['x30060050'];\r\n                    color = contour_data_Array[i]['x3006002a'];\r\n\r\n                    draw(image, struct, color);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet img;\r\nfunction getImage(image){\r\n    img = image;\r\n    return img;\r\n}\r\n\r\nfunction checkDrawImage(checkVal_check) {\r\n    let Instance_UID = 0;\r\n    Instance_UID = img.data.string('x00080018');\r\n\r\n    for (let i = 0; i < contour_data_Array.length; i++) {\r\n        if (contour_data_Array[i]['x30060084'] === checkVal_check) {\r\n            if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                struct = contour_data_Array[i]['x30060050'];\r\n                color = contour_data_Array[i]['x3006002a'];\r\n\r\n                draw(img, struct, color, checkVal_check);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkResetImage(checkVal_check) {\r\n    let Instance_UID = 0;\r\n    Instance_UID = img.data.string('x00080018');\r\n\r\n    for (let i = 0; i < contour_data_Array.length; i++) {\r\n        if (contour_data_Array[i]['x30060084'] === checkVal_check) {\r\n            if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                struct = contour_data_Array[i]['x30060050'];\r\n                color = contour_data_Array[i]['x3006002a'];\r\n\r\n                resetCanvas(checkVal_check);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n/*Function*/\r\nfunction addROIset(evt) {\r\n    let checkVal_check;\r\n    if (evt.target.checked == true) {\r\n        information.ROIs.push(evt.target.value);\r\n        checkVal_check = evt.target.value;\r\n\r\n        checkDrawImage(checkVal_check);\r\n    }else {\r\n        let index = information.ROIs.indexOf(evt.target.value);\r\n        if (index !== -1){\r\n            information.ROIs.splice(index, 1);\r\n        }\r\n        checkVal_check = evt.target.value;\r\n        checkResetImage(checkVal_check);\r\n    }\r\n}\r\n\r\nlet canvas_obj = [];\r\nfunction draw(image,struct,color,checkVal_check) {\r\n    let px = pixelCal(image, struct);\r\n    let pi = px[0];\r\n    let pj = px[1];\r\n\r\n    let canvas = document.getElementById(\"myCanvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(pi[0], pj[1]);\r\n    for (let i = 1; i <= pi.length * 3; i++) {\r\n        if (i % 3 === 0) {\r\n            ctx.lineTo(pi[i], pj[i + 1]);\r\n\r\n        }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fillStyle = fullColorHex(color);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.restore();\r\n    canvas_obj[checkVal_check] = canvas;\r\n}\r\n\r\nfunction reset() {\r\n    let canvas = document.getElementById(\"myCanvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.clearRect(0,0,512,512);\r\n}\r\n\r\nfunction resetCanvas(checkVal_check) {\r\n    canvas_obj[checkVal_check].style.fillStyle='#ffffff';\r\n    canvas_obj[checkVal_check].style.globalAlpha=0;\r\n}\r\n\r\nexport {structFile, draw, reset , sendDrawImage, getImage , addROIset}\r\n","var rgbToHex = function (color) {\r\n    var hex = Number(color).toString(16);\r\n    if (hex.length < 2) {\r\n        hex = \"0\" + hex;\r\n    }\r\n    return hex;\r\n};\r\n\r\nvar fullColorHex = function (rgb) {\r\n    rgb = rgb.split('\\\\');\r\n\r\n    let r = rgb[0];\r\n    let g = rgb[1];\r\n    let b = rgb[2];\r\n\r\n    var red = rgbToHex(r);\r\n    var green = rgbToHex(g);\r\n    var blue = rgbToHex(b);\r\n\r\n    return \"#\" + red + green + blue;\r\n};\r\n\r\nexport default fullColorHex\r\n","import $ from \"jquery\";\r\nimport {addROIset} from \"./ROI\";\r\n\r\nfunction ROI_addCheckbox(ROI_LIST_Array) {\r\n    ROI_LIST_Array.forEach(function (n) {\r\n        let ul = document.getElementById('ul');\r\n        let li = document.createElement('li');\r\n\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = 'checkbox';\r\n        checkbox.value = n.x30060022;\r\n        checkbox.name = 'roi';\r\n\r\n        li.append(checkbox);\r\n\r\n        let text = n.x30060026;\r\n        li.append(document.createTextNode(text));\r\n        ul.append(li);\r\n    });\r\n\r\n}\r\n\r\nfunction ROI_checkEvent(){\r\n    /*Event Listener*/\r\n    $(document).ready(function(){\r\n        let roi = document.getElementsByName(\"roi\");\r\n        if (roi[0].addEventListener) {\r\n            for (let i = 0; i < roi.length; i++) {\r\n                roi[i].addEventListener(\"change\", addROIset, false);\r\n            }\r\n        } else if (roi[0].attachEvent) {\r\n            for (let i = 0; i < roi.length; i++) {\r\n                roi[i].attachEvent(\"onchange\", addROIset);\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\nexport {ROI_addCheckbox,ROI_checkEvent};\r\n","import {gridScaling} from \"../Loader/loadCTImage\";\r\n\r\nlet Rows, Columns, Number_of_Frames;\r\nfunction dose_pixel_Data_parse(image, dataSet) {\r\n    let pixelDataElement = dataSet.elements.x7fe00010;\r\n    let pixel_data = new Uint32Array(dataSet.byteArray.buffer, pixelDataElement.byteOffset, pixelDataElement.length / 4);\r\n\r\n    Rows = parseFloat(dataSet.uint16('x00280010'));\r\n    Columns = parseFloat(dataSet.uint16('x00280011'));\r\n    Number_of_Frames = parseFloat(image.data.string('x00280008'));\r\n\r\n    //초기화\r\n    let dose_grid = [];\r\n    for (let z = 0; z < Number_of_Frames; z++) {\r\n        dose_grid[z] = [];\r\n    }\r\n    for (let z = 0; z < Number_of_Frames; z++) {\r\n        for (let y = 0; y < Columns; y++) {\r\n            dose_grid[z][y] = [];\r\n        }\r\n    }\r\n\r\n    for (let z = 0; z < Number_of_Frames; z++) {\r\n        for (let y = 0; y < Columns; y++) {\r\n            for (let x = 0; x < Rows; x++) {\r\n                dose_grid[z][y][x] = [];\r\n            }\r\n        }\r\n    }\r\n    let count = 0;\r\n    let dosemax=0;\r\n    for (let z = 0; z < Number_of_Frames; z++) {\r\n        for (let y = 0; y < Columns; y++) {\r\n            for (let x = 0; x < Rows; x++) {\r\n                dose_grid[z][y][x] = pixel_data[count];\r\n                count++;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    gridScaling(image, dose_grid, Rows, Columns, Number_of_Frames);\r\n}\r\n\r\n\r\n\r\nexport {dose_pixel_Data_parse}\r\n","import dicomParse from \"../dicomParse\";\r\nimport dicomParser from \"dicom-parser\";\r\nimport Hammer from \"hammerjs\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstoneMath from \"cornerstone-math\"\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport voxelCal from \"../RT_STRUCTURE/pixel2voxel\";\r\nimport {structFile, reset, getImage, sendDrawImage} from \"../RT_STRUCTURE/ROI\";\r\nimport {doseFile,getDoseValue} from \"../RT_DOSE/isodose\";\r\nimport {Dose_Checkbox, Dose_checkEvent} from \"../RT_DOSE/doseCheckbox\";\r\n\r\ncornerstoneWadoImageLoader.external.cornerstone = cornerstone\r\ncornerstoneWadoImageLoader.external.dicomParser = dicomParser\r\ncornerstoneTools.external.cornerstone = cornerstone\r\ncornerstoneTools.external.Hammer = Hammer;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\r\ncornerstoneTools.init();\r\n\r\nlet currentImageIndex = 62;\r\n\r\n//Import a list of file names from a selected folder\r\nfunction imageIdList(e) {\r\n    let imageId = []; //image ID list from file name list\r\n    let dumpFiles = [];\r\n    let max = 1000000;\r\n    /*\r\n      let output = document.getElementById(\"listing\");\r\n      let files = e.target.files;\r\n\r\n   // show file list\r\n     for (let i=0; i<files.length; i++) {\r\n         let item = document.createElement(\"li\");\r\n         item.innerHTML = files[i].webkitRelativePath;\r\n         output.appendChild(item);\r\n     };\r\n    */\r\n    let cnt = 0;\r\n\r\n    for (let i = 0; i < max; i++) {\r\n        dumpFiles[i] = e.target.files[i];\r\n        imageId[i] = cornerstoneWadoImageLoader.wadouri.fileManager.add(dumpFiles[i]) //save file name in array\r\n\r\n        if (cnt > max) {\r\n            alert('ERROR : There are Too many files.');\r\n        }\r\n        cnt++;\r\n    }\r\n\r\n    //Index 111 : RT DOSE FILE\r\n    //Index 112 : RT PLAN FILE\r\n    //Index 113 : RT STRUCTURE FILE\r\n    doseFile(dumpFiles[111]);\r\n    structFile(dumpFiles[113]);\r\n    updateTheImage(imageId, currentImageIndex);\r\n\r\n    let el = document.getElementById('dicomImage');\r\n    el.onwheel = wheelE;\r\n\r\n    function wheelE(e) {\r\n        // Firefox e.detail > 0 scroll back, < 0 scroll forward\r\n        // chrome/safari e.wheelDelta < 0 scroll back, > 0 scroll forward\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        let index = currentImageIndex;\r\n\r\n        if (index >= 0 || index < imageId.length) {\r\n            if (e.deltaY < 0) {\r\n                if (index === currentImageIndex) {\r\n                    updateTheImage(imageId, currentImageIndex + 1); //update images\r\n\r\n                    reset();\r\n                }\r\n            } else {\r\n                if (index === currentImageIndex) {\r\n                    updateTheImage(imageId, currentImageIndex - 1); //update images\r\n\r\n                    reset();\r\n                }\r\n            }\r\n        } else {\r\n            updateTheImage(imageId, currentImageIndex); //update images\r\n         //   drawDose(dose_value[currentImageIndex]);\r\n            reset();\r\n        }\r\n        // Prevent page fom scrolling\r\n        return false;\r\n    }\r\n}\r\n\r\nlet dose_value = [];\r\n//calculate Dose value\r\nfunction gridScaling(image, dose_grid, Rows, Columns, Number_of_Frames) {\r\n    let Dose_Grid_Scaling;\r\n    Dose_Grid_Scaling = image.data.string('x3004000e');\r\n    let dosemax=0;\r\n    //초기화\r\n    for (let i = 0; i < Number_of_Frames; i++) {\r\n        dose_value[i] = [];\r\n    }\r\n    for (let i = 0; i < Number_of_Frames; i++) {\r\n        for (let j = 0; j < Columns; j++) {\r\n            dose_value[i][j] = [];\r\n        }\r\n    }\r\n    for (let i = 0; i < Number_of_Frames; i++) {\r\n        for (let j = 0; j < Columns; j++) {\r\n            for (let k = 0; k < Rows; k++) {\r\n                dose_value[i][j][k] = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    //calculate dose value\r\n    for (let z = 0; z < Number_of_Frames; z++) {\r\n        for (let y = 0; y < Columns; y++) {\r\n            for (let x = 0; x < Rows; x++) {\r\n                dose_value[z][y][x] = dose_grid[z][y][x] * Dose_Grid_Scaling / 1000 ;\r\n                dosemax = Math.max(dose_value[z][y][x]);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    Dose_Checkbox(dosemax);\r\n    Dose_checkEvent();\r\n    getDoseValue(dose_value);\r\n}\r\n\r\nlet img;\r\n// show image #1 initially\r\nfunction updateTheImage(imageIds, imageIndex) {\r\n    let el = document.getElementById('dicomImage');\r\n    cornerstone.enable(el)\r\n\r\n    currentImageIndex = imageIndex;\r\n    cornerstone.loadImage(imageIds[imageIndex]).then(function (image) {\r\n        const viewport = cornerstone.getDefaultViewportForImage(el, image);\r\n        if (image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.2' || image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            cornerstone.displayImage(el, image, viewport);\r\n\r\n            dicomParse(image);\r\n            voxelCal(image);\r\n            getImage(image);\r\n            sendDrawImage(image);\r\n\r\n            img = image;\r\n        } else {\r\n            alert(\"ERROR: Confirm this image's modality : CT , MRI ... \");\r\n        }\r\n    });\r\n    return img;\r\n}\r\n\r\n//load one CT Image from local file\r\nfunction loadCTImage(imageId) {\r\n    let el = document.getElementById('dicomImage');\r\n    cornerstone.enable(el)\r\n    cornerstone.loadImage(imageId).then(function (image) {\r\n        const viewport = cornerstone.getDefaultViewportForImage(el, image);\r\n        if (image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.2' || image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            cornerstone.displayImage(el, image, viewport);\r\n\r\n            dicomParse(image);\r\n            voxelCal(image);\r\n            getImage(image);\r\n            sendDrawImage(image);\r\n\r\n            img = image;\r\n\r\n        } else if (image.data.string('x0080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            alert('dose file')\r\n        } else {\r\n            alert(\"ERROR: Confirm this image's modality : CT , MRI ... \");\r\n        }\r\n    });\r\n    return img;\r\n}\r\n\r\nexport {loadCTImage, imageIdList, gridScaling}\r\n","import $ from \"jquery\";\r\nimport {drawDose} from \"./isodose\";\r\n\r\nfunction Dose_Checkbox(dosemax) {\r\n    let level = [];\r\n\r\n    level[0] = parseInt(dosemax);\r\n    level[1] = 100;\r\n    level[2] = 90;\r\n    level[3] = 70;\r\n    level[4] = 50;\r\n    level[5] = 30;\r\n\r\n    level.forEach(function (n) {\r\n        let ul = document.getElementById('ul2');\r\n        let li = document.createElement('li');\r\n\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = 'checkbox';\r\n        checkbox.value = n;\r\n        checkbox.name = 'dose';\r\n\r\n        li.append(checkbox);\r\n\r\n        let text = n + '% /' + (n * 40) + 'cGy';\r\n        li.append(document.createTextNode(text));\r\n        ul.append(li);\r\n    });\r\n}\r\n\r\nfunction Dose_checkEvent(){\r\n    /*Event Listener*/\r\n    $(document).ready(function(){\r\n        let dose = document.getElementsByName(\"dose\");\r\n        if (dose[0].addEventListener) {\r\n            for (let i = 0; i < dose.length; i++) {\r\n                dose[i].addEventListener(\"change\", addDoseSet, false);\r\n            }\r\n        } else if (dose[0].attachEvent) {\r\n            for (let i = 0; i < dose.length; i++) {\r\n                dose[i].attachEvent(\"onchange\", addDoseSet);\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\nlet information = {\r\n    Dose: []\r\n}\r\nfunction addDoseSet(evt) {\r\n    let checkVal_check;\r\n\r\n    if (evt.target.checked == true) {\r\n        information.Dose.push(evt.target.value);\r\n        checkVal_check = evt.target.value;\r\n\r\n        drawDose(checkVal_check);\r\n    }else {\r\n        let index = information.Dose.indexOf(evt.target.value);\r\n        if (index !== -1){\r\n            information.Dose.splice(index, 1);\r\n        }\r\n        checkVal_check = evt.target.value;\r\n\r\n    }\r\n}\r\nexport {Dose_Checkbox,Dose_checkEvent};\r\n","import * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport dicomParser from \"dicom-parser\";\r\nimport {dose_pixel_Data_parse} from \"./dosePixelDataParse\";\r\nimport {Dose_checkEvent} from \"./doseCheckbox\";\r\n\r\nlet dataSet;\r\nlet Rows, Columns, Number_of_Frames;\r\n\r\nfunction doseFile(file) {\r\n    const imageId = cornerstoneWadoImageLoader.wadouri.fileManager.add(file);\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (file) {\r\n        let arrayBuffer = reader.result;\r\n        // Here we have the file data as an ArrayBuffer.  dicomParser requires as input a\r\n        // Uint8Array so we create that here\r\n        let byteArray = new Uint8Array(arrayBuffer);\r\n\r\n        // set a short timeout to do the parse so the DOM has time to update itself with the above message\r\n        setTimeout(function () {\r\n            // Invoke the paresDicom function and get back a DataSet object with the contents\r\n            try {\r\n\r\n                dataSet = dicomParser.parseDicom(byteArray);\r\n                Rows = parseFloat(dataSet.uint16('x00280010'));\r\n                Columns = parseFloat(dataSet.uint16('x00280011'));\r\n                Number_of_Frames = parseFloat(dataSet.string('x00280008'));\r\n\r\n\r\n                doseData(imageId, dataSet);\r\n            } catch (err) {\r\n                var message = err;\r\n                if (err.exception) {\r\n                    message = err.exception;\r\n                }\r\n            }\r\n        }, 10);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    return dataSet;\r\n}\r\n\r\nfunction doseData(imageId, dataSet) {\r\n    let dose_pixelSpacing = 0;\r\n    let img = 0;\r\n\r\n    cornerstone.loadImage(imageId).then(function (image) {\r\n        if (image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n\r\n            dose_pixelSpacing = image.data.string('x00280030');\r\n            dose_pixelSpacing = dose_pixelSpacing.split('\\\\');\r\n            dose_pixelSpacing = parseFloat(dose_pixelSpacing[0]);\r\n\r\n            doseAlign(image);\r\n\r\n            dose_pixel_Data_parse(image, dataSet);\r\n        }\r\n        img = image;\r\n    });\r\n\r\n}\r\n\r\nfunction doseAlign(image) {\r\n    let modality = image.data.string('x00080060');\r\n    let SOP_UID = image.data.string('x00080016');\r\n    let Sx, Sy, Sz;\r\n    if (modality === ('CT') || SOP_UID === '1.2.840.10008.5.1.4.1.1.481.2' || modality === 'RTDOSE') {\r\n        let imgPos = image.data.string('x00200032');\r\n        let imgPosArr = imgPos.split(\"\\\\\");\r\n\r\n        Sx = (parseFloat(imgPosArr[0]) * 10) / 10;\r\n        Sy = (parseFloat(imgPosArr[1]) * 10) / 10;\r\n        Sz = (parseFloat(imgPosArr[2]) * 10) / 10;\r\n\r\n        let imgOri = image.data.string('x00200037');\r\n        imgOri = imgOri.toString();\r\n        let imgOriArr = imgOri.split(\"\\\\\");\r\n\r\n        let Xx = (parseFloat(imgOriArr[0]) * 10) / 10;\r\n        let Xy = (parseFloat(imgOriArr[1]) * 10) / 10;\r\n        let Xz = (parseFloat(imgOriArr[2]) * 10) / 10;\r\n        let Yx = (parseFloat(imgOriArr[3]) * 10) / 10;\r\n        let Yy = (parseFloat(imgOriArr[4]) * 10) / 10;\r\n        let Yz = (parseFloat(imgOriArr[5]) * 10) / 10;\r\n\r\n        let pixelSpace = image.data.string('x00280030');\r\n        pixelSpace = pixelSpace.toString();\r\n        let pixelSpaceArr = pixelSpace.split(\"\\\\\");\r\n\r\n        let Di = parseFloat((pixelSpaceArr[0]) * 10) / 10;\r\n        let Dj = parseFloat((pixelSpaceArr[1]) * 10) / 10;\r\n\r\n        let el = document.getElementById('dicomImage');\r\n\r\n        el.addEventListener('mousemove', function (event) {\r\n            const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n\r\n            let Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n            let Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n            let Pz = (Xz * Di * pixelCoords.x) + (Yz * Dj * pixelCoords.y) + Sz;\r\n\r\n            //document.getElementById('voxelCoords').textContent = \"Px = \" + Px + \", Py = \" + Py + \", Pz = \" + Pz;\r\n        });\r\n\r\n\r\n        el.addEventListener('dblclick', function (event) {\r\n            const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n\r\n            let Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n            let Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n            let Pz = (Xz * Di * pixelCoords.x) + (Yz * Dj * pixelCoords.y) + Sz;\r\n\r\n            // document.getElementById('voxelValue').textContent = \"Px = \" + Px + \", Py = \" + Py + \", Pz = \" + Pz;\r\n        });\r\n    } else {\r\n        alert('NOT CT IMAGES')\r\n    }\r\n    return [Sz];\r\n}\r\n\r\nlet dose_data = [];\r\n\r\nfunction getDoseValue(dose_value) {\r\n    dose_data = dose_value;\r\n}\r\n\r\nfunction drawDose(checkVal_check) {\r\n    let canvas = document.getElementById('doseCanvas');\r\n    let ctx = canvas.getContext('2d');\r\n\r\n    ctx.beginPath();\r\n\r\n    for (let y = 0; y < Columns; y++) {\r\n        dose_data[y] = [];\r\n    }\r\n    for (let y = 0; y < Columns; y++) {\r\n        for (let x = 0; x < Rows; x++) {\r\n            dose_data[y][x] = [];\r\n        }\r\n\r\n    }\r\n    for (let y = 0; y < Columns; y++) {\r\n        for (let x = 0; x < Rows; x++) {\r\n            if (dose_data[y][x] < checkVal_check) {\r\n                ctx.lineTo(x, y);\r\n            }\r\n        }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fillStyle = '#00ffff';\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.stroke();\r\n    ctx.fill();\r\n\r\n}\r\n\r\nexport {doseFile, doseData, drawDose, getDoseValue}\r\n","import * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport {doseFile} from \"../RT_DOSE/isodose\";\r\n\r\n// this function gets called once the user drops the file onto the div\r\n//for drag and drop import doseFile\r\nfunction handleFileSelect(evt) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    // Get the FileList object that contains the list of files that were dropped\r\n    let files = evt.dataTransfer.files;\r\n\r\n    doseFile(files[0]);\r\n    const imageId = cornerstoneWadoImageLoader.wadouri.fileManager.add(files[0]);\r\n}\r\n\r\n//this function manage drag event\r\nfunction handleDragOver(evt) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\r\n}\r\n\r\nexport {handleFileSelect,handleDragOver}\r\n","import {doseFile} from \"../RT_DOSE/isodose\";\r\n\r\nfunction handleFileChange(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    let files = e.target.files;\r\n    // this UI is only built for a single file so just dump the first one\r\n    doseFile(files[0]);\r\n}\r\n\r\nexport default handleFileChange\r\n","import React from \"react\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstoneMath from \"cornerstone-math\"\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport Hammer from \"hammerjs\";\r\nimport dicomParser from \"dicom-parser\"\r\nimport \"./MainUI.css\"\r\nimport {\r\n    angleOn,\r\n    lengthOn,\r\n    eraserOn,\r\n    drawCircle,\r\n    drawRectangle,\r\n    reductionOn,\r\n    expansionOn,\r\n    invertOn,\r\n    interpolationOn,\r\n    hflipOn,\r\n    vflipOn,\r\n    rotateOn\r\n} from \"./RT_STRUCTURE/buttonEventFunction.js\"\r\nimport {imageIdList} from './Loader/loadCTImage.js'\r\nimport {handleFileSelect, handleDragOver} from \"./Loader/dragAndDrop\";\r\nimport handleFileChange from \"./Loader/doseImport\";\r\n\r\ncornerstoneWadoImageLoader.external.cornerstone = cornerstone\r\ncornerstoneWadoImageLoader.external.dicomParser = dicomParser\r\ncornerstoneTools.external.cornerstone = cornerstone\r\ncornerstoneTools.external.Hammer = Hammer;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\r\ncornerstoneTools.init();\r\ndicomParser.toString().bold()\r\n\r\n\r\nclass MainUIElements extends React.Component {\r\n    componentDidMount() {\r\n        const element = this.element;\r\n\r\n        // Setup the dnd listeners.\r\n        let dropZone = document.getElementById('dicomImage');\r\n        dropZone.addEventListener('dragover', handleDragOver, false);\r\n        dropZone.addEventListener('drop', handleFileSelect, false);\r\n\r\n        element.addEventListener('mousedown', function (e) {\r\n            let lastX = e.pageX;\r\n            let lastY = e.pageY;\r\n            const mouseButton = e.which;\r\n\r\n\r\n            function mouseMoveHandler(e) {\r\n                const deltaX = e.pageX - lastX;\r\n                const deltaY = e.pageY - lastY;\r\n                lastX = e.pageX;\r\n                lastY = e.pageY;\r\n\r\n                if (mouseButton === 1) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.translation.x += (deltaX / viewport.scale);\r\n                    viewport.translation.y += (deltaY / viewport.scale);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                } else if (mouseButton === 2) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.voi.windowWidth += (deltaX / viewport.scale);\r\n                    viewport.voi.windowCenter += (deltaY / viewport.scale);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                    document.getElementById('bottomleft').textContent = \"WW/WC:\" + Math.round(viewport.voi.windowWidth)\r\n                        + \"/\" + Math.round(viewport.voi.windowCenter);\r\n\r\n\r\n                } else if (mouseButton === 3) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.scale += (deltaY / 100);\r\n                    cornerstone.setViewport(element, viewport);\r\n                    document.getElementById('bottomright').textContent = \"Zoom:\" + viewport.scale + \"x\";\r\n                }\r\n            }\r\n\r\n            function mouseUpHandler() {\r\n                document.removeEventListener('mousemove', mouseMoveHandler);\r\n                document.removeEventListener('mouseup', mouseUpHandler);\r\n            }\r\n\r\n            document.addEventListener('mousemove', mouseMoveHandler);\r\n            document.addEventListener('mouseup', mouseUpHandler);\r\n        });\r\n    }\r\n\r\n    //Rendering\r\n    render() {\r\n        return (\r\n            <div id=\"outsideWrapper\" className={\"outsideWrapper\"}>\r\n                <div>For Only Import Dose File =>\r\n                    <input type=\"file\" onChange={(e) => {\r\n                        handleFileChange(e)\r\n                    }}/>&nbsp;&nbsp;\r\n                </div>\r\n                <div>Directory Select =>\r\n                    <input type=\"file\" id=\"filepicker\" name=\"fileList\" webkitdirectory={\"\"} directory={\"\"} multiple\r\n                           onChange={(e) => {\r\n                               imageIdList(e);\r\n                           }}/>\r\n                </div>\r\n                <ul id=\"listing\"></ul>\r\n\r\n                <div className={'left'}>\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            angleOn()\r\n                        }}>Angle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            lengthOn()\r\n                        }}>Length\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            drawCircle()\r\n                        }}>Circle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            drawRectangle()\r\n                        }}>Rectangle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            eraserOn()\r\n                        }}>Erase\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            reductionOn()\r\n                        }}>256x256\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            expansionOn()\r\n                        }}>512x512\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            invertOn()\r\n                        }}>Toggle Invert\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            interpolationOn()\r\n                        }}>Toggle Interpolation\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            hflipOn()\r\n                        }}>Horizontal Flip\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            vflipOn()\r\n                        }}>Vertical Flip\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            rotateOn()\r\n                        }}>Rotate 90\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                </div>\r\n                <div className={'right'}>\r\n                    <ul>\r\n                        <li>Left click drag - window/level</li>\r\n                        <li>Middle Mouse button drag - pan</li>\r\n                        <li>Right click drag - zoom</li>\r\n                        <li>Mouse wheel - scroll images</li>\r\n                        <li>Double Click - save pixel/voxel</li>\r\n                    </ul>\r\n                </div>\r\n                <br></br> <br></br> <br></br>\r\n                <div class=\"left\">\r\n                    <div>\r\n                        <div id=\"dicomImageWrapper\" className=\"wrapper\"\r\n                             onContextMenu=\"return false\" onWheel={(e) => {\r\n                        }}>\r\n                            <div id=\"dicomImage\" className=\"viewportElement\"\r\n                                 ref={input => {\r\n                                     this.element = input;\r\n                                 }}>\r\n                                <canvas id=\"myCanvas\" className={\"canvas\"} width={512} height={512}/>\r\n                                <canvas id=\"doseCanvas\" className={\"canvas\"} width={512} height={512}/>\r\n                            </div>\r\n                            <div id=\"topleft\" className=\"overlay\" className=\"topleft\">\r\n                                Patient Name:\r\n                                Patient Sex:\r\n                            </div>\r\n                            <div id=\"topright\" className=\"overlay\" className=\"topright\">\r\n                                Modality :\r\n                            </div>\r\n                            <div id=\"bottomleft\" className=\"overlay\" className=\"bottomleft\">\r\n                                WW/WC:\r\n                            </div>\r\n                            <div id=\"bottomright\" className=\"overlay\" className=\"bottomright\">\r\n                                Zoom:\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div><span id=\"voxelCoords\"></span></div>\r\n                        <div><span id=\"voxelValue\"></span></div>\r\n\r\n                        <div><span id=\"patient\">Patient ID : </span></div>\r\n                        <div><span id=\"modality\">Modality : </span></div>\r\n                        <div><span id=\"instanceUID\">Instance UID : </span></div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={'right'}>\r\n                    <div className=\"lefthalf\">\r\n                        <ul id=\"ul\">Structure Set ROI Sequence</ul>\r\n                    </div>\r\n                    <div className=\"righthalf\">\r\n                        <ul id=\"ul2\">isodose</ul>\r\n                    </div>\r\n                </div>\r\n                <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n                <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n\r\n                {/*\r\n                < div class = \"patient INFO\">\r\n                    <div id=\"info\">\r\n                        <div><span id=\"studyUID\">Study UID :</span></div>\r\n                        <div><span id=\"seriesUID\">Series UID :</span></div>\r\n                        <div><span id=\"instanceUID\">Instance UID : </span></div>\r\n                        <div><span id=\"frameUID\">Frame of Reference UID : </span></div>\r\n                    </div>\r\n\r\n                    <br></br>\r\n                    <div id=\"voxel\">\r\n                        <div><span id=\"imageOrientation\">Image Orientation :</span></div>\r\n                        <div><span id=\"pixelSpacing\">Pixel Spacing :</span></div>\r\n                        <div><span id=\"imagePosition\">Image Position : </span></div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div id=\"voxelCal\">\r\n                        <div><span id=\"Sxyz\"></span></div>\r\n                        <div><span id=\"Xxyz\"></span></div>\r\n                        <div><span id=\"Yxyz\"></span></div>\r\n                        <div><span id=\"Dij\"></span></div>\r\n\r\n                    </div>\r\n                    <br></br>\r\n                    <div id=\"pixelCal\">\r\n                        <div><span id=\"struct\">Struct :</span></div>\r\n                        <br></br>\r\n                        <div><span id=\"str\">str :</span></div>\r\n                        <br></br>\r\n                        <div><span id=\"vPx\">vPx : </span></div>\r\n                        <br></br>\r\n                        <div><span id=\"vPy\">vPy : </span></div>\r\n                    </div>\r\n                    <br></br>\r\n                    <div><span id=\"contour\">contour data :</span></div>\r\n\r\n                    <div id=\"point\">\r\n                        <div id=\"pi\">Pi :</div>\r\n                        <br></br>\r\n                        <div id=\"pj\">Pj :</div>\r\n                    </div>\r\n                </div>\r\n               */}\r\n                {/*\r\n                <div>\r\n                    <div className=\"left\">\r\n                        <div id=\"status1\" className=\"alert alert-success\">\r\n                            <div id=\"statusText\">\r\n                                Status: Ready (no file loaded)\r\n                            </div>\r\n                            <ul id=\"warnings\">\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"row2\">\r\n                            <div className=\"col-md-12\">\r\n                                <div id=\"rtstruct\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3>item</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br></br><br></br>\r\n\r\n                    <div className=\"right\">\r\n                        <div className=\"row2\">\r\n                            <div className=\"col-md-12\">\r\n                                <div id=\"rtstruct3\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3>contour data</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                */}\r\n                <img id={\"image\"} src={\"\"}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainUIElements\r\n","import \"../MainUI.css\"\r\nimport \"../MainUI.js\"\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\n\r\nexport {\r\n    angleOn,\r\n    lengthOn,\r\n    eraserOn,\r\n    drawCircle,\r\n    drawRectangle,\r\n    reductionOn,\r\n    expansionOn,\r\n    invertOn,\r\n    interpolationOn,\r\n    hflipOn,\r\n    vflipOn,\r\n    rotateOn\r\n}\r\n\r\nfunction angleOn() {\r\n    const AngleTool = cornerstoneTools.AngleTool;\r\n    cornerstoneTools.addTool(AngleTool)\r\n    cornerstoneTools.setToolActive('Angle', {mouseButtonMask: 1})\r\n\r\n\r\n}\r\n\r\nfunction lengthOn() {\r\n    const LengthTool = cornerstoneTools.LengthTool;\r\n    cornerstoneTools.addTool(LengthTool)\r\n    cornerstoneTools.setToolActive(\"Length\", {mouseButtonMask: 1})\r\n}\r\n\r\nfunction eraserOn() {\r\n    const EraserTool = cornerstoneTools.EraserTool;\r\n    cornerstoneTools.addTool(EraserTool);\r\n    cornerstoneTools.setToolActive(\"Eraser\", {mouseButtonMask: 1})\r\n}\r\n\r\nfunction reductionOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    element.style.width = '256px';\r\n    element.style.height = '256px';\r\n    cornerstone.resize(element);\r\n}\r\n\r\nfunction expansionOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    element.style.width = '512px';\r\n    element.style.height = '512px';\r\n    cornerstone.resize(element);\r\n\r\n}\r\n\r\nfunction invertOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.invert = !viewport.invert;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction interpolationOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.pixelReplication = !viewport.pixelReplication;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction hflipOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.hflip = !viewport.hflip;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction vflipOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.vflip = !viewport.vflip;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction rotateOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.rotation += 90;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction drawCircle() {\r\n    const EllipticalRoiTool = cornerstoneTools.EllipticalRoiTool;\r\n    cornerstoneTools.addTool(EllipticalRoiTool)\r\n    cornerstoneTools.setToolActive('EllipticalRoi', {mouseButtonMask: 1})\r\n}\r\n\r\nfunction drawRectangle() {\r\n    const RectangleRoiTool = cornerstoneTools.RectangleRoiTool;\r\n    cornerstoneTools.addTool(RectangleRoiTool)\r\n    cornerstoneTools.setToolActive('RectangleRoi', {mouseButtonMask: 1})\r\n}\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport MainUIElements from \"./main/MainUI\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <div>\r\n      <MainUIElements/>\r\n    </div>\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}