{"version":3,"sources":["logo.svg","main/ButtonEvent.js","main/PatientInformation.js","main/RT_STRUCTURE/Pixel2Voxel.js","main/RT_STRUCTURE/Voxel2Pixel.js","main/RT_STRUCTURE/RGB2Hex.js","main/RT_STRUCTURE/DrawROI.js","main/RT_DOSE/DoseCheckbox.js","main/RT_DOSE/GridScaling.js","main/RT_DOSE/ImportPixelData.js","main/RT_DOSE/ConvertMatrix.js","main/RT_DOSE/DrawDose.js","main/RT_STRUCTURE/RTStructureData2JSON.js","main/RT_STRUCTURE/ROICheckbox.js","main/RT_STRUCTURE/GetROIList.js","main/Loader/FileLoader.js","main/Loader/DragAndDrop.js","main/MouseControl.js","main/MainUI.js","App.js","serviceWorker.js","index.js"],"names":["ButtonEvent","AngleTool","cornerstoneTools","mouseButtonMask","LengthTool","EraserTool","element","document","getElementById","viewport","cornerstone","invert","pixelReplication","hflip","vflip","rotation","EllipticalRoiTool","RectangleRoiTool","patientInformation","Px","Py","CT_image","textContent","data","string","err","message","exception","alert","voxelCal","modality","SOP_UID","imgPosArr","split","Sx","parseFloat","Sy","imgOri","imgOriArr","toString","Xx","Xy","Yx","Yy","pixelSpacing","pixelSpaceArr","Di","Dj","el","addEventListener","event","pixelCoords","pageX","pageY","Math","round","x","y","pixelCal","struct","str","vPx","vPy","i","length","voxel","pi","pj","RGB2Hex","color","hex","Number","fullColorHex","rgb","r","g","b","drawROI","px","ctx","getContext","save","beginPath","moveTo","lineTo","closePath","fillStyle","globalAlpha","stroke","fill","restore","reset","clearRect","information","Dose","addDoseSet","e","target","checked","push","value","getCheckValue","index","indexOf","splice","Rows","Columns","Number_of_Frames","dose_value","gridScaling","dose_image","dose_pixel_data","Dose_Grid_Scaling","dose_value_temp","cnt","z","dose_sort","sort","a","dosemax","level","pres","parseInt","forEach","n","ul","li","createElement","checkbox","type","name","append","text","createTextNode","DoseCheckbox","$","ready","dose","getElementsByName","attachEvent","dataSet","dose_imgOriArr","dose_imgPosArr","dose_pixelSpaceArr","doseFile","file","imageId","cornerstoneWadoImageLoader","fileManager","add","reader","FileReader","onload","arrayBuffer","result","byteArray","Uint8Array","setTimeout","dicomParser","parseDicom","uint16","then","dose_pixelSpacing","imgPos","pixelDataElement","elements","x7fe00010","Bits_Allocated","Uint32Array","buffer","slice","dataOffset","Uint16Array","importPixelData","readAsArrayBuffer","findXY","checkVal_check_dose","Vi","Vj","dose_Sx","dose_Sy","dose_Sz","dose_Xx","dose_Xy","dose_Xz","dose_Yx","dose_Yy","dose_Yz","dose_Di","dose_Dj","dose_vecPatHor","dose_vecPatVer","dose_vecPatNor","math","matrixDose2Patient","dose_draw_color","CT_pixelSpacing","img","CT_pixelSpaceArr","CT_imgPosArr","CT_imgOri","CT_imgOriArr","CT_Sx","CT_Sy","CT_Sz","CT_Xx","CT_Xy","CT_Xz","CT_Yx","CT_Yy","CT_Yz","CT_Di","CT_Dj","vecPatHor","vecPatVer","vecPatNor","matrixCT2Patient","matrixPatient2CT","DOSE2CT","coordsDOSE2CT","DOSE2CT_xy","DOSE2CT_x","DOSE2CT_y","scale","translate","strokeStyle","drawDose","dose2CT","CT2Patient","dose2patient","roiData2JSON","roi_List","ROI_Number","ROI_Name","filter","item","undefined","ROI_LIST_Array","ROI_object","x30060022","x30060026","ROICheckbox","contour_data_Array","ROIs","checkVal_send","addROIset","evt","checkVal_check","Instance_UID","roiCheckAndDraw","isASCII","test","structFile","removeClass","addClass","empty","roiListHierarchy","getContourData","ROI_List","contourList","Referenced_Instance_UID","contour_data","Referenced_ROI_Number","ROI_display_color","j","contour_object","x30060084","x00081155","x30060050","x3006002a","contourData2JSON","roi","output1","output3","propertyName","tag","hadUndefinedLength","vr","items","fragments","itemNumber","fragment","basicOffset","basicOffsetTable","offset","uint32","Hammer","cornerstoneMath","currentImageIndex","fileJsonArray","updateTheImage","CTimageIds","imageIndex","directCheckAndDraw","doseCheckAndDraw","position","handleFileSelect","stopPropagation","preventDefault","files","dataTransfer","handleDragOver","dropEffect","Controlled","props","state","translation","this","onChange","setState","id","className","ref","input","width","height","React","Component","bold","buttonEvent","MainUIElements","dropZone","lastX","lastY","mouseButton","which","mouseMoveHandler","deltaX","deltaY","voi","windowWidth","windowCenter","mouseUpHandler","removeEventListener","webkitdirectory","directory","multiple","temp_imageId","fileName","fileJson","webkitRelativePath","fileLength","onwheel","fileLoader","onClick","angleOn","lengthOn","drawCircle","drawRectangle","eraserOn","invertOn","interpolationOn","hflipOn","vflipOn","rotateOn","class","onContextMenu","onWheel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.9e857d46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import \"./MainUI.css\"\r\nimport \"./MainUI.js\"\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\n/**\r\n * Button Event Class\r\n * @class\r\n * @description\r\n * This class include Button Event Functions\r\n * 1) angleOn\r\n * 2) lengthOn\r\n * 3) eraserOn\r\n * 4) invertOn\r\n * 5) interpolationOn\r\n * 6) hflipOn\r\n * 7) vflipOn\r\n * 8) rotateOn\r\n * 9) drawCircle\r\n * 10) drawRectangle\r\n * @author Choi jin kyung\r\n */\r\nclass ButtonEvent {\r\n    angleOn() {\r\n        const AngleTool = cornerstoneTools.AngleTool;\r\n        cornerstoneTools.addTool(AngleTool)\r\n        cornerstoneTools.setToolActive('Angle', {mouseButtonMask: 1});\r\n    }\r\n\r\n    lengthOn() {\r\n        const LengthTool = cornerstoneTools.LengthTool;\r\n        cornerstoneTools.addTool(LengthTool)\r\n        cornerstoneTools.setToolActive(\"Length\", {mouseButtonMask: 1})\r\n    }\r\n\r\n    eraserOn() {\r\n        const EraserTool = cornerstoneTools.EraserTool;\r\n        cornerstoneTools.addTool(EraserTool);\r\n        cornerstoneTools.setToolActive(\"Eraser\", {mouseButtonMask: 1})\r\n    }\r\n\r\n    invertOn() {\r\n        const element = document.getElementById('dicomImage')\r\n        const viewport = cornerstone.getViewport(element);\r\n        viewport.invert = !viewport.invert;\r\n        cornerstone.setViewport(element, viewport);\r\n    }\r\n\r\n    interpolationOn() {\r\n        const element = document.getElementById('dicomImage')\r\n        const viewport = cornerstone.getViewport(element);\r\n        viewport.pixelReplication = !viewport.pixelReplication;\r\n        cornerstone.setViewport(element, viewport);\r\n    }\r\n\r\n    hflipOn() {\r\n        const element = document.getElementById('dicomImage')\r\n        const viewport = cornerstone.getViewport(element);\r\n        viewport.hflip = !viewport.hflip;\r\n        cornerstone.setViewport(element, viewport);\r\n    }\r\n\r\n    vflipOn() {\r\n        const element = document.getElementById('dicomImage')\r\n        const viewport = cornerstone.getViewport(element);\r\n        viewport.vflip = !viewport.vflip;\r\n        cornerstone.setViewport(element, viewport);\r\n    }\r\n\r\n    rotateOn() {\r\n        const element = document.getElementById('dicomImage')\r\n        const viewport = cornerstone.getViewport(element);\r\n        viewport.rotation += 90;\r\n        cornerstone.setViewport(element, viewport);\r\n    }\r\n\r\n    drawCircle() {\r\n        const EllipticalRoiTool = cornerstoneTools.EllipticalRoiTool;\r\n        cornerstoneTools.addTool(EllipticalRoiTool)\r\n        cornerstoneTools.setToolActive('EllipticalRoi', {mouseButtonMask: 1})\r\n    }\r\n\r\n    drawRectangle() {\r\n        const RectangleRoiTool = cornerstoneTools.RectangleRoiTool;\r\n        cornerstoneTools.addTool(RectangleRoiTool)\r\n        cornerstoneTools.setToolActive('RectangleRoi', {mouseButtonMask: 1})\r\n    }\r\n}\r\n\r\nexport default  ButtonEvent\r\n","import React from \"react\";\r\n/**\r\n * @function patientInformation\r\n * @param {object} CT_image\r\n * @description\r\n * This function deals with\r\n * 1. Output patient information from CT image\r\n * 2. If you want, add the information.\r\n *\r\n * < DICOM Tag >\r\n * 1) Patient Name : x00100010\r\n * 2) Patient ID : x00100020\r\n * 3) Gender : x00100040\r\n * */\r\nfunction patientInformation(CT_image) {\r\n    try {\r\n        // print the dicom information\r\n        document.getElementById('patientName').textContent = 'Patient Name : ' + CT_image.data.string('x00100010');\r\n        document.getElementById('patientID').textContent = 'Patient ID : ' + CT_image.data.string('x00100020');\r\n        document.getElementById('gender').textContent = 'Gender : ' + CT_image.data.string('x00100040');\r\n    } catch (err) {\r\n        var message = err;\r\n        if (err.exception) {\r\n            message = err.exception;\r\n            alert(message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default patientInformation;\r\n","import * as cornerstone from \"cornerstone-core\";\r\n\r\nlet Px, Py;\r\n/**\r\n * @function voxelCal\r\n * @param {object} CT_image\r\n * @description\r\n * This function deals with\r\n * 1. Changed to pixels -> mm\r\n * 2. Pixel -> Voxel\r\n * 3. Change from Canvas Coordinate to CT Coordinate\r\n * 4. Mousemove event occurred -> px, mm output\r\n * 5. Condition : Modality = CT or SOP_UID = 1.2.840.10008.5.1.4.1.1.481.2\r\n *\r\n * < DICOM Tag >\r\n * 1) Modality : x00080060\r\n * 2) SOP Class UID : x00080016\r\n * 3) Image Position : x00200032\r\n * 4) Image Orientation : x00200037\r\n * 5) Pixel Spacing :x00280030\r\n **/\r\nfunction voxelCal(CT_image) {\r\n    try{\r\n        let modality = CT_image.data.string('x00080060');\r\n        let SOP_UID = CT_image.data.string('x00080016');\r\n\r\n        if (modality === ('CT') || SOP_UID === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            let imgPos = CT_image.data.string('x00200032');\r\n            let imgPosArr = imgPos.split(\"\\\\\");\r\n\r\n            let Sx = (parseFloat(imgPosArr[0]) * 10) / 10;\r\n            let Sy = (parseFloat(imgPosArr[1]) * 10) / 10;\r\n\r\n            let imgOri = CT_image.data.string('x00200037');\r\n            imgOri = imgOri.toString();\r\n            let imgOriArr = imgOri.split(\"\\\\\");\r\n\r\n            let Xx = (parseFloat(imgOriArr[0]) * 10) / 10;\r\n            let Xy = (parseFloat(imgOriArr[1]) * 10) / 10;\r\n\r\n            let Yx = (parseFloat(imgOriArr[3]) * 10) / 10;\r\n            let Yy = (parseFloat(imgOriArr[4]) * 10) / 10;\r\n\r\n            let pixelSpacing = CT_image.data.string('x00280030');\r\n            pixelSpacing = pixelSpacing.toString();\r\n            let pixelSpaceArr = pixelSpacing.split(\"\\\\\");\r\n\r\n            let Di = parseFloat((pixelSpaceArr[0]) * 10) / 10;\r\n            let Dj = parseFloat((pixelSpaceArr[1]) * 10) / 10;\r\n\r\n\r\n            let el = document.getElementById('dicomImage');\r\n            //CTimage의 좌표를 mm로 반환\r\n            el.addEventListener('mousemove', function (event) {\r\n                const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n\r\n                document.getElementById('coords').textContent = \"X: \" + (Math.round(pixelCoords.x * 10) / 10) + \"px  Y: \" + (Math.round(pixelCoords.y * 10) / 10) + 'px';\r\n\r\n                Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n                Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n\r\n                Px = Math.round(Px * 10) / 10;\r\n                Py = Math.round(Py * 10) / 10;\r\n                document.getElementById('voxelCoords').textContent = \"X: \" + Px + \"mm   Y: \" + Py + 'mm';\r\n            });\r\n\r\n            //더블클릭시 해당 좌표를 저장 후 출력\r\n            el.addEventListener('dblclick', function (event) {\r\n                const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n                document.getElementById('pixelValue').textContent = \"X: \" + (Math.round(pixelCoords.x * 10) / 10) + \"px  Y: \" + (Math.round(pixelCoords.y * 10) / 10) + 'px';\r\n\r\n                Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n                Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n\r\n                Px = Math.round(Px * 10) / 10;\r\n                Py = Math.round(Py * 10) / 10;\r\n\r\n                document.getElementById('voxelValue').textContent = \"X: \" + Px + \"mm   Y: \" + Py + 'mm';\r\n            });\r\n\r\n            return [Sx, Sy, Di, Dj, Px, Py]\r\n        } else {\r\n            alert('NOT CT IMAGES')\r\n        }\r\n    }catch(err){\r\n        var message = err;\r\n        if (err.exception) {\r\n            message = err.exception;\r\n            alert(message)\r\n        }\r\n    }\r\n}\r\n\r\nexport default voxelCal;\r\n","import voxelCal from \"./Pixel2Voxel\";\r\n\r\n/**\r\n * @function pixelCal\r\n * @param {object} CT_image\r\n * @param {string} struct -> Corresponding to current CT image, contour data of checked ROI\r\n * @description\r\n * This function deals with\r\n * 1. Changed to mm -> pixel\r\n * 2. Voxel -> Pixel\r\n * 3. Change from CT Coordinate to Canvas Coordinate\r\n * 4. Function call\r\n * <br> 1) name : voxelCAl\r\n * <br> param : CT_image\r\n **/\r\nfunction pixelCal(CT_image, struct) {\r\n    try{\r\n       if(struct != null){\r\n           let str = struct.split(\"\\\\\");\r\n           let vPx = []; //contour Data Px (voxel point x )\r\n           let vPy = []; //contour Data Py (voxel point y )\r\n\r\n           for (let i = 0; i < str.length; i++) {\r\n               if (i % 3 === 0) {\r\n                   vPx[i] = str[i];\r\n               } else if (i % 3 === 1) {\r\n                   vPy[i] = str[i];\r\n               }\r\n           }\r\n\r\n           //get CT Image's image Position, Pixel spacing\r\n           let voxel = voxelCal(CT_image);\r\n           let Sx = voxel[0];\r\n           let Sy = voxel[1];\r\n           let Di = voxel[2];\r\n           let Dj = voxel[3];\r\n\r\n           let pi = [];\r\n           let pj = [];\r\n\r\n           //convert voxel vPx,vPy to pixel pi,pj\r\n           for (let i = 0; i < str.length; i++) {\r\n               if (i % 3 === 0) {\r\n                   pi[i] = Math.round(((vPx[i] - Sx) / (Di)) * 10) / 10;\r\n               } else if (i % 3 === 1) {\r\n                   pj[i] = Math.round(((vPy[i] - Sy) / (Dj)) * 10) / 10;\r\n               }\r\n           }\r\n\r\n           return [pi, pj]\r\n       }\r\n    }catch(err){\r\n        var message = err;\r\n        if (err.exception) {\r\n            message = err.exception;\r\n            alert(message)\r\n        }\r\n    }\r\n}\r\n\r\nexport default pixelCal\r\n","/**\r\n * @function RGB2Hex\r\n * @param {string} color -> RGB color\r\n * @description\r\n * 1. Convert RGB to HEX\r\n **/\r\n\r\nlet RGB2Hex = function (color) {\r\n    let hex = Number(color).toString(16);\r\n    if (hex.length < 2) {\r\n        hex = \"0\" + hex;\r\n    }\r\n    return hex;\r\n};\r\n/**\r\n * @function fullColorHex\r\n * @param {string} rgb -> RGB color\r\n * @return \"#\" + red + green + blue\r\n * @description\r\n * 1. Convert RGB to HEX\r\n *\r\n * @example\r\n * //#RrGgBb\r\n * //#000000\r\n * //#00ff00\r\n **/\r\nlet fullColorHex = function (rgb) {\r\n    rgb = rgb.split('\\\\');\r\n\r\n    let r = rgb[0];\r\n    let g = rgb[1];\r\n    let b = rgb[2];\r\n\r\n    let red = RGB2Hex(r);\r\n    let green = RGB2Hex(g);\r\n    let blue = RGB2Hex(b);\r\n\r\n    return \"#\" + red + green + blue;\r\n};\r\n\r\nexport default fullColorHex\r\n","import pixelCal from \"./Voxel2Pixel\";\r\nimport fullColorHex from \"./RGB2Hex.js\";\r\n/**\r\n * @function drawROI\r\n * @param {object} CT_image -> CT image corresponding to the current z coordinate\r\n * @param {string} struct -> Corresponding to current CT image, contour data of checked ROI\r\n * @param {string} color -> contouring color\r\n * @description\r\n * This function deals with\r\n * 1. Convert to CT->canvas coordinates through pixelCal function.\r\n * 2. Draw the corresponding ROI.\r\n * 3. Function call\r\n * <br> 1)name : pixelCal\r\n * <br> param : image, struct\r\n * <br> 2)name : fullColorHex\r\n * <br> param : color\r\n */\r\nfunction drawROI(CT_image, struct, color) {\r\n    try{\r\n        let px = pixelCal(CT_image, struct);\r\n        let pi = px[0];\r\n        let pj = px[1];\r\n\r\n        let canvas = document.getElementById(\"myCanvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.moveTo(pi[0], pj[1]);\r\n        for (let i = 1; i <= pi.length * 3; i++) {\r\n            if (i % 3 === 0) {\r\n                ctx.lineTo(pi[i], pj[i + 1]);\r\n            }\r\n        }\r\n        ctx.closePath();\r\n        ctx.fillStyle = fullColorHex(color);\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }catch(err){\r\n        var message = err;\r\n        if (err.exception) {\r\n            message = err.exception;\r\n            alert(message)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @function reset\r\n * @description\r\n * This function deals with\r\n * 1. Erase the canvas.\r\n * 2. Control the canvas from overlapping during mouse wheel events\r\n */\r\nfunction reset() {\r\n    let canvas = document.getElementById(\"myCanvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, 512, 512);\r\n}\r\n\r\n\r\nexport {drawROI, reset}\r\n","import $ from \"jquery\";\r\nimport {getCheckValue} from \"../Loader/FileLoader\";\r\n/**\r\n * @function DoseCheckbox\r\n * @param {number} dosemax -> dose Max Value\r\n * @description\r\n * This function deals with\r\n * 1. Generate checkboxes by dividing by do level\r\n */\r\nfunction DoseCheckbox(dosemax) {\r\n    let level = [];\r\n    let pres = 40 * 100; //prescription : 4000cGy\r\n    level[0] = parseInt(dosemax);\r\n    level[1] = pres;\r\n    level[2] = pres * 0.98;\r\n    level[3] = pres * 0.95;\r\n    level[4] = pres * 0.9;\r\n    level[5] = pres * 0.8;\r\n    level[6] = pres * 0.7;\r\n    level[7] = pres * 0.5;\r\n    level[8] = pres * 0.3;\r\n    level[9] = 0;\r\n\r\n    //create checkbox list\r\n    level.forEach(function (n) {\r\n        let ul = document.getElementById('dose_checkbox_ul');\r\n        let li = document.createElement('li');\r\n\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = 'checkbox';\r\n        checkbox.value = n;\r\n        checkbox.name = 'dose';\r\n\r\n        li.append(checkbox);\r\n\r\n        let text = `${parseInt((n / pres) * 100)}% / ${n}cGy`;\r\n        li.append(document.createTextNode(text));\r\n        ul.append(li);\r\n    });\r\n}\r\n\r\n/**\r\n * @function doseCheckEvent\r\n * @description\r\n * This function deals with\r\n * 1. checkbox event listener\r\n * 2. Pass checked values to addDoseSet function\r\n * 3. Function call\r\n *  <br>1)name : addDoseSet\r\n **/\r\nfunction doseCheckEvent() {\r\n    /*Event Listener*/\r\n    $(document).ready(function () {\r\n        let dose = document.getElementsByName(\"dose\");\r\n        if (dose[0].addEventListener) {\r\n            for (let i = 0; i < dose.length; i++) {\r\n                dose[i].addEventListener(\"change\", addDoseSet, false);\r\n            }\r\n        } else if (dose[0].attachEvent) {\r\n            for (let i = 0; i < dose.length; i++) {\r\n                dose[i].attachEvent(\"onchange\", addDoseSet);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nlet information = {\r\n    Dose: []\r\n}\r\n/**\r\n * @function addDoseSet\r\n * @param {event} e -> Event that occurs when Checkbox mouse click\r\n * @description\r\n * This function deals with\r\n * 1. Add checked values to the Dose set\r\n * 2. Delete unchecked values from the Dose set\r\n * 3. Function call\r\n *  <br> 1) name : getCheckValue\r\n *  <br> param : information.Dose\r\n **/\r\nfunction addDoseSet(e) {\r\n    if (e.target.checked === true) {\r\n        information.Dose.push(e.target.value);\r\n        getCheckValue(information.Dose);\r\n    } else { // 체크 해제된 값을 Dose set에서 뺀다\r\n        let index = information.Dose.indexOf(e.target.value);\r\n        if (index !== -1) {\r\n            information.Dose.splice(index, 1);\r\n        }\r\n        getCheckValue(information.Dose);\r\n    }\r\n}\r\n\r\nexport {DoseCheckbox, doseCheckEvent};\r\n","import {DoseCheckbox, doseCheckEvent} from \"./DoseCheckbox\";\r\n\r\nlet dose_value = [];\r\n/**\r\n * @function gridScaling\r\n * @param {object} dose_image -> Dose image object\r\n * @param {object} dose_pixel_data ->  Dose pixel data\r\n * @param {number} Rows -> Row value of received dose ( tag : x00280010 )\r\n * @param {number} Columns -> Columns value of received dose ( tag : x00280011 )\r\n * @param {number} Number_of_Frames -> Number_of_Frames value of received dose ( tag : x00280008 )\r\n * @description\r\n * This function deals with\r\n * 1. Obtain dose values\r\n * 2. GridScaling the pixel data to obtain the dose value.\r\n * 3. Obtain max Dose value\r\n * 4. Function call\r\n * <br> 1) name : doseCheckbox\r\n * <br>    param : dosemax\r\n * <br> 2) name : doseCheckEvent\r\n *\r\n * < DICOM tag >\r\n *   <br>  1) Dose_Grid_SCaling : x3004000e\r\n */\r\n//calculate Dose value\r\nfunction gridScaling(dose_image, dose_pixel_data, Rows, Columns, Number_of_Frames) {\r\n    let Dose_Grid_Scaling = parseFloat(dose_image.data.string('x3004000e'));\r\n    let dose_value_temp = [];\r\n\r\n    //초기화\r\n    for (let i = 0; i < Number_of_Frames; i++) {\r\n        dose_value_temp[i] = [];\r\n    }\r\n\r\n    //calculate dose value\r\n    for (let i = 0; i < dose_pixel_data.length; i++) {\r\n        dose_value_temp[i] = dose_pixel_data[i] * Dose_Grid_Scaling * 100;\r\n    }\r\n\r\n    // javascript는 이렇게 각각 다 초기화 해줘야함..\r\n    let cnt = 0;\r\n    for (let z = 111; z > 111 - Number_of_Frames; z--) {\r\n        dose_value[z] = [];\r\n    }\r\n\r\n    for (let z = 111; z > 111 - Number_of_Frames; z--) {\r\n        for (let y = 1; y <= Rows; y++) {\r\n            dose_value[z][y] = [];\r\n        }\r\n    }\r\n    for (let z = 111; z > 111 - Number_of_Frames; z--) {\r\n        for (let y = 1; y <= Rows; y++) {\r\n            for (let x = 1; x <= Columns; x++) {\r\n\r\n                dose_value[z][y][x] = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    let dose_sort = [];\r\n    //convert array to 3 dimension\r\n    for (let z = 111; z > 111 - Number_of_Frames; z--) {\r\n        for (let y = 1; y <= Rows; y++) {\r\n            for (let x = 1; x <= Columns; x++) {\r\n                dose_value[z][y][x] = dose_value_temp[cnt];\r\n                dose_sort.push(dose_value[z][y][x]);\r\n                cnt++;\r\n            }\r\n        }\r\n    }\r\n\r\n    // find dose Max value\r\n    dose_sort.sort(function (a, b) {\r\n        return b - a;\r\n    })\r\n\r\n    let dosemax = dose_sort[0];\r\n\r\n    DoseCheckbox(dosemax);\r\n    doseCheckEvent();\r\n}\r\n\r\n/**\r\n * @function getDoseValue\r\n * @return dose_value\r\n * @description\r\n * This function deals with\r\n * 1. return dose_value\r\n */\r\nfunction getDoseValue(){\r\n    return dose_value;\r\n}\r\n\r\nexport {gridScaling,getDoseValue};\r\n","import {gridScaling} from \"./GridScaling\";\r\n\r\nlet Rows, Columns, Number_of_Frames;\r\n/**\r\n * @function importPixelData\r\n * @param {object} dose_image ->Dose Image\r\n * @param {object} dataSet ->  Dose dataset\r\n * @description\r\n * This function deals with\r\n * 1. Import Dose Pixel Data\r\n * 2. Parse the Pixel Data\r\n * 4. Function call\r\n * <br> 1) name : gridScaling\r\n * <br>    param :dose_image, dose_pixel_data, Rows, Columns, Number_of_Frames\r\n *\r\n * < DICOM tag >\r\n * <br>    1) Pixel Data : x7fe00010\r\n *  <br>    2) Bits Allocated : x00280100\r\n */\r\nfunction importPixelData(dose_image, dataSet) {\r\n        try{\r\n                let pixelDataElement = dataSet.elements.x7fe00010;\r\n                let Bits_Allocated = dose_image.data.uint16('x00280100');\r\n\r\n                let dose_pixel_data =[];\r\n\r\n                if(Bits_Allocated === 32 || Bits_Allocated ==='32' ){\r\n                        dose_pixel_data = new Uint32Array(dataSet.byteArray.buffer.slice(pixelDataElement.dataOffset),0,pixelDataElement.length/4);\r\n                }else if (Bits_Allocated === 16 || Bits_Allocated ==='16'){\r\n                        dose_pixel_data = new Uint16Array(dataSet.byteArray.buffer.slice(pixelDataElement.dataOffset),0,pixelDataElement.length/4);\r\n                }\r\n\r\n                Rows = parseFloat(dataSet.uint16('x00280010'));\r\n                Columns = parseFloat(dataSet.uint16('x00280011'));\r\n                Number_of_Frames = parseFloat(dose_image.data.string('x00280008'));\r\n\r\n                gridScaling(dose_image, dose_pixel_data, Rows, Columns, Number_of_Frames);\r\n        }catch (err){\r\n                var message = err;\r\n                if (err.exception) {\r\n                        message = err.exception;\r\n                        alert(message)\r\n                }\r\n        }\r\n\r\n}\r\n\r\nexport {importPixelData}\r\n","import * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport dicomParser from \"dicom-parser\";\r\nimport {importPixelData} from \"./ImportPixelData\";\r\nimport {drawDose} from \"./DrawDose\";\r\nimport * as math from 'mathjs';\r\n\r\nlet dataSet = [];\r\nlet Rows = 0, Columns = 0;\r\nlet dose_imgOriArr = [];\r\nlet dose_imgPosArr = [];\r\nlet dose_pixelSpaceArr = [];\r\n\r\n/**\r\n * @function doseFile\r\n * @param {object} file -> File transferred from fileLoaer function\r\n * @description\r\n * This function deals with\r\n * 1. Loading DOSE file\r\n * 2. DOSE Data Parsing\r\n * 3. Function call\r\n *    <br>1) name : importPixelData\r\n *      <br>param : dose_image, dataSet\r\n *\r\n * < DICOM Tag >\r\n * 1) ROWS : x00280010\r\n * 2) COLUMNS : x00280011\r\n * 3) SOP Class UID : x00080016\r\n * 4) Pixel Spacing : x00280030\r\n * 5) Image Position : x00200032\r\n * 6) Image Orientation : x00200037\r\n *\r\n * @example\r\n *  // How to parse the dicom data ?\r\n *\r\n *  // User ArrayBuffer and DicomParser\r\n *  let dataSet = dicomParser.parseDicom(byteArray)\r\n *  dataSet.uint16('x00280010')\r\n *\r\n *  // Use cornerstone Image loader\r\n *  dose_image.data.string('x00080016') *\r\n */\r\nfunction doseFile(file) {\r\n    const imageId = cornerstoneWadoImageLoader.wadouri.fileManager.add(file);\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function () {\r\n        let arrayBuffer = reader.result;\r\n        // Here we have the file data as an ArrayBuffer.  dicomParser requires as input a\r\n        // Uint8Array so we create that here\r\n        let byteArray = new Uint8Array(arrayBuffer);\r\n\r\n        // set a short timeout to do the parse so the DOM has time to update itself with the above message\r\n        setTimeout(function () {\r\n            // Invoke the paresDicom function and get back a DataSet object with the contents\r\n            try {\r\n\r\n                dataSet = dicomParser.parseDicom(byteArray);\r\n                Rows = parseFloat(dataSet.uint16('x00280010'));\r\n                Columns = parseFloat(dataSet.uint16('x00280011'));\r\n\r\n                cornerstone.loadImage(imageId).then(function (dose_image) {\r\n                    if (dose_image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n                        let dose_pixelSpacing = dose_image.data.string('x00280030');\r\n\r\n                        dose_pixelSpacing = dose_pixelSpacing.toString();\r\n                        dose_pixelSpaceArr = dose_pixelSpacing.split(\"\\\\\");\r\n\r\n                        let imgPos = dose_image.data.string('x00200032');\r\n                        dose_imgPosArr = imgPos.split(\"\\\\\");\r\n\r\n                        let imgOri = dose_image.data.string('x00200037');\r\n                        imgOri = imgOri.toString();\r\n                        dose_imgOriArr = imgOri.split(\"\\\\\");\r\n\r\n\r\n                        importPixelData(dose_image, dataSet);\r\n                    }\r\n                });\r\n            } catch (err) {\r\n                var message = err;\r\n                if (err.exception) {\r\n                    message = err.exception;\r\n                    alert(message)\r\n                }\r\n            }\r\n        }, 10);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    return dataSet;\r\n}\r\n\r\n/**\r\n * @function findXY\r\n * @param {object} dose_value -> Dose value = pixelData * gridscaling\r\n * @param {string} checkVal_check_dose -> value that Checked Dose Level\r\n * @param {string} color -> dose overlay color\r\n * @description\r\n * This function deals with\r\n * 1. Extract x,y coordinates from an obejct containing dose values that are above the reference dose value (checkVal_check_dose).\r\n * 2. Function call\r\n *      <br>1) name : dose2patient\r\n *          <br> param : Vi, Vj, color\r\n */\r\nfunction findXY(dose_value, checkVal_check_dose, color) {\r\n    let Vi = [], Vj = [];\r\n    let cnt = 0;\r\n\r\n    try {\r\n        for (let y = 1; y <= Rows; y++) {\r\n            for (let x = 1; x <= Columns; x++) {\r\n                if (parseInt(checkVal_check_dose) <= dose_value[y][x]) { // 기준 선량값 이상인 x,y 추출\r\n                    Vi[cnt] = x;\r\n                    Vj[cnt] = y;\r\n\r\n                    cnt++;\r\n                }\r\n            }\r\n        }\r\n        dose2patient(Vi, Vj, color);\r\n    } catch (err) {\r\n        alert('Can\\'t find x,y ');\r\n    }\r\n}\r\n\r\nlet dose_draw_color = 0;\r\n\r\n/**\r\n * @function dose2patient\r\n * @param {object} Vi -> A collection of x coordinates above the reference dose value.\r\n * @param {object} Vj -> A collection of y coordinates above the reference dose value.\r\n * @param {string} color -> dose overlay color\r\n * @description\r\n * This function deals with\r\n * 1. Generate a matrix that converts the Dose to the patient coordinates\r\n * 2. Function call\r\n *    <br>1) name : CT2Patient\r\n *    <br> param : matrixDose2Patient, Vi, Vj\r\n */\r\nfunction dose2patient(Vi, Vj, color) {\r\n    let dose_Sx = parseFloat(dose_imgPosArr[0]);\r\n    let dose_Sy = parseFloat(dose_imgPosArr[1]);\r\n    let dose_Sz = parseFloat(dose_imgPosArr[2]);\r\n\r\n    let dose_Xx = parseFloat(dose_imgOriArr[0]);\r\n    let dose_Xy = parseFloat(dose_imgOriArr[1]);\r\n    let dose_Xz = parseFloat(dose_imgOriArr[2]);\r\n    let dose_Yx = parseFloat(dose_imgOriArr[3]);\r\n    let dose_Yy = parseFloat(dose_imgOriArr[4]);\r\n    let dose_Yz = parseFloat(dose_imgOriArr[5]);\r\n\r\n    let dose_Di = parseFloat(dose_pixelSpaceArr[0]);\r\n    let dose_Dj = parseFloat(dose_pixelSpaceArr[1]);\r\n\r\n    let dose_vecPatHor = [dose_Xx * dose_Di, dose_Xy * dose_Di, dose_Xz * dose_Di];\r\n    let dose_vecPatVer = [dose_Yx * dose_Dj, dose_Yy * dose_Dj, dose_Yz * dose_Dj];\r\n\r\n    //cross product ( 외적 )\r\n    let dose_vecPatNor = math.cross(dose_vecPatHor, dose_vecPatVer);\r\n\r\n    let matrixDose2Patient = math.matrix([[dose_Xx * dose_Di, dose_Yx * dose_Dj, dose_vecPatNor[0], dose_Sx],\r\n        [dose_Xy * dose_Di, dose_Yy * dose_Dj, dose_vecPatNor[1], dose_Sy],\r\n        [dose_Xz * dose_Di, dose_Yz * dose_Dj, dose_vecPatNor[2], dose_Sz],\r\n        [0, 0, 0, 1]]);\r\n\r\n    /*\r\n      // 1:1 matrix\r\n      let dose_vecPatHor = [dose_Xx , dose_Xy , dose_Xz ];\r\n      let dose_vecPatVer = [dose_Yx , dose_Yy , dose_Yz ];\r\n\r\n\r\n      //cross product ( 외적 )\r\n      let dose_vecPatNor = math.cross(dose_vecPatHor, dose_vecPatVer);\r\n\r\n      let matrixDose2Patient = math.matrix([[dose_Xx , dose_Yx , dose_vecPatNor[0], dose_Sx],\r\n          [dose_Xy , dose_Yy , dose_vecPatNor[1], dose_Sy],\r\n          [dose_Xz , dose_Yz , dose_vecPatNor[2], dose_Sz],\r\n          [0, 0, 0, 1]]);\r\n\r\n   */\r\n    dose_draw_color = color;\r\n\r\n    CT2Patient(matrixDose2Patient, Vi, Vj);\r\n}\r\n\r\nlet img = 0;\r\n\r\n/**\r\n * @function getCTimage\r\n * @param {object} CT_img\r\n * @return img\r\n * @description\r\n * This function deals with\r\n * 1. Return CT images loaded from firstloader\r\n * 2. Objective: To use CT image data within the convertMatrix file.\r\n */\r\nfunction getCTimage(CT_img) {\r\n    img = CT_img;\r\n    return img;\r\n}\r\n\r\nlet CT_Di = 0, CT_Dj = 0;\r\nlet CT_Xx, CT_Xy, CT_Xz, CT_Yx, CT_Yy, CT_Yz;\r\nlet CT_Sx, CT_Sy, CT_Sz;\r\n\r\n/**\r\n * @function CT2Patient\r\n * @param {matrix} matrixDose2Patient -> Convert Dose to Patient coords matrix\r\n * @param {object} Vi -> A collection of x coordinates above the reference dose value.\r\n * @param {object} Vj -> A collection of y coordinates above the reference dose value.\r\n * @description\r\n * This function deals with\r\n * 1. Generate a matrix that converts the CT to the patient coordinates\r\n * 2. Function call\r\n *      <br>1) name : dose2CT\r\n *      <br> param : matrixDose2Patient, matrixCT2Patient, Vi, Vj\r\n *\r\n * < DICOM Tag >\r\n * 1) Pixel Spacing : x00280030\r\n * 2) Image Position : x00200032\r\n * 3) Image Orientation : x00200037\r\n *\r\n * @example\r\n * // How to manipulate vector ?\r\n *\r\n * let vecPatHor = [CT_Xx * CT_Di, CT_Xy * CT_Di, CT_Xz * CT_Di];\r\n * let vecPatVer = [CT_Yx * CT_Dj, CT_Yy * CT_Dj, CT_Yz * CT_Dj];\r\n *\r\n * //cross product ( 외적 )\r\n * let vecPatNor = math.cross((vecPatHor), (vecPatVer));\r\n *\r\n */\r\nfunction CT2Patient(matrixDose2Patient, Vi, Vj) {\r\n    let CT_pixelSpacing = img.data.string('x00280030');\r\n    CT_pixelSpacing = CT_pixelSpacing.toString();\r\n\r\n    let CT_pixelSpaceArr = CT_pixelSpacing.split(\"\\\\\");\r\n\r\n    let CT_imgPos = img.data.string('x00200032');\r\n    let CT_imgPosArr = CT_imgPos.split(\"\\\\\");\r\n\r\n    let CT_imgOri = img.data.string('x00200037');\r\n    CT_imgOri = CT_imgOri.toString();\r\n    let CT_imgOriArr = CT_imgOri.split(\"\\\\\");\r\n\r\n    //x00200032\r\n    CT_Sx = parseFloat(CT_imgPosArr[0]);\r\n    CT_Sy = parseFloat(CT_imgPosArr[1]);\r\n    CT_Sz = parseFloat(CT_imgPosArr[2]);\r\n\r\n    //x00200037\r\n    CT_Xx = parseFloat(CT_imgOriArr[0]);\r\n    CT_Xy = parseFloat(CT_imgOriArr[1]);\r\n    CT_Xz = parseFloat(CT_imgOriArr[2]);\r\n    CT_Yx = parseFloat(CT_imgOriArr[3]);\r\n    CT_Yy = parseFloat(CT_imgOriArr[4]);\r\n    CT_Yz = parseFloat(CT_imgOriArr[5]);\r\n\r\n    //x00280030\r\n    CT_Di = parseFloat(CT_pixelSpaceArr[0]);\r\n    CT_Dj = parseFloat(CT_pixelSpaceArr[1]);\r\n\r\n    let vecPatHor = [CT_Xx * CT_Di, CT_Xy * CT_Di, CT_Xz * CT_Di];\r\n    let vecPatVer = [CT_Yx * CT_Dj, CT_Yy * CT_Dj, CT_Yz * CT_Dj];\r\n\r\n    //cross product ( 외적 )\r\n    let vecPatNor = math.cross((vecPatHor), (vecPatVer));\r\n\r\n    let matrixCT2Patient = math.matrix([[CT_Xx * CT_Di, CT_Yx * CT_Dj, vecPatNor[0], CT_Sx],\r\n        [CT_Xy * CT_Di, CT_Yy * CT_Dj, vecPatNor[1], CT_Sy],\r\n        [CT_Xz * CT_Di, CT_Yz * CT_Dj, vecPatNor[2], CT_Sz],\r\n        [0, 0, 0, 1]]);\r\n    /*\r\n        1:1 matrix\r\n        let vecPatHor = [CT_Xx , CT_Xy , CT_Xz ];\r\n        let vecPatVer = [CT_Yx , CT_Yy , CT_Yz ];\r\n\r\n        //cross product ( 외적 )\r\n        let vecPatNor = math.cross((vecPatHor), (vecPatVer));\r\n\r\n        let matrixCT2Patient = math.matrix([[CT_Xx , CT_Yx , vecPatNor[0], CT_Sx],\r\n            [CT_Xy , CT_Yy , vecPatNor[1], CT_Sy],\r\n            [CT_Xz , CT_Yz , vecPatNor[2], CT_Sz],\r\n            [0, 0, 0, 1]]);\r\n     */\r\n    dose2CT(matrixDose2Patient, matrixCT2Patient, Vi, Vj);\r\n}\r\n\r\n/**\r\n * @function dose2CT\r\n * @param {matrix} matrixDose2Patient -> Convert Dose to Patient coords matrix\r\n * @param {matrix} matrixCT2Patient -> Convert CT to Patient coords matrix\r\n * @param {object} Vi -> A collection of x coordinates above the reference dose value.\r\n * @param {object} Vj -> A collection of y coordinates above the reference dose value.\r\n * @description\r\n * This function deals with\r\n * 1. Inverse matrix ( CT- > patient )\r\n * 2. Generate a matrix that converts it to DOSE - CT\r\n * 3. Obtain x,y after converting the dose coordinates.\r\n * 4. Function call\r\n *     <br> 1) name : drawDose\r\n *     <br> param :Px, Py, dose_draw_color, CT_Di, CT_Dj\r\n */\r\nfunction dose2CT(matrixDose2Patient, matrixCT2Patient, Vi, Vj) {\r\n    let matrixPatient2CT = math.inv(matrixCT2Patient);\r\n\r\n    let DOSE2CT = math.multiply(matrixDose2Patient, matrixPatient2CT);\r\n\r\n    let coordsDOSE2CT = math.matrix([[], [], [], []]);\r\n    let DOSE2CT_xy = [];\r\n    let DOSE2CT_x = [], DOSE2CT_y = [];\r\n\r\n    //coords dose2CT\r\n    for (let i = 0; i < Vi.length; i++) {\r\n        coordsDOSE2CT[i] = math.multiply(DOSE2CT, math.matrix([[Vi[i]], [Vj[i]], [0], [1]]));\r\n        DOSE2CT_xy.push((coordsDOSE2CT[i]));\r\n    }\r\n    //let output = [];\r\n    //find dose2CT x value\r\n    for (let i = 0; i < DOSE2CT_xy.length; i++) {\r\n        DOSE2CT_x[i] = math.subset(DOSE2CT_xy[i], math.index(0, 0));\r\n        DOSE2CT_y[i] = math.subset(DOSE2CT_xy[i], math.index(1, 0));\r\n        //output.push('<ul>' + '[' + DOSE2CT_x[i] + ',' + DOSE2CT_y[i] + ']' + '</ul>');\r\n    }\r\n\r\n\r\n    let Px = [], Py = [];\r\n    for (let i = 0; i < DOSE2CT_x.length; i++) {\r\n        Px[i] = (CT_Xx * CT_Di * DOSE2CT_x[i]) + (CT_Yx * CT_Dj * DOSE2CT_y[i]) + CT_Sx;\r\n        Py[i] = (CT_Xy * CT_Di * DOSE2CT_x[i]) + (CT_Yy * CT_Dj * DOSE2CT_y[i]) + CT_Sy;\r\n        //output.push('<ul>' + '[' + Px[i] + ',' + Py[i] + ']' + '</ul>');\r\n    }\r\n\r\n    drawDose(Px, Py, dose_draw_color, CT_Di, CT_Dj);\r\n}\r\n\r\nexport {doseFile, findXY, CT2Patient, getCTimage}\r\n","import {findXY} from \"./ConvertMatrix\";\r\n/**\r\n * @function doseCheckAndDraw\r\n * @param {object} dose_value -> Dose value = pixelData * gridscaling\r\n * @param {string} checkVal_check_dose -> value that Checked Dose Level\r\n * @description\r\n * This function deals with\r\n * 1. Method to confirm that the checked values are for each level\r\n * 2. Specify color to drawROI\r\n * 3. Function call\r\n * <br> 1) name : findXY\r\n *  <br>   param : dose_value, checkVal_check_dose, color\r\n */\r\nfunction doseCheckAndDraw(dose_value, checkVal_check_dose) {\r\n    try{\r\n        let color = [];\r\n        color[0] = '#780000';\r\n        color[1] = '#EE4500';\r\n        color[2] = '#FFA500';\r\n        color[3] = '#FFFF00';\r\n        color[4] = '#00FF00';\r\n        color[5] = '#008B00';\r\n        color[6] = '#00FFFF';\r\n        color[7] = '#0000FF';\r\n        color[8] = '#000080';\r\n        color[9] = '#C93F98';\r\n\r\n        for (let i = 0; i < checkVal_check_dose.length; i++) {\r\n            if (parseInt(checkVal_check_dose[i]) === 4185) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[0]);\r\n            } else if (parseInt(checkVal_check_dose[i]) === 4000) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[1]);\r\n            } else if (parseInt(checkVal_check_dose[i]) === 3920) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[2]);\r\n            } else if (parseInt(checkVal_check_dose[i]) === 3800) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[3]);\r\n            } else if (parseInt(checkVal_check_dose[i]) === 3600) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[4]);\r\n            } else if (parseInt(checkVal_check_dose[i]) === 3200) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[5]);\r\n            } else if (parseInt(checkVal_check_dose[i]) === 2800) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[6]);\r\n            } else if (parseInt(checkVal_check_dose[i]) === 2000) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[7]);\r\n            } else if (parseInt(checkVal_check_dose[i]) === 1200) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[8]);\r\n            } else if (parseInt(checkVal_check_dose[i]) === 0) {\r\n                findXY(dose_value, checkVal_check_dose[i], color[9]);\r\n            }\r\n        }\r\n    }catch (err){\r\n        var message = err;\r\n        if (err.exception) {\r\n            message = err.exception;\r\n            alert(message)\r\n        }\r\n    }\r\n\r\n}\r\n/**\r\n * @function drawDose\r\n * @param {object} Px -> A set of coordinate values converted from x coordinates above the reference dose value to dose -> ct.\r\n * @param {object} Py ->  A set of coordinate values converted from y coordinates above the reference dose value to dose -> ct.\r\n * @param {string} color -> Colors assigned to each level\r\n * @param {number} CT_Di -> x-coordinate of CT pixelspacing\r\n * @param {number} CT_Dj -> y-coordinate of CT pixelspacing\r\n * @description\r\n * This function deals with\r\n * 1. Draw x,y coordinates received on canvas.\r\n */\r\nfunction drawDose(Px, Py, color,CT_Di,CT_Dj) {\r\n    try{\r\n        let canvas = document.getElementById('myCanvas');\r\n        let ctx = canvas.getContext('2d');\r\n\r\n        ctx.save();\r\n        ctx.scale(1.2+CT_Di,1.2+CT_Dj);\r\n        ctx.translate(-146,-125);\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(Px[0], Py[0]);\r\n        for (let i = 1; i < Px.length; i++) {\r\n            ctx.lineTo(Px[i], Py[i]);\r\n        }\r\n        ctx.closePath();\r\n        ctx.fillStyle = color;\r\n        ctx.globalAlpha = 1;\r\n        ctx.strokeStyle = color;\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }catch (err){\r\n        var message = err;\r\n        if (err.exception) {\r\n            message = err.exception;\r\n            alert(message)\r\n        }\r\n    }\r\n}\r\n\r\nexport {drawDose, doseCheckAndDraw}\r\n","import $ from \"jquery\";\r\nimport {ROICheckbox} from \"./ROICheckbox\";\r\nimport {drawROI} from \"./DrawROI\";\r\n/**\r\n * @function roiData2JSON\r\n * @param {object} roi_List\r\n * @description\r\n * This function deals with\r\n * 1. Convert ROI data to JSON for parsing\r\n * 2. Add ROI number and ROI name to JSON object.\r\n * 3. If you want to read object\r\n *  -> JSON.stringfy(object)\r\n * 4. Function call\r\n * <br> 1) name : ROICheckbox\r\n *  <br> param : ROI_LIST_Array\r\n *\r\n * < DICOM Tag >\r\n * 1) ROI Number : x30060022\r\n * 2) Patient ID : x30060026\r\n * */\r\nfunction roiData2JSON(roi_List) {\r\n    let ROI_Number = [];\r\n    let ROI_Name = [];\r\n\r\n    //ROI number와 name을 할당\r\n    for (let i = 0; i < roi_List.length; i++) {\r\n        if (roi_List[i] === 'x30060022') {\r\n            ROI_Number[i] = roi_List[i + 1];\r\n        } else if (roi_List[i] === 'x30060026') {\r\n            ROI_Name[i] = roi_List[i + 1];\r\n        }\r\n    }\r\n\r\n    //remove undefined in array\r\n    ROI_Number = ROI_Number.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    })\r\n    ROI_Name = ROI_Name.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    })\r\n\r\n    //parsing to JSON\r\n    //array에 각 json object를 넣음\r\n    $(function () {\r\n        let ROI_LIST_Array = [];\r\n\r\n        for (let i = 0; i < ROI_Name.length; i++) {\r\n            let ROI_object = {};\r\n            ROI_object.x30060022 = ROI_Number[i];\r\n            ROI_object.x30060026 = ROI_Name[i];\r\n\r\n            ROI_LIST_Array.push(ROI_object);\r\n        }\r\n\r\n        ROICheckbox(ROI_LIST_Array);\r\n    });\r\n\r\n}\r\n\r\nlet contour_data_Array = [];\r\n/**\r\n * @function contourData2JSON\r\n * @param {object} contourList\r\n * @description\r\n * This function deals with\r\n * 1. Convert Contour data to JSON for parsing\r\n * 2. Add Referenced Instance UID, Referenced ROI Number and ROI Name to JSON object.\r\n * 3. Add ROI Display Color to JSON object\r\n * 3. If you want to read object\r\n *  -> JSON.stringfy(object)\r\n *\r\n * < DICOM Tag >\r\n * 1) ROI Display Color : x3006002a\r\n * 2) Contour Data : x30060050\r\n * 3) Referenced SOP Instance UID : x00081155\r\n * 4) Referenced ROI Number : x30060084\r\n * */\r\nfunction contourData2JSON(contourList) {\r\n    let Referenced_Instance_UID = [];\r\n    let contour_data = [];\r\n    let Referenced_ROI_Number = [];\r\n    let ROI_display_color = [];\r\n\r\n    //getContourData 함수에 output1,3를 출력해보면 계층구조로 나옴\r\n    //tag와 value당 하나씩 i라고 할당했을 때\r\n    //0:tag 1:value\r\n    //2:tag 3:value\r\n    //4:tag 5:value\r\n    //이런식으로 i가 증가함.\r\n    //이건 출력해봐야 의미를 알 수 있음.\r\n    //이렇게 한 이유는 계층구조로 된 아이템들의 데이터에 접근하기 힘들어서 값을 직접 출력해서 가져옴\r\n    for (let i = 0; i < contourList.length; i++) {\r\n        let j = 0;\r\n        //각 인덱스에 + 값이 어디에 해당하는지 꼭 확인\r\n        if (contourList[i + 2] === 'x00081155') {\r\n            Referenced_Instance_UID[i] = contourList[i + 3];\r\n            contour_data[i] = contourList[i + 5];\r\n            if (contourList[i + 6] === 'x30060084') { // 만약 Referenced ROI number의 태그와 contourList의 태그와 같다면\r\n                Referenced_ROI_Number[i] = contourList[i + 7]; // 해당 태그 다음 값을 넣어줌. 값은 tag +1 임\r\n            } else if (contourList[i + 6] === 'x00081155') {\r\n                for (j = i + 6; j < contourList.length; j++) {\r\n                    if (contourList[j + 2] === 'x30060084') {\r\n                        Referenced_ROI_Number[i] = contourList[j + 3];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (contourList[i] === 'x3006002a') {\r\n                ROI_display_color[i] = contourList[i + 1];\r\n            } else if (contourList[i] === 'x30060050') {\r\n                for (j = i; j > 0; j--) {\r\n                    if (contourList[j] === 'x3006002a') {\r\n                        ROI_display_color[i] = contourList[j + 1];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ROI_display_color = ROI_display_color.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    Referenced_Instance_UID = Referenced_Instance_UID.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    contour_data = contour_data.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    Referenced_ROI_Number = Referenced_ROI_Number.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n\r\n    //parsing to JSON\r\n    $(function () {\r\n        for (let i = 0; i < contourList.length; i++) {\r\n            let contour_object = {};\r\n            contour_object.x30060084 = Referenced_ROI_Number[i];\r\n            contour_object.x00081155 = Referenced_Instance_UID[i];\r\n            contour_object.x30060050 = contour_data[i];\r\n            contour_object.x3006002a = ROI_display_color[i];\r\n\r\n            contour_data_Array.push(contour_object);\r\n        }\r\n    });\r\n}\r\n\r\n//check 된 ROI 값을 넣어줌\r\nlet information = {\r\n    ROIs: []\r\n}\r\nlet struct, color;\r\nlet checkVal_send = information.ROIs;\r\nlet img;\r\n\r\n/**\r\n * @function directCheckAndDraw\r\n * @param {object} CT_image\r\n * @description\r\n * This function deals with\r\n * 1. To draw directly when you click the mouse.\r\n * 2. Without this function, the CT image must be updated before it is drawn.\r\n * 3. If the checked value and the current CT slice, the corresponding contour data and color are saved and drawn.\r\n * 4. Function call\r\n * <br> 1) name: drawROI\r\n * <br> param : CT_image, struct, color\r\n *\r\n * < DICOM Tag >\r\n * 1) ROI Display Color : x3006002a\r\n * 2) Contour Data : x30060050\r\n * 3) Referenced SOP Instance UID : x00081155\r\n * 4) Referenced ROI Number : x30060084\r\n * */\r\nfunction directCheckAndDraw(CT_image) {\r\n    let Instance_UID = CT_image.data.string('x00080018');\r\n\r\n    for (let j = 0; j < checkVal_send.length; j++) {\r\n        for (let i = 0; i < contour_data_Array.length; i++) {\r\n            if (contour_data_Array[i]['x30060084'] === checkVal_send[j]) {\r\n                if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                    struct = contour_data_Array[i]['x30060050'];\r\n                    color = contour_data_Array[i]['x3006002a'];\r\n\r\n                    drawROI(CT_image, struct, color);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    img = CT_image;\r\n    return img;\r\n}\r\n\r\n/**\r\n * @function roiCheckAndDraw\r\n * @param {string} checkVal_check\r\n * @description\r\n * This function deals with\r\n * 1. If the checked value and the current CT slice, the corresponding contour data and color are saved and drawn.\r\n * 2. Function call\r\n * <br> 1) name: drawROI\r\n * <br> param : CT_image, struct, color\r\n *\r\n * < DICOM Tag >\r\n * 1) ROI Display Color : x3006002a\r\n * 2) Contour Data : x30060050\r\n * 3) Referenced SOP Instance UID : x00081155\r\n * 4) Referenced ROI Number : x30060084\r\n * */\r\nfunction roiCheckAndDraw(checkVal_check) {\r\n    let Instance_UID = img.data.string('x00080018');\r\n    for (let i = 0; i < contour_data_Array.length; i++) {\r\n        if (contour_data_Array[i]['x30060084'] === checkVal_check) {\r\n            if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                struct = contour_data_Array[i]['x30060050'];\r\n                color = contour_data_Array[i]['x3006002a'];\r\n\r\n                drawROI(img, struct, color);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @function addROIset\r\n * @param {event} evt\r\n * @description\r\n * This function deals with\r\n * 1. Put the ROI check set when checking.\r\n * 2. Delete from ROI check set when unchecked\r\n * 3. Function call\r\n * <br> 1) name : roiCheckAndDraw\r\n * <br> param : checkVal_check\r\n * <br> 2) name : checkAndReset //will make function\r\n * <br> param : checkVal_check\r\n */\r\nfunction addROIset(evt) {\r\n    let checkVal_check;\r\n    if (evt.target.checked === true) { // 체크 되었을 때\r\n        information.ROIs.push(evt.target.value);\r\n        checkVal_check = evt.target.value;\r\n\r\n        roiCheckAndDraw(checkVal_check);\r\n    } else { // 체크 해제시\r\n        let index = information.ROIs.indexOf(evt.target.value);\r\n        if (index !== -1) { //해당 ROI를 set에서 삭제\r\n            information.ROIs.splice(index, 1);\r\n        }\r\n        //checkVal_check = evt.target.value;\r\n    }\r\n}\r\n\r\nexport {roiData2JSON,contourData2JSON,directCheckAndDraw,addROIset}\r\n","import $ from \"jquery\";\r\nimport {addROIset} from \"./RTStructureData2JSON\";\r\n/**\r\n * @function ROICheckbox\r\n * @param {object} ROI_LIST_Array -> Object with ROI list\r\n * @description\r\n * This function deals with\r\n * 1. Generate a check box referring to the ROI Number and Name in the ROI list\r\n */\r\nfunction ROICheckbox(ROI_LIST_Array) {\r\n\r\n    ROI_LIST_Array.forEach(function (n) {\r\n        let ul = document.getElementById('structure_checkbox_ul');\r\n        let li = document.createElement('li');\r\n\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = 'checkbox';\r\n        checkbox.value = n.x30060022;\r\n        checkbox.name = 'roi';\r\n\r\n        li.append(checkbox);\r\n\r\n        let text = n.x30060026;\r\n        li.append(document.createTextNode(text));\r\n        ul.append(li);\r\n    });\r\n\r\n}\r\n/**\r\n * @function roiCheckEvent\r\n * @description\r\n * This function deals with\r\n * 1. Event listener on ROI check\r\n * 2. Function call\r\n * <br> 1) name : addROIset\r\n */\r\nfunction roiCheckEvent(){\r\n    /*Event Listener*/\r\n    $(document).ready(function(){\r\n        let roi = document.getElementsByName(\"roi\");\r\n        if (roi[0].addEventListener) {\r\n            for (let i = 0; i < roi.length; i++) {\r\n                roi[i].addEventListener(\"change\", addROIset, false);\r\n            }\r\n        } else if (roi[0].attachEvent) {\r\n            for (let i = 0; i < roi.length; i++) {\r\n                roi[i].attachEvent(\"onchange\", addROIset);\r\n            }\r\n        }\r\n    });\r\n}\r\nexport {ROICheckbox,roiCheckEvent};\r\n","import $ from \"jquery\";\r\nimport {roiCheckEvent} from \"./ROICheckbox\";\r\nimport dicomParser from \"dicom-parser\";\r\nimport {contourData2JSON,roiData2JSON} from \"./RTStructureData2JSON\";\r\n\r\n/*\r\n* 데이터를 계층구조로 확인하려면?\r\n* 1. main.js 에서 rtstruct와 rtstruct3라는 ID 를 가진 div를 생성\r\n* 2. main.js에 status를 확인하기 위해 ( 에러를 체크 ) statusText2라는 div를 생성\r\n* 3. 계층구조는 output1, 그 안의 데이터는 output3에 저장 후 출력\r\n* */\r\n\r\n/**\r\n * @function isASCII\r\n * @param {string} str -> A string to distinguish between isASCII or not\r\n * @return /^[\\x00-\\x7F]*$/.test(str);\r\n * @description\r\n * This function deals with\r\n * 1. Distinguish whether the string is an isASCII or not.\r\n */\r\nfunction isASCII(str) {\r\n    return /^[\\x00-\\x7F]*$/.test(str);\r\n}\r\n\r\nlet dataSet;\r\n/**\r\n * @function structFile\r\n * @param {object} file -> File transferred from fileLoader function : RT structure file\r\n * @description\r\n * This function deals with\r\n * 1. Loading RT structure file\r\n * 2. RT structure Data Parsing\r\n * 3. Function call\r\n *    <br>1) name : roiListHierarchy\r\n *      <br>param : dataSet\r\n *    <br>2) name : getContourData\r\n *      <br>param : dataSet, output1, output3\r\n *    <br>3) name : roiData2JSON\r\n *      <br>param : roiList\r\n *   <br>4) name : contourData2JSON\r\n *      <br>param : contourList\r\n *   <br>5) name : roiCheckEvent\r\n *\r\n * @example\r\n *  // How to parse the dicom data ?\r\n *\r\n *  // User ArrayBuffer and DicomParser\r\n *  let dataSet = dicomParser.parseDicom(byteArray)\r\n *  dataSet.uint16('x00280010')\r\n *\r\n *  // Use cornerstone Image loader\r\n *  dose_image.data.string('x00080016')\r\n */\r\nfunction structFile(file) {\r\n    // clear any data currently being displayed as we parse this next file\r\n    //document.getElementById('rtstruct').innerHTML = '';\r\n    //document.getElementById('rtstruct3').innerHTML = '';\r\n\r\n    $('#status').removeClass('alert-warning alert-success alert-danger').addClass('alert-info');\r\n    $('#warnings').empty();\r\n    //document.getElementById('statusText2').innerHTML = 'Status: Loading file, please wait..';\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (file) {\r\n        let arrayBuffer = reader.result;\r\n        // Here we have the file data as an ArrayBuffer.  dicomParser requires as input a\r\n        // Uint8Array so we create that here\r\n        let byteArray = new Uint8Array(arrayBuffer);\r\n\r\n        // set a short timeout to do the parse so the DOM has time to update itself with the above message\r\n        setTimeout(function () {\r\n            // Invoke the paresDicom function and get back a DataSet object with the contents\r\n            try {\r\n                dataSet = dicomParser.parseDicom(byteArray);\r\n\r\n                let output1 = [];\r\n                let output3 = [];\r\n\r\n                roiListHierarchy(dataSet);\r\n                getContourData(dataSet, output1, output3);\r\n                roiData2JSON(ROI_List);\r\n                contourData2JSON(contourList);\r\n\r\n                roiCheckEvent();\r\n            } catch (err) {\r\n                if (err.output1 || err.output3) {\r\n\r\n                } else if (err.dataSet) {\r\n                    var output1 = [];\r\n                    var output3 = [];\r\n\r\n                    roiListHierarchy(err.dataSet);\r\n                    getContourData(err.dataSet, output1, output3);\r\n                }\r\n            }\r\n        }, 10);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    return dataSet;\r\n}\r\n\r\nlet ROI_List = [];\r\n/**\r\n * @function roiListHierarchy\r\n * @param {object} dataSet -> Data parsed by RT Structure\r\n * @description\r\n * (Only when needed)\r\n * <br>This function deals with\r\n * 1. Method for displaying data in a hierarchy\r\n * 2. Output in hierarchy for output of ROI List\r\n *\r\n * < DICOM Tag >\r\n * 1) Structure Set ROI Sequence : x30060020\r\n * 2) ROI Number : x30060022\r\n * 3) ROI Name : x30060026\r\n **/\r\nfunction roiListHierarchy(dataSet) {\r\n    try {\r\n        for (let propertyName in dataSet.elements) {\r\n            let element = dataSet.elements[propertyName];\r\n\r\n            //Show ROI list with the tag I want.\r\n            if (element.tag === 'x30060020' || (element.tag === 'x30060022') || element.tag === 'x30060026') {\r\n                let text = element.tag;\r\n                if (element.hadUndefinedLength) {\r\n                    text += \" <strong>(-1)</strong>\";\r\n                }\r\n                text += \"; \";\r\n\r\n                if (element.vr) {\r\n                    text += \" VR=\" + element.vr + \"; \";\r\n                }\r\n\r\n                let color = 'black';\r\n\r\n                if (element.items) { //item들을 표시\r\n                    element.items.forEach(function (item) {\r\n                        // each item contains its own data set so we iterate over the items and recursively call this function\r\n                        roiListHierarchy(item.dataSet);\r\n                    });\r\n                } else if (element.fragments) {\r\n                    // each item contains its own data set so we iterate over the items and recursively call this function\r\n                    let itemNumber = 0;\r\n                    element.fragments.forEach(function (fragment) {\r\n                        let basicOffset;\r\n                        if (element.basicOffsetTable) {\r\n                            basicOffset = element.basicOffsetTable[itemNumber];\r\n                        }\r\n                        let str = '<li>Fragment #' + itemNumber++ + ' offset = ' + fragment.offset;\r\n                        str += '(' + basicOffset + ')';\r\n                        str += '; length = ' + fragment.length + '</li>';\r\n                    });\r\n                } else {\r\n                    if (element.length === 2) {\r\n                        text += \" (\" + dataSet.uint16(propertyName) + \")\";\r\n\r\n                    } else if (element.length === 4) {\r\n                        text += \" (\" + dataSet.uint32(propertyName) + \")\";\r\n                    }\r\n                    //대부분은 문자열이지만 그렇지 않은 것들을 확인해서 표시하는 것을 위함\r\n                    let str = dataSet.string(propertyName);\r\n                    let stringIsAscii = isASCII(str);\r\n\r\n                    if (stringIsAscii) {\r\n                        // 정의되지 않은 경우 아무것도 넣지 않음\r\n                        if (str !== undefined) {\r\n                            text += '\"' + str + '\"';\r\n                        }\r\n                    } else {\r\n                        if (element.length !== 2 && element.length !== 4) {\r\n                            color = '#C8C8C8';\r\n                            // If it is some other length and we have no string\r\n                            text += \"<i>binary data</i>\";\r\n                        }\r\n                    }\r\n                    if (element.length === 0) {\r\n                        color = '#C8C8C8';\r\n                    }\r\n                    ROI_List.push(element.tag, dataSet.string(propertyName));\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        let ex = {\r\n            exception: err\r\n        }\r\n        throw ex;\r\n    }\r\n}\r\n\r\n/**\r\n * @function getContourData\r\n * @param {object} dataSet -> Data parsed by RT Structure\r\n * @param {object} output1\r\n * @param {object} output2\r\n * @description\r\n * (Only when needed)\r\n * <br>This function deals with\r\n * 1. Method for displaying data in a hierarchy\r\n * 2. Output in hierarchy for output of contour data\r\n *\r\n * < DICOM Tag >\r\n * 1) ROI Contour Sequence : x30060039\r\n * 2) ROI Display Color : x3006002a\r\n * 3) Contour Sequence : x30060040\r\n * 4) Contour Data : x30060050\r\n * 5) Contour Image Sequence : x30060016\r\n * 6) Referenced SOP Instance UID : x00081155\r\n * 7) Referenced ROI Number : x30060084\r\n * */\r\nlet contourList = [];\r\nfunction getContourData(dataSet, output1, output3) {\r\n    try {\r\n        for (let propertyName in dataSet.elements) {\r\n            let element = dataSet.elements[propertyName];\r\n            //show contour data list\r\n\r\n            if (element.tag === 'x30060039' || element.tag === 'x3006002a' || element.tag === 'x30060040' || element.tag === 'x30060050' || element.tag === 'x30060016' || element.tag === 'x00081155' || element.tag === 'x30060084') {\r\n                let text = element.tag;\r\n\r\n                if (element.hadUndefinedLength) {\r\n                    text += \" <strong>(-1)</strong>\";\r\n                }\r\n                text += \"; \";\r\n                if (element.vr) {\r\n                    text += \" VR=\" + element.vr + \"; \";\r\n                }\r\n                let color = 'black';\r\n\r\n                // Here we check for Sequence items and iterate over them if present.\r\n                // items will not be set in the element object for elements that don't have SQ VR type.\r\n                //  Note that implicit little endian sequences will are currently not parsed.\r\n                if (element.items) { //item들을 표시\r\n                    // itemNumber = 0;\r\n                    element.items.forEach(function (item) {\r\n                        // each item contains its own data set so we iterate over the items and recursively call this function\r\n                        //   output1.push('<li class = \"item\">Item #' + itemNumber++ + ' ' + item.tag + '</li>')\r\n                        //   output1.push('<ul class = \"data\">');\r\n                        getContourData(item.dataSet, output1, output3);\r\n\r\n                        // output1.push('</ul>');\r\n                    });\r\n                } else if (element.fragments) {\r\n                    // each item contains its own data set so we iterate over the items and recursively call this function\r\n                    let itemNumber = 0;\r\n                    element.fragments.forEach(function (fragment) {\r\n                        let basicOffset;\r\n                        if (element.basicOffsetTable) {\r\n                            basicOffset = element.basicOffsetTable[itemNumber];\r\n                        }\r\n                        let str = '<li>Fragment #' + itemNumber++ + ' offset = ' + fragment.offset;\r\n                        str += '(' + basicOffset + ')';\r\n                        str += '; length = ' + fragment.length + '</li>';\r\n                    });\r\n                } else {\r\n                    if (element.length === 2) {\r\n                        text += \" (\" + dataSet.uint16(propertyName) + \")\";\r\n\r\n                    } else if (element.length === 4) {\r\n                        text += \" (\" + dataSet.uint32(propertyName) + \")\";\r\n                    }\r\n                    //대부분은 문자열이지만 그렇지 않은 것들을 확인해서 표시하는 것을 위함\r\n                    let str = dataSet.string(propertyName);\r\n                    let stringIsAscii = isASCII(str);\r\n\r\n                    if (stringIsAscii) {\r\n                        // 정의되지 않은 경우 아무것도 넣지 않음\r\n                        if (str !== undefined) {\r\n                            text += '\"' + str + '\"';\r\n                        }\r\n                    } else {\r\n                        if (element.length !== 2 && element.length !== 4) {\r\n                            color = '#C8C8C8';\r\n                            // If it is some other length and we have no string\r\n                            text += \"<i>binary data</i>\";\r\n                        }\r\n                    }\r\n                    if (element.length === 0) {\r\n                        color = '#C8C8C8';\r\n                    }\r\n                    //   output3.push('<li style=\"color:' + color + ';\">' + text + '</li>');\r\n                    // output1.push('<li style=\"color:' + color + ';\">' + text + '</li>');\r\n                    // finally we add the string to our  array\r\n                    contourList.push(element.tag, dataSet.string(propertyName));\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        let ex = {\r\n            exception: err,\r\n            output3: output3\r\n        }\r\n        throw ex;\r\n    }\r\n    return contourList;\r\n}\r\n\r\nexport {structFile,getContourData}\r\n","import patientInformation from \"../PatientInformation\";\r\nimport dicomParser from \"dicom-parser\";\r\nimport Hammer from \"hammerjs\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstoneMath from \"cornerstone-math\"\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport voxelCal from \"../RT_STRUCTURE/Pixel2Voxel\";\r\nimport {reset} from \"../RT_STRUCTURE/DrawROI\";\r\nimport {getCTimage, doseFile} from \"../RT_DOSE/ConvertMatrix\";\r\nimport {doseCheckAndDraw} from \"../RT_DOSE/DrawDose\";\r\nimport {getDoseValue} from \"../RT_DOSE/GridScaling\";\r\nimport {structFile} from \"../RT_STRUCTURE/GetROIList\";\r\nimport {directCheckAndDraw} from \"../RT_STRUCTURE/RTStructureData2JSON\";\r\n\r\ncornerstoneWadoImageLoader.external.dicomParser = dicomParser\r\ncornerstoneTools.external.cornerstone = cornerstone\r\ncornerstoneTools.external.Hammer = Hammer;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\r\ncornerstoneTools.init();\r\n\r\n\r\nlet currentImageIndex = 111; //for dose z coords setting\r\nlet fileJsonArray = []; //Initialization Json Array , Only global variables are possible\r\n/**\r\n * @method fileLoader\r\n * @param {event} e -> Event that occurs when Input tag call onChange function\r\n * @description\r\n * This function deals with\r\n * 1. function call for CTImage, RT DOSE, RT STRUCTURE files load\r\n * 2. mouseWheel event function -> update image & dose pixel data\r\n */\r\nfunction fileLoader(e) {\r\n    let imageId = []; //image ID list from file name list\r\n    let temp_imageId = [];\r\n\r\n    let files = e.target.files; // event data transfer\r\n    let fileName = [];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        let fileJson = {};\r\n        //파일 이름 string순이 아닌 number로 정렬해주기 위함\r\n        //현재는 하드코딩으로 파일 이름을 임의로 불러옴\r\n        // 파일 이름의 마지막이 정렬되어야 CT가 순서대로 load 됨.\r\n        fileName[i] = parseFloat(files[i].webkitRelativePath.toString().split('.')[11]);\r\n        temp_imageId[i] = cornerstoneWadoImageLoader.wadouri.fileManager.add(files[i])\r\n\r\n        fileJson.fileName = fileName[i];\r\n        fileJson.imageId = temp_imageId[i];\r\n\r\n        fileJsonArray.push(fileJson);\r\n    }\r\n\r\n    let fileLength = files.length;\r\n    //file name sorting\r\n    fileJsonArray.sort(function (a, b) {\r\n        return a.fileName - b.fileName;\r\n    })\r\n\r\n    //assign imageId value\r\n    for (let i = 0; i < fileLength; i++) {\r\n        imageId[i] = fileJsonArray[i].imageId;\r\n    }\r\n\r\n    //이 프로젝트에 포함된 TEST849 폴더에서만 가능 (하드코딩)\r\n    // RT Dose, RT Plan, RT Structure로 파일 이름 변경한 후의 순서\r\n    //Index 112 : RT DOSE FILE\r\n    //Index 113 : RT PLAN FILE\r\n    //Index 114 : RT STRUCTURE FILE\r\n    updateTheImage(imageId, currentImageIndex);\r\n    structFile(files[114]);\r\n    doseFile(files[112]);\r\n\r\n    let el = document.getElementById('dicomImage');\r\n    el.onwheel = wheelE;\r\n\r\n    /**\r\n     * @method wheelE\r\n     * @param {event} e -> Event that occurs when mouse wheel\r\n     * @return false -> Prevent page from scrolling\r\n     * @description\r\n     * This function deals with\r\n     * 1. Transforming the z-coordinates of CT and DOSE use mouse Wheel\r\n     * 2. Load them in order\r\n     * 3. Output Image index and z coordinate\r\n     * 4. Function call\r\n     *     <br> 1) name : updateTheImage\r\n     *     <br>    param : imageId, currentImageIndex ( +1 , -1, 0 )\r\n     *     <br>   2) name : reset\r\n     */\r\n    function wheelE(e) {\r\n        // Firefox e.detail > 0 scroll back, < 0 scroll forward\r\n        // chrome/safari e.wheelDelta < 0 scroll back, > 0 scroll forward\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        let index = currentImageIndex;\r\n        if (index >= 0 || index < imageId.length) {\r\n            if (e.deltaY < 0) {\r\n                if (index === currentImageIndex) {\r\n                    updateTheImage(imageId, currentImageIndex + 1); //update images\r\n                    document.getElementById('topleft1').textContent = 'Image : ' + (currentImageIndex + 1) + '/' + (fileLength - 3);\r\n                    reset();\r\n                }\r\n            } else {\r\n                if (index === currentImageIndex) {\r\n                    updateTheImage(imageId, currentImageIndex - 1); //update images\r\n                    document.getElementById('topleft1').textContent = 'Image : ' + (currentImageIndex + 1) + '/' + (fileLength - 3);\r\n                    reset();\r\n                }\r\n            }\r\n        } else {\r\n            updateTheImage(imageId, currentImageIndex); //update images\r\n            document.getElementById('topleft1').textContent = 'Image : ' + currentImageIndex + '/' + (fileLength - 3);\r\n            reset();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nlet img;\r\n/**\r\n * @method updateTheImage\r\n * @param {object} CTimageIds\r\n * @param {number} imageIndex\r\n * @return img\r\n * @description\r\n * This function deals with\r\n * 1. Only CTImage load using cornerstone ImageLoader\r\n * 2. Load the image corresponding to the current index.\r\n * 3. Condition: Loading images only in CT\r\n * 4. function call\r\n *     <br>1) name : patientInformation\r\n *     <br>   param : CT_image\r\n *     <br> 2) name : voxelCal\r\n *     <br>    param : CT_image\r\n *     <br> 3) name : getCTImage\r\n *     <br>    param : CT_image\r\n *     <br> 4) name : getCTimage\r\n *     <br>    param : CT_image\r\n *     <br> 5) name : sendDrawImage\r\n *     <br>    param : CT_image\r\n *     <br> 6) name : getCheckValue\r\n *     <br>   param : checkVal_check_dose\r\n *     <br> 7) name : doseCheckAndDraw\r\n *     <br>  param : dose_value[currentImageIndex] , checkVal_check_dose\r\n *\r\n *\r\n * < DICOM Tag >\r\n * 1) SOP Class UID : x00080016\r\n\r\n */\r\nfunction updateTheImage(CTimageIds, imageIndex) {\r\n    let el = document.getElementById('dicomImage');\r\n    cornerstone.enable(el)\r\n    currentImageIndex = imageIndex;\r\n    cornerstone.loadImage(CTimageIds[imageIndex]).then(function (CT_image) {\r\n        const viewport = cornerstone.getDefaultViewportForImage(el, CT_image);\r\n        if (CT_image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.2') {\r\n            cornerstone.displayImage(el, CT_image, viewport);\r\n\r\n            patientInformation(CT_image);\r\n            voxelCal(CT_image);\r\n            getCTimage(CT_image);\r\n            directCheckAndDraw(CT_image);\r\n\r\n            getCheckValue(checkVal_check_dose);\r\n            let dose_value = getDoseValue();\r\n            doseCheckAndDraw(dose_value[currentImageIndex], checkVal_check_dose);\r\n\r\n            let position = CT_image.data.string('x00200032').split('\\\\')[2];\r\n            document.getElementById('topleft2').textContent = 'Position : ' + position + 'mm';\r\n\r\n            img = CT_image;\r\n        } else if (CT_image.data.string('x0080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            alert('dose file')\r\n        } else {\r\n            alert(\"ERROR: Confirm this image's modality : CT , MRI ... \");\r\n        }\r\n    });\r\n    return img;\r\n}\r\n\r\n\r\n\r\nlet checkVal_check_dose = [];\r\n/**\r\n * @method getCheckValue\r\n * @param {object} checkVal_check\r\n * @description\r\n * This function deals with\r\n * 1. Get checkValue checked in doseCheckBox function\r\n */\r\nfunction getCheckValue(checkVal_check) {\r\n    checkVal_check_dose = checkVal_check;\r\n}\r\n\r\nexport {fileLoader, getCheckValue}\r\n\r\n\r\n","import {doseFile} from \"../RT_DOSE/ConvertMatrix\";\r\n/**\r\n * @function handleFileSelect\r\n * @param {event} e -> Events that occur when a file is selected\r\n * @description\r\n * This function deals with\r\n * 1. This function gets called once the user drops the file onto the div for drag and drop import doseFile\r\n * 2. drop event\r\n * 3. Function call\r\n *      <br>1) name : doseFile\r\n *        <br> param : files[0]\r\n */\r\nfunction handleFileSelect(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    // Get the FileList object that contains the list of files that were dropped\r\n    let files = e.dataTransfer.files;\r\n\r\n    try{\r\n        doseFile(files[0]);\r\n    }catch (err){\r\n        var message = err;\r\n        if (err.exception) {\r\n            message = err.exception;\r\n            alert(message)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @function handleDragOver\r\n * @param {event} e -> Events that occur handle Drag over\r\n * @description\r\n * This function deals with\r\n * 1. This function gets called once the user drops the file onto the div for drag and drop import doseFile\r\n * 2. dragOver event\r\n */\r\nfunction handleDragOver(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    e.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\r\n}\r\n\r\nexport {handleFileSelect, handleDragOver}\r\n","import React from \"react\";\r\nimport {MapInteractionCSS} from \"react-map-interaction\";\r\n/**\r\n * Element Zoom , pan Controlled Class\r\n * @class\r\n * @description\r\n * Performs CT Image, DOSE, and RT STRUCTURE simultaneously with Zoom in, out, and pan.\r\n * <br>This is open source - react-map-interaction\r\n *\r\n * To Install\r\n * <br> -> npm install react-map-interaction\r\n *\r\n * To apply\r\n *  1. import Controlled from \"./mouseControl\";\r\n *  2. Where there is a tag you want, Put <Controled// in place of the tag.\r\n *  3. Then, put the tag in the Controlled class.\r\n *\r\n * @example\r\n * //How to use?\r\n * //In Controlled Class\r\n *     render() {\r\n        return (\r\n            <MapInteractionCSS\r\n                value={this.state.value}\r\n                onChange={(value) => this.setState({value})}>\r\n                // Put the tag you want to apply here.\r\n            </MapInteractionCSS>\r\n        );\r\n    }\r\n *\r\n * @author Choi jin kyung\r\n */\r\nclass Controlled extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: {\r\n                scale: 1,\r\n                translation: {x: 0, y: 0}\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MapInteractionCSS\r\n                value={this.state.value}\r\n                onChange={(value) => this.setState({value})}\r\n            >\r\n                <div id=\"dicomImage\" className=\"viewportElement\"\r\n                     ref={input => {\r\n                         this.element = input;\r\n                     }}>\r\n                    <canvas id=\"myCanvas\" className={\"canvas\"} width={512} height={512}/>\r\n                </div>\r\n            </MapInteractionCSS>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Controlled\r\n","import React from \"react\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstoneMath from \"cornerstone-math\"\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport Hammer from \"hammerjs\";\r\nimport dicomParser from \"dicom-parser\"\r\nimport \"./MainUI.css\"\r\nimport ButtonEvent from \"./ButtonEvent\";\r\nimport {fileLoader} from './Loader/FileLoader.js'\r\nimport {handleFileSelect, handleDragOver} from \"./Loader/DragAndDrop\";\r\nimport Controlled from \"./MouseControl\";\r\n\r\ncornerstoneWadoImageLoader.external.cornerstone = cornerstone\r\ncornerstoneWadoImageLoader.external.dicomParser = dicomParser\r\ncornerstoneTools.external.cornerstone = cornerstone\r\ncornerstoneTools.external.Hammer = Hammer;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\r\ncornerstoneTools.init();\r\ndicomParser.toString().bold()\r\nlet buttonEvent = new ButtonEvent();\r\n/**\r\n * MAIN UI class\r\n * @class\r\n * @description\r\n * 1. Adding mouse events to the space where the dynamic image is visible\r\n * 2. Mouse Events\r\n * <br> 1) Drag and Drop\r\n * <br> 2) MouseMove, MouseDown, MouseUp Listener\r\n * <br> 3) If mouse button = 2, change WW/WC\r\n * <br> 4) Mouse Event Handler\r\n * 3. Rendering\r\n * <br> 1) Generating the overall UI\r\n * <br> 2) Apply CSS for each\r\n * <br> 3) Create buttons, images, and check boxes.\r\n * <br> 4) Input file\r\n *\r\n * @example\r\n * //Add event to Element\r\n * let element = document.getElementById ('dicomImage')\r\n * element. addEventListener(type, listener(e){})\r\n * @author Choi jin kyung\r\n */\r\nclass MainUIElements extends React.Component {\r\n    componentDidMount() {\r\n        // Setup dropZon  and listeners.\r\n        let dropZone = document.getElementById('dicomImage');\r\n        dropZone.addEventListener('dragover', handleDragOver, false);\r\n        dropZone.addEventListener('drop', handleFileSelect, false);\r\n\r\n    const element = document.getElementById('dicomImage');\r\n        element.addEventListener('mousedown', function (e) {\r\n            let lastX = e.pageX;\r\n            let lastY = e.pageY;\r\n            const mouseButton = e.which;\r\n\r\n\r\n            function mouseMoveHandler(e) {\r\n                const deltaX = e.pageX - lastX;\r\n                const deltaY = e.pageY - lastY;\r\n                lastX = e.pageX;\r\n                lastY = e.pageY;\r\n\r\n                /*if (mouseButton === 1) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.translation.x += (deltaX / viewport.scale);\r\n                    viewport.translation.y += (deltaY / viewport.scale);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                } else*/\r\n                if (mouseButton === 2) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.voi.windowWidth += (deltaX / viewport.scale);\r\n                    viewport.voi.windowCenter += (deltaY / viewport.scale);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                    document.getElementById('topright1').textContent = \"WW/WC:\" + Math.round(viewport.voi.windowWidth)\r\n                        + \"/\" + Math.round(viewport.voi.windowCenter);\r\n                }/* else if (mouseButton === 3) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.scale += (deltaY / 100);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                    document.getElementById('topright2').textContent = \"Zoom:\" + viewport.scale + \"x\";\r\n                }\r\n                */\r\n            }\r\n\r\n            function mouseUpHandler() {\r\n                document.removeEventListener('mousemove', mouseMoveHandler);\r\n                document.removeEventListener('mouseup', mouseUpHandler);\r\n            }\r\n\r\n            document.addEventListener('mousemove', mouseMoveHandler);\r\n            document.addEventListener('mouseup', mouseUpHandler);\r\n        });\r\n\r\n    }\r\n\r\n    //Rendering\r\n    render() {\r\n        return (\r\n            <div id=\"outsideWrapper\" className={\"outsideWrapper\"}>\r\n                <div> Open patient =>\r\n                    <input type=\"file\" id=\"filepicker\" name=\"fileList\" webkitdirectory={\"\"} directory={\"\"} multiple\r\n                           onChange={(e) => {\r\n                               fileLoader(e);\r\n                           }}/>\r\n                </div>\r\n\r\n                <div className={'left'}>\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            buttonEvent.angleOn()\r\n                        }}>Angle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            buttonEvent.lengthOn()\r\n                        }}>Length\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            buttonEvent.drawCircle()\r\n                        }}>Circle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            buttonEvent.drawRectangle()\r\n                        }}>Rectangle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            buttonEvent.eraserOn()\r\n                        }}>Erase\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            buttonEvent.invertOn()\r\n                        }}>Toggle Invert\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            buttonEvent.interpolationOn()\r\n                        }}>Toggle Interpolation\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            buttonEvent.hflipOn()\r\n                        }}>Horizontal Flip\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            buttonEvent.vflipOn()\r\n                        }}>Vertical Flip\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            buttonEvent.rotateOn()\r\n                        }}>Rotate 90\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                </div>\r\n                <div className={'right'}>\r\n                    <ul>\r\n                        <li>mouse click drag - pan</li>\r\n                        <li>Mouse wheel - scroll images / zoom in, out</li>\r\n                        <li>Double Click - save pixel/voxel</li>\r\n                    </ul>\r\n                </div>\r\n                <br/> <br/><br/>\r\n                <div class=\"left\">\r\n                    <div>\r\n                        <div>\r\n                            <span id=\"patientName\">Patient Name : </span>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <span id=\"patientID\">Patient ID : </span>\r\n                        </div>\r\n                        <div>\r\n                            <span id=\"gender\">Gender : </span>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div id=\"dicomImageWrapper\" className=\"wrapper\"\r\n                             onContextMenu=\"return false\" onWheel={() => {\r\n                        }}>\r\n                            <div>\r\n                                <Controlled/>\r\n                            </div>\r\n                            <div id='topleft' className=\"overlay\" className=\"topleft\">\r\n                                <div id=\"topleft1\" >\r\n                                    Image :\r\n                                </div>\r\n                                <div id=\"topleft2\" >\r\n                                    Position:\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"overlay\" className=\"topright\">\r\n                                <div id=\"topright1\" >\r\n                                    WW/WC:\r\n                                </div>\r\n                                <div id=\"topright2\">\r\n                                    Zoom:\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <span id=\"coords\"/>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <span id=\"voxelCoords\"/>\r\n                        </div>\r\n                        <div>\r\n                            <span id=\"pixelValue\"/>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <span id=\"voxelValue\"/>\r\n                        </div>\r\n                        <div>\r\n                            <span id=\"doseCoords\"/>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <br/><br/><br/><br/><br/><br/><br/>\r\n                </div>\r\n                <div className={'right'}>\r\n                    <div className=\"lefthalf\">\r\n                        <ul id=\"structure_checkbox_ul\">Structures</ul>\r\n                    </div>\r\n                    <div className=\"righthalf\">\r\n                        <ul id=\"dose_checkbox_ul\">Isodoses</ul>\r\n                    </div>\r\n                </div>\r\n                <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n                {/*\r\n                <div>\r\n                    <div className=\"left\">\r\n                        <div id=\"status1\" className=\"alert alert-success\">\r\n                            <div id=\"statusText\">\r\n                                Status: Ready (no file loaded)\r\n                            </div>\r\n                            <ul id=\"warnings\">\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"row2\">\r\n                            <div className=\"col-md-12\">\r\n                                <div id=\"rtstruct\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3>item</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br></br><br></br>\r\n\r\n                    <div className=\"right\">\r\n                        <div className=\"row2\">\r\n                            <div className=\"col-md-12\">\r\n                                <div id=\"rtstruct3\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3>contour data</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"right\">\r\n                    <div className=\"row2\">\r\n                        <div className=\"col-md-12\">\r\n                            <div id=\"dose\">\r\n                                <div className=\"text-center\">\r\n                                    <h3>dose</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"left\">\r\n                    <div className=\"row2\">\r\n                        <div className=\"col-md-12\">\r\n                            <div id=\"dose2\">\r\n                                <div className=\"text-center\">\r\n                                    <h3>dose</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n             */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MainUIElements\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport MainUIElements from \"./main/MainUI\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <div>\r\n      <MainUIElements/>\r\n    </div>\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}