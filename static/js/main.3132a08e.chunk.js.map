{"version":3,"sources":["logo.svg","main/patientInformation.js","main/RT_STRUCTURE/pixel2voxel.js","main/RT_STRUCTURE/voxel2pixel.js","main/RT_STRUCTURE/drawROI.js","main/RT_STRUCTURE/rgbToHex.js","main/RT_STRUCTURE/ROIcheckbox.js","main/RT_DOSE/importPixelData.js","main/Loader/firstLoader.js","main/RT_DOSE/doseCheckbox.js","main/RT_DOSE/convertMatrix.js","main/RT_DOSE/drawDose.js","main/Loader/dragAndDrop.js","main/mouseControl.js","main/MainUI.js","main/RT_STRUCTURE/buttonEventFunction.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","patientInformation","Px","Py","image","document","getElementById","textContent","data","string","ex","alert","voxelCal","modality","SOP_UID","imgPosArr","split","Sx","parseFloat","Sy","imgOri","imgOriArr","toString","Xx","Xy","Yx","Yy","pixelSpace","pixelSpaceArr","Di","Dj","el","addEventListener","event","pixelCoords","cornerstone","pageX","pageY","Math","round","x","y","pixelCal","dataSet","struct","str","vPx","vPy","i","length","voxel","pi","pj","rgbToHex","color","hex","Number","fullColorHex","rgb","r","g","b","isASCII","test","structFile","file","$","removeClass","addClass","empty","reader","FileReader","onload","arrayBuffer","result","byteArray","Uint8Array","setTimeout","dicomParser","parseDicom","ROIList","contour","roi_List","ROI_Number","ROI_Name","filter","item","undefined","ROI_LIST_Array","ROI_object","x30060022","x30060026","push","forEach","n","ul","li","createElement","checkbox","type","value","name","append","text","createTextNode","ROI_addCheckbox","roiJson","contourList","Referenced_Instance_UID","contour_data","Referenced_ROI_Number","ROI_display_color","j","contour_object","x30060084","x00081155","x30060050","x3006002a","contour_data_Array","contourJson","ready","roi","getElementsByName","addROIset","attachEvent","err","output1","output3","readAsArrayBuffer","propertyName","element","elements","tag","hadUndefinedLength","vr","items","fragments","itemNumber","fragment","basicOffset","basicOffsetTable","offset","uint16","uint32","exception","img","Rows","Columns","Number_of_Frames","information","ROIs","checkVal_send","sendDrawImage","Instance_UID","draw","getCTImage","evt","target","checked","checkVal_check","checkAndDraw","index","indexOf","splice","checkAndReset","px","ctx","getContext","save","beginPath","moveTo","lineTo","closePath","fillStyle","globalAlpha","stroke","fill","restore","reset","ctx2","clearRect","importPixelData","dose_image","pixelDataElement","x7fe00010","dose_pixel_data","Uint32Array","buffer","slice","dataOffset","Dose_Grid_Scaling","dose_value_temp","cnt","z","dose_value","dose_sort","sort","a","dosemax","level","parseInt","pres","Dose_Checkbox","dose","addDoseSet","gridScaling","dose_imgOriArr","dose_imgPosArr","dose_pixelSpaceArr","doseFile","imageId","cornerstoneWadoImageLoader","fileManager","add","then","dose_pixelSpacing","imgPos","findXY","checkVal_check_dose","Vi","Vj","dose_Sx","dose_Sy","dose_Sz","dose_Xx","dose_Xy","dose_Xz","dose_Yx","dose_Yy","dose_Yz","dose_Di","dose_Dj","dose_vecPatHor","dose_vecPatVer","dose_vecPatNor","math","matrixDose2Patient","dose_draw_color","CT_pixelSpaceArr","CT_pixelSpacing","CT_imgPosArr","CT_imgOri","CT_imgOriArr","CT_Sx","CT_Sy","CT_Sz","CT_Xx","CT_Xy","CT_Xz","CT_Yx","CT_Yy","CT_Yz","CT_Di","CT_Dj","vecPatHor","vecPatVer","vecPatNor","matrixCT2Patient","matrixPatient2CT","DOSE2CT","coordsDOSE2CT","DOSE2CT_xy","DOSE2CT_x","DOSE2CT_y","output","innerHTML","join","scale","translate","drawDose","CT2Patient","dose2patient","getCTimage2","CT_img","Dose","getCheckValue","cornerstoneTools","Hammer","cornerstoneMath","currentImageIndex","fileJsonArray","fileLength","imageIdList","e","temp_imageId","files","fileName","fileJson","webkitRelativePath","CTimageIds","imageIndex","CT_image","viewport","position","firstLoader","onwheel","stopPropagation","preventDefault","deltaY","updateTheImage","handleFileSelect","dataTransfer","handleDragOver","dropEffect","Controlled","props","state","translation","this","onChange","setState","id","className","ref","input","width","height","React","Component","bold","MainUIElements","dropZone","lastX","lastY","mouseButton","which","mouseMoveHandler","deltaX","voi","windowWidth","windowCenter","mouseUpHandler","removeEventListener","webkitdirectory","directory","multiple","onClick","AngleTool","mouseButtonMask","angleOn","LengthTool","lengthOn","EllipticalRoiTool","drawCircle","RectangleRoiTool","drawRectangle","EraserTool","eraserOn","invert","invertOn","pixelReplication","interpolationOn","hflip","hflipOn","vflip","vflipOn","rotation","rotateOn","class","onContextMenu","onWheel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3132a08e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\n\r\nfunction patientInformation(image) {\r\n    try {\r\n        // print the dicom information\r\n        document.getElementById('patientName').textContent = 'Patient Name : ' + image.data.string('x00100010');\r\n        document.getElementById('patientID').textContent = 'Patient ID : ' + image.data.string('x00100020');\r\n        document.getElementById('gender').textContent = 'Gender : ' + image.data.string('x00100040');\r\n\r\n    } catch (ex) {\r\n        alert('parsing error');\r\n    }\r\n}\r\n\r\nexport default patientInformation;\r\n","import * as cornerstone from \"cornerstone-core\";\r\n\r\nlet Px, Py;\r\n\r\n//caculate voxel from pixel\r\nfunction voxelCal(image) {\r\n    let modality = image.data.string('x00080060');\r\n    let SOP_UID = image.data.string('x00080016');\r\n    if (modality === ('CT') || SOP_UID === '1.2.840.10008.5.1.4.1.1.481.2' || modality === 'RTDOSE') {\r\n        let imgPos = image.data.string('x00200032');\r\n        let imgPosArr = imgPos.split(\"\\\\\");\r\n\r\n        let Sx = (parseFloat(imgPosArr[0]) * 10) / 10;\r\n        let Sy = (parseFloat(imgPosArr[1]) * 10) / 10;\r\n\r\n        let imgOri = image.data.string('x00200037');\r\n        imgOri = imgOri.toString();\r\n        let imgOriArr = imgOri.split(\"\\\\\");\r\n\r\n        let Xx = (parseFloat(imgOriArr[0]) * 10) / 10;\r\n        let Xy = (parseFloat(imgOriArr[1]) * 10) / 10;\r\n\r\n        let Yx = (parseFloat(imgOriArr[3]) * 10) / 10;\r\n        let Yy = (parseFloat(imgOriArr[4]) * 10) / 10;\r\n\r\n\r\n        let pixelSpace = image.data.string('x00280030');\r\n        pixelSpace = pixelSpace.toString();\r\n        let pixelSpaceArr = pixelSpace.split(\"\\\\\");\r\n\r\n        let Di = parseFloat((pixelSpaceArr[0]) * 10) / 10;\r\n        let Dj = parseFloat((pixelSpaceArr[1]) * 10) / 10;\r\n\r\n        let el = document.getElementById('dicomImage');\r\n\r\n\r\n        el.addEventListener('mousemove', function (event) {\r\n            const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n\r\n            document.getElementById('coords').textContent = \"X: \" + (Math.round(pixelCoords.x * 10) / 10) + \"px  Y: \" + (Math.round(pixelCoords.y * 10) / 10) + 'px';\r\n\r\n            Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n            Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n\r\n            Px = Math.round(Px * 10) / 10;\r\n            Py = Math.round(Py * 10) / 10;\r\n            document.getElementById('voxelCoords').textContent = \"X: \" + Px + \"mm   Y: \" + Py + 'mm';\r\n        });\r\n\r\n        el.addEventListener('dblclick', function (event) {\r\n            const pixelCoords = cornerstone.pageToPixel(el, event.pageX, event.pageY);\r\n            document.getElementById('pixelValue').textContent = \"X: \" + (Math.round(pixelCoords.x * 10) / 10) + \"px  Y: \" + (Math.round(pixelCoords.y * 10) / 10) + 'px';\r\n\r\n            Px = (Xx * Di * pixelCoords.x) + (Yx * Dj * pixelCoords.y) + Sx;\r\n            Py = (Xy * Di * pixelCoords.x) + (Yy * Dj * pixelCoords.y) + Sy;\r\n\r\n            Px = Math.round(Px * 10) / 10;\r\n            Py = Math.round(Py * 10) / 10;\r\n\r\n            document.getElementById('voxelValue').textContent = \"X: \" + Px + \"mm   Y: \" + Py + 'mm';\r\n        });\r\n\r\n        return [Sx, Sy, Di, Dj, Px, Py]\r\n    } else {\r\n        alert('NOT CT IMAGES')\r\n    }\r\n}\r\n\r\nexport default voxelCal;\r\n","import voxelCal from \"./pixel2voxel\";\r\n\r\n//Convert Parsed contour data to Array\r\nfunction pixelCal(image, struct) {\r\n    let str = struct.split(\"\\\\\");\r\n    let vPx = []; //contour Data Px (voxel point x )\r\n    let vPy = []; //contour Data Py (voxel point y )\r\n\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (i % 3 === 0) {\r\n            vPx[i] = str[i];\r\n        } else if (i % 3 === 1) {\r\n            vPy[i] = str[i];\r\n        }\r\n    }\r\n\r\n    let voxel = voxelCal(image);\r\n    let Sx = voxel[0];\r\n    let Sy = voxel[1];\r\n    let Di = voxel[2];\r\n    let Dj = voxel[3];\r\n\r\n    let pi = [];\r\n    let pj = [];\r\n\r\n    //convert voxel vPx,vPy to pixel pi,pj\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (i % 3 === 0) {\r\n            pi[i] = Math.round(((vPx[i] - Sx) / (Di)) * 10) / 10;\r\n        } else if (i % 3 === 1) {\r\n            pj[i] = Math.round(((vPy[i] - Sy) / (Dj)) * 10) / 10;\r\n        }\r\n    }\r\n\r\n    return [pi, pj]\r\n}\r\n\r\nexport default pixelCal\r\n","import $ from \"jquery\";\r\nimport dicomParser from \"dicom-parser\";\r\nimport {ROI_addCheckbox,ROI_checkEvent} from \"./ROIcheckbox\";\r\nimport pixelCal from \"./voxel2pixel\";\r\nimport fullColorHex from \"./rgbToHex.js\";\r\n\r\nfunction isASCII(str) {\r\n    return /^[\\x00-\\x7F]*$/.test(str);\r\n}\r\n\r\nlet dataSet;\r\n\r\nfunction structFile(file) {\r\n    // clear any data currently being displayed as we parse this next file\r\n    //document.getElementById('rtstruct').innerHTML = '';\r\n    //document.getElementById('rtstruct3').innerHTML = '';\r\n\r\n    $('#status').removeClass('alert-warning alert-success alert-danger').addClass('alert-info');\r\n    $('#warnings').empty();\r\n    //document.getElementById('statusText2').innerHTML = 'Status: Loading file, please wait..';\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (file) {\r\n        let arrayBuffer = reader.result;\r\n        // Here we have the file data as an ArrayBuffer.  dicomParser requires as input a\r\n        // Uint8Array so we create that here\r\n        let byteArray = new Uint8Array(arrayBuffer);\r\n\r\n        // set a short timeout to do the parse so the DOM has time to update itself with the above message\r\n        setTimeout(function () {\r\n            // Invoke the paresDicom function and get back a DataSet object with the contents\r\n            try {\r\n                dataSet = dicomParser.parseDicom(byteArray);\r\n\r\n                let output1 = [];\r\n                let output3 = [];\r\n\r\n                ROIList(dataSet);\r\n                contour(dataSet, output1, output3);\r\n                roiJson(roi_List);\r\n                contourJson(contourList);\r\n\r\n                ROI_checkEvent();\r\n\r\n            } catch (err) {\r\n                if (err.output1 || err.output3) {\r\n\r\n                } else if (err.dataSet) {\r\n                    var output1 = [];\r\n                    var output3 = [];\r\n\r\n                    ROIList(err.dataSet);\r\n                    contour(err.dataSet, output1, output3);\r\n                }\r\n            }\r\n        }, 10);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    return dataSet;\r\n}\r\n\r\nlet roi_List = [];\r\n\r\nfunction ROIList(dataSet) {\r\n    try {\r\n        for (let propertyName in dataSet.elements) {\r\n\r\n            let element = dataSet.elements[propertyName];\r\n            //show ROI List\r\n            if (element.tag === 'x30060020' || (element.tag === 'x30060022') || element.tag === 'x30060026') {\r\n                let text = element.tag;\r\n                if (element.hadUndefinedLength) {\r\n                    text += \" <strong>(-1)</strong>\";\r\n                }\r\n                text += \"; \";\r\n                if (element.vr) {\r\n                    text += \" VR=\" + element.vr + \"; \";\r\n                }\r\n                let color = 'black';\r\n\r\n                if (element.items) { //item들을 표시\r\n                    element.items.forEach(function (item) {\r\n                        // each item contains its own data set so we iterate over the items and recursively call this function\r\n                        ROIList(item.dataSet);\r\n                    });\r\n                } else if (element.fragments) {\r\n                    // each item contains its own data set so we iterate over the items and recursively call this function\r\n                    let itemNumber = 0;\r\n                    element.fragments.forEach(function (fragment) {\r\n                        let basicOffset;\r\n                        if (element.basicOffsetTable) {\r\n                            basicOffset = element.basicOffsetTable[itemNumber];\r\n                        }\r\n                        let str = '<li>Fragment #' + itemNumber++ + ' offset = ' + fragment.offset;\r\n                        str += '(' + basicOffset + ')';\r\n                        str += '; length = ' + fragment.length + '</li>';\r\n                    });\r\n                } else {\r\n                    if (element.length === 2) {\r\n                        text += \" (\" + dataSet.uint16(propertyName) + \")\";\r\n\r\n                    } else if (element.length === 4) {\r\n                        text += \" (\" + dataSet.uint32(propertyName) + \")\";\r\n                    }\r\n                    //대부분은 문자열이지만 그렇지 않은 것들을 확인해서 표시하는 것을 위함\r\n                    let str = dataSet.string(propertyName);\r\n                    let stringIsAscii = isASCII(str);\r\n\r\n                    if (stringIsAscii) {\r\n                        // 정의되지 않은 경우 아무것도 넣지 않음\r\n                        if (str !== undefined) {\r\n                            text += '\"' + str + '\"';\r\n                        }\r\n                    } else {\r\n                        if (element.length !== 2 && element.length !== 4) {\r\n                            color = '#C8C8C8';\r\n                            // If it is some other length and we have no string\r\n                            text += \"<i>binary data</i>\";\r\n                        }\r\n                    }\r\n                    if (element.length === 0) {\r\n                        color = '#C8C8C8';\r\n                    }\r\n                    roi_List.push(element.tag, dataSet.string(propertyName));\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        let ex = {\r\n            exception: err\r\n        }\r\n        throw ex;\r\n    }\r\n}\r\n\r\nlet contourList = [];\r\n\r\nfunction contour(dataSet, output1, output3) {\r\n    try {\r\n        for (let propertyName in dataSet.elements) {\r\n            let element = dataSet.elements[propertyName];\r\n            //show contour data list\r\n\r\n            if (element.tag === 'x30060039' || element.tag === 'x3006002a' || element.tag === 'x30060040' || element.tag === 'x30060050' || element.tag === 'x30060016' || element.tag === 'x00081155' || element.tag === 'x30060084') {\r\n                let text = element.tag;\r\n\r\n                if (element.hadUndefinedLength) {\r\n                    text += \" <strong>(-1)</strong>\";\r\n                }\r\n                text += \"; \";\r\n                if (element.vr) {\r\n                    text += \" VR=\" + element.vr + \"; \";\r\n                }\r\n                let color = 'black';\r\n\r\n                // Here we check for Sequence items and iterate over them if present.\r\n                // items will not be set in the element object for elements that don't have SQ VR type.\r\n                //  Note that implicit little endian sequences will are currently not parsed.\r\n                if (element.items) { //item들을 표시\r\n                    // itemNumber = 0;\r\n                    element.items.forEach(function (item) {\r\n                        // each item contains its own data set so we iterate over the items and recursively call this function\r\n                        //   output1.push('<li class = \"item\">Item #' + itemNumber++ + ' ' + item.tag + '</li>')\r\n                        //   output1.push('<ul class = \"data\">');\r\n                        contour(item.dataSet, output1, output3);\r\n\r\n                        // output1.push('</ul>');\r\n                    });\r\n                } else if (element.fragments) {\r\n                    // each item contains its own data set so we iterate over the items and recursively call this function\r\n                    let itemNumber = 0;\r\n                    element.fragments.forEach(function (fragment) {\r\n                        let basicOffset;\r\n                        if (element.basicOffsetTable) {\r\n                            basicOffset = element.basicOffsetTable[itemNumber];\r\n                        }\r\n                        let str = '<li>Fragment #' + itemNumber++ + ' offset = ' + fragment.offset;\r\n                        str += '(' + basicOffset + ')';\r\n                        str += '; length = ' + fragment.length + '</li>';\r\n                    });\r\n                } else {\r\n                    if (element.length === 2) {\r\n                        text += \" (\" + dataSet.uint16(propertyName) + \")\";\r\n\r\n                    } else if (element.length === 4) {\r\n                        text += \" (\" + dataSet.uint32(propertyName) + \")\";\r\n                    }\r\n                    //대부분은 문자열이지만 그렇지 않은 것들을 확인해서 표시하는 것을 위함\r\n                    let str = dataSet.string(propertyName);\r\n                    let stringIsAscii = isASCII(str);\r\n\r\n                    if (stringIsAscii) {\r\n                        // 정의되지 않은 경우 아무것도 넣지 않음\r\n                        if (str !== undefined) {\r\n                            text += '\"' + str + '\"';\r\n                        }\r\n                    } else {\r\n                        if (element.length !== 2 && element.length !== 4) {\r\n                            color = '#C8C8C8';\r\n                            // If it is some other length and we have no string\r\n                            text += \"<i>binary data</i>\";\r\n                        }\r\n                    }\r\n                    if (element.length === 0) {\r\n                        color = '#C8C8C8';\r\n                    }\r\n                    //   output3.push('<li style=\"color:' + color + ';\">' + text + '</li>');\r\n                    // output1.push('<li style=\"color:' + color + ';\">' + text + '</li>');\r\n                    // finally we add the string to our  array\r\n                    contourList.push(element.tag, dataSet.string(propertyName));\r\n                }\r\n            }\r\n        }\r\n    } catch (err) {\r\n        let ex = {\r\n            exception: err,\r\n            output3: output3\r\n        }\r\n        throw ex;\r\n    }\r\n    return contourList;\r\n}\r\n\r\nfunction roiJson(roi_List) {\r\n    let ROI_Number = [];\r\n    let ROI_Name = [];\r\n\r\n    for (let i = 0; i < roi_List.length; i++) {\r\n        if (roi_List[i] === 'x30060022') {\r\n            ROI_Number[i] = roi_List[i + 1];\r\n        } else if (roi_List[i] === 'x30060026') {\r\n            ROI_Name[i] = roi_List[i + 1];\r\n        }\r\n    }\r\n\r\n    //remove undefined in array\r\n    ROI_Number = ROI_Number.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    })\r\n    ROI_Name = ROI_Name.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    })\r\n\r\n    //parsing to JSON\r\n    $(function () {\r\n        let ROI_LIST_Array = [];\r\n\r\n        for (let i = 0; i < ROI_Name.length; i++) {\r\n            let ROI_object = {};\r\n            ROI_object.x30060022 = ROI_Number[i];\r\n            ROI_object.x30060026 = ROI_Name[i];\r\n\r\n            ROI_LIST_Array.push(ROI_object);\r\n        }\r\n        ROI_addCheckbox(ROI_LIST_Array);\r\n    });\r\n\r\n}\r\n\r\nlet contour_data_Array = [];\r\n\r\nfunction contourJson(contourList) {\r\n    let Referenced_Instance_UID = [];\r\n    let contour_data = [];\r\n    let Referenced_ROI_Number = [];\r\n    let ROI_display_color = [];\r\n\r\n    for (let i = 0; i < contourList.length; i++) {\r\n        let j = 0;\r\n        if (contourList[i + 2] === 'x00081155') {\r\n            Referenced_Instance_UID[i] = contourList[i + 3];\r\n            contour_data[i] = contourList[i + 5];\r\n            if (contourList[i + 6] === 'x30060084') {\r\n                Referenced_ROI_Number[i] = contourList[i + 7];\r\n            } else if (contourList[i + 6] === 'x00081155') {\r\n                for (j = i + 6; j < contourList.length; j++) {\r\n                    if (contourList[j + 2] === 'x30060084') {\r\n                        Referenced_ROI_Number[i] = contourList[j + 3];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (contourList[i] === 'x3006002a') {\r\n                ROI_display_color[i] = contourList[i + 1];\r\n            } else if (contourList[i] === 'x30060050') {\r\n                for (j = i; j > 0; j--) {\r\n                    if (contourList[j] === 'x3006002a') {\r\n                        ROI_display_color[i] = contourList[j + 1];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ROI_display_color = ROI_display_color.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    Referenced_Instance_UID = Referenced_Instance_UID.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    contour_data = contour_data.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n    Referenced_ROI_Number = Referenced_ROI_Number.filter(function (item) {\r\n        return item !== null && item !== undefined && item !== \"\";\r\n    });\r\n\r\n    //parsing to JSON\r\n    $(function () {\r\n        for (let i = 0; i < contourList.length; i++) {\r\n            let contour_object = {};\r\n            contour_object.x30060084 = Referenced_ROI_Number[i];\r\n            contour_object.x00081155 = Referenced_Instance_UID[i];\r\n            contour_object.x30060050 = contour_data[i];\r\n            contour_object.x3006002a = ROI_display_color[i];\r\n\r\n            contour_data_Array.push(contour_object);\r\n        }\r\n    });\r\n}\r\n\r\nlet information = {\r\n    ROIs: []\r\n}\r\nlet struct, color;\r\n\r\nlet checkVal_send = information.ROIs;\r\n\r\nfunction sendDrawImage(image) {\r\n    let Instance_UID = image.data.string('x00080018');\r\n\r\n    for(let j=0;j<checkVal_send.length;j++){\r\n        for (let i = 0; i < contour_data_Array.length; i++) {\r\n            if (contour_data_Array[i]['x30060084'] === checkVal_send[j]) {\r\n                if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                    struct = contour_data_Array[i]['x30060050'];\r\n                    color = contour_data_Array[i]['x3006002a'];\r\n\r\n                    draw(image, struct, color);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet img;\r\nfunction getCTImage(image){\r\n    img = image;\r\n    return img;\r\n}\r\n\r\nfunction checkAndDraw(checkVal_check) {\r\n    let Instance_UID = img.data.string('x00080018');\r\n    for (let i = 0; i < contour_data_Array.length; i++) {\r\n        if (contour_data_Array[i]['x30060084'] === checkVal_check) {\r\n            if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                struct = contour_data_Array[i]['x30060050'];\r\n                color = contour_data_Array[i]['x3006002a'];\r\n\r\n                draw(img, struct, color);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkAndReset(checkVal_check) {\r\n    let Instance_UID = img.data.string('x00080018');\r\n    for (let i = 0; i < contour_data_Array.length; i++) {\r\n        if (contour_data_Array[i]['x30060084'] === checkVal_check) {\r\n            if (contour_data_Array[i]['x00081155'] === Instance_UID) {\r\n                struct = contour_data_Array[i]['x30060050'];\r\n                color = contour_data_Array[i]['x3006002a'];\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n/*Function*/\r\nfunction addROIset(evt) {\r\n    let checkVal_check;\r\n    if (evt.target.checked === true) {\r\n        information.ROIs.push(evt.target.value);\r\n        checkVal_check = evt.target.value;\r\n\r\n        checkAndDraw(checkVal_check);\r\n    }else {\r\n        let index = information.ROIs.indexOf(evt.target.value);\r\n        if (index !== -1){\r\n            information.ROIs.splice(index, 1);\r\n        }\r\n        checkVal_check = evt.target.value;\r\n        checkAndReset(checkVal_check);\r\n    }\r\n}\r\n\r\nfunction draw(image,struct,color) {\r\n    let px = pixelCal(image, struct);\r\n    let pi = px[0];\r\n    let pj = px[1];\r\n\r\n    let canvas = document.getElementById(\"myCanvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.moveTo(pi[0], pj[1]);\r\n    for (let i = 1; i <= pi.length * 3; i++) {\r\n        if (i % 3 === 0) {\r\n            ctx.lineTo(pi[i], pj[i + 1]);\r\n\r\n        }\r\n    }\r\n    ctx.closePath();\r\n    ctx.fillStyle = fullColorHex(color);\r\n    ctx.globalAlpha = 0.5;\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.restore();\r\n\r\n}\r\n\r\nfunction reset() {\r\n    let canvas = document.getElementById(\"myCanvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let canvas2 = document.getElementById('doseCanvas');\r\n    let ctx2 = canvas2.getContext(\"2d\");\r\n    ctx.clearRect(0,0,512,512);\r\n    ctx2.clearRect(0,0,512,512);\r\n}\r\n\r\n\r\n\r\nexport {structFile, draw, reset , sendDrawImage, getCTImage , addROIset}\r\n","let rgbToHex = function (color) {\r\n    let hex = Number(color).toString(16);\r\n    if (hex.length < 2) {\r\n        hex = \"0\" + hex;\r\n    }\r\n    return hex;\r\n};\r\n\r\nlet fullColorHex = function (rgb) {\r\n    rgb = rgb.split('\\\\');\r\n\r\n    let r = rgb[0];\r\n    let g = rgb[1];\r\n    let b = rgb[2];\r\n\r\n    let red = rgbToHex(r);\r\n    let green = rgbToHex(g);\r\n    let blue = rgbToHex(b);\r\n\r\n    return \"#\" + red + green + blue;\r\n};\r\n\r\nexport default fullColorHex\r\n","import $ from \"jquery\";\r\nimport {addROIset} from \"./drawROI\";\r\n\r\nfunction ROI_addCheckbox(ROI_LIST_Array) {\r\n    ROI_LIST_Array.forEach(function (n) {\r\n        let ul = document.getElementById('structure_checkbox_ul');\r\n        let li = document.createElement('li');\r\n\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = 'checkbox';\r\n        checkbox.value = n.x30060022;\r\n        checkbox.name = 'roi';\r\n\r\n        li.append(checkbox);\r\n\r\n        let text = n.x30060026;\r\n        li.append(document.createTextNode(text));\r\n        ul.append(li);\r\n    });\r\n\r\n}\r\n\r\nfunction ROI_checkEvent(){\r\n    /*Event Listener*/\r\n    $(document).ready(function(){\r\n        let roi = document.getElementsByName(\"roi\");\r\n        if (roi[0].addEventListener) {\r\n            for (let i = 0; i < roi.length; i++) {\r\n                roi[i].addEventListener(\"change\", addROIset, false);\r\n            }\r\n        } else if (roi[0].attachEvent) {\r\n            for (let i = 0; i < roi.length; i++) {\r\n                roi[i].attachEvent(\"onchange\", addROIset);\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\nexport {ROI_addCheckbox,ROI_checkEvent};\r\n","import {gridScaling} from \"../Loader/firstLoader\";\r\n\r\nlet Rows, Columns, Number_of_Frames;\r\nfunction importPixelData(dose_image, dataSet) {\r\n        let pixelDataElement = dataSet.elements.x7fe00010;\r\n        let dose_pixel_data = new Uint32Array(dataSet.byteArray.buffer.slice(pixelDataElement.dataOffset),0,pixelDataElement.length/4);\r\n\r\n        Rows = parseFloat(dataSet.uint16('x00280010'));\r\n        Columns = parseFloat(dataSet.uint16('x00280011'));\r\n        Number_of_Frames = parseFloat(dose_image.data.string('x00280008'));\r\n\r\n        gridScaling(dose_image, dose_pixel_data, Rows, Columns, Number_of_Frames);\r\n}\r\n\r\nexport {importPixelData}\r\n","import patientInformation from \"../patientInformation\";\r\nimport dicomParser from \"dicom-parser\";\r\nimport Hammer from \"hammerjs\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstoneMath from \"cornerstone-math\"\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport voxelCal from \"../RT_STRUCTURE/pixel2voxel\";\r\nimport {structFile, reset, getCTImage, sendDrawImage} from \"../RT_STRUCTURE/drawROI\";\r\nimport {getCTimage2,CT2Patient,doseFile} from \"../RT_DOSE/convertMatrix\";\r\nimport {Dose_Checkbox, Dose_checkEvent} from \"../RT_DOSE/doseCheckbox\";\r\nimport {checkAndDraw} from \"../RT_DOSE/drawDose\";\r\n\r\ncornerstoneWadoImageLoader.external.cornerstone = cornerstone\r\ncornerstoneWadoImageLoader.external.dicomParser = dicomParser\r\ncornerstoneTools.external.cornerstone = cornerstone\r\ncornerstoneTools.external.Hammer = Hammer;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\r\ncornerstoneTools.init();\r\n\r\nlet currentImageIndex = 111; //for dose z coords setting\r\nlet fileJsonArray = [];\r\nlet fileLength = 0;\r\n\r\n//Import a list of file names from a selected folder\r\nfunction imageIdList(e) {\r\n    let imageId = []; //image ID list from file name list\r\n    let temp_imageId = [];\r\n\r\n    let files = e.target.files;\r\n    let fileName = [];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        let fileJson = {};\r\n        fileName[i] = parseFloat(files[i].webkitRelativePath.toString().split('.')[11]);\r\n        temp_imageId[i] = cornerstoneWadoImageLoader.wadouri.fileManager.add(files[i])\r\n\r\n        fileJson.fileName = fileName[i];\r\n        fileJson.imageId = temp_imageId[i];\r\n\r\n        fileJsonArray.push(fileJson);\r\n    }\r\n\r\n    fileLength = files.length;\r\n    //file name sorting\r\n    fileJsonArray.sort(function (a, b) {\r\n        return a.fileName - b.fileName;\r\n    })\r\n\r\n    //assign imageId value\r\n    for (let i = 0; i < fileLength; i++) {\r\n        imageId[i] = fileJsonArray[i].imageId;\r\n    }\r\n\r\n    /*  // show file list\r\n        let output = document.getElementById(\"listing\");\r\n        for (let i = 0; i < files.length; i++) {\r\n            let item = document.createElement(\"li\");\r\n            item.innerHTML = fileName[i];\r\n            output.appendChild(item);\r\n        }\r\n     */\r\n\r\n    //Index 111 : RT DOSE FILE\r\n    //Index 112 : RT PLAN FILE\r\n    //Index 113 : RT STRUCTURE FILE\r\n    firstLoader(imageId, currentImageIndex);\r\n    structFile(files[114]);\r\n    doseFile(files[112]);\r\n\r\n    let el = document.getElementById('dicomImage');\r\n    el.onwheel = wheelE;\r\n\r\n    function wheelE(e) {\r\n        // Firefox e.detail > 0 scroll back, < 0 scroll forward\r\n        // chrome/safari e.wheelDelta < 0 scroll back, > 0 scroll forward\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        let index = currentImageIndex;\r\n        if (index >= 0 || index < imageId.length) {\r\n            if (e.deltaY < 0) {\r\n                if (index === currentImageIndex) {\r\n                    updateTheImage(imageId, currentImageIndex + 1); //update images\r\n                    document.getElementById('topleft1').textContent = 'Image : ' + (currentImageIndex + 1) + '/' + (fileLength - 3);\r\n                    reset();\r\n                }\r\n            } else {\r\n                if (index === currentImageIndex) {\r\n\r\n                    updateTheImage(imageId, currentImageIndex - 1); //update images\r\n                    document.getElementById('topleft1').textContent = 'Image : ' + (currentImageIndex + 1) + '/' + (fileLength - 3);\r\n                    reset();\r\n                }\r\n            }\r\n        } else {\r\n\r\n            updateTheImage(imageId, currentImageIndex); //update images\r\n            document.getElementById('topleft1').textContent = 'Image : ' + currentImageIndex + '/' + (fileLength - 3);\r\n            reset();\r\n        }\r\n        // Prevent page fom scrolling\r\n        return false;\r\n    }\r\n}\r\n\r\nlet checkVal_check_dose = [];\r\n\r\nfunction getCheckValue(checkVal_check) {\r\n    checkVal_check_dose = checkVal_check;\r\n}\r\n\r\nlet dose_value = [];\r\n\r\n//calculate Dose value\r\nfunction gridScaling(dose_image, dose_pixel_data, Rows, Columns, Number_of_Frames) {\r\n    let Dose_Grid_Scaling = parseFloat(dose_image.data.string('x3004000e'));\r\n    let dose_value_temp = [];\r\n\r\n    //초기화\r\n    for (let i = 0; i < Number_of_Frames; i++) {\r\n        dose_value_temp[i] = [];\r\n    }\r\n\r\n    //calculate dose value\r\n    for (let i = 0; i < dose_pixel_data.length; i++) {\r\n        dose_value_temp[i] = dose_pixel_data[i] * Dose_Grid_Scaling * 100;\r\n    }\r\n\r\n    let cnt = 0;\r\n    for (let z = 110; z > 110 - Number_of_Frames; z--) {\r\n        dose_value[z] = [];\r\n    }\r\n\r\n    for (let z = 110; z > 110 - Number_of_Frames; z--) {\r\n        for (let y = 0; y < Rows; y++) {\r\n            dose_value[z][y] = [];\r\n        }\r\n    }\r\n    for (let z = 110; z > 110 - Number_of_Frames; z--) {\r\n        for (let y = 0; y < Rows; y++) {\r\n            for (let x = 0; x < Columns; x++) {\r\n\r\n                dose_value[z][y][x] = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    let dose_sort = [];\r\n    //convert array to 3 dimension\r\n    for (let z = 110; z > 110 - Number_of_Frames; z--) {\r\n        for (let y = 0; y < Rows; y++) {\r\n            for (let x = 0; x < Columns; x++) {\r\n                dose_value[z][y][x] = dose_value_temp[cnt];\r\n                dose_sort.push(dose_value[z][y][x]);\r\n                cnt++;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    dose_sort.sort(function (a, b) {\r\n        return b - a;\r\n    })\r\n\r\n    let dosemax = dose_sort[0];\r\n\r\n    Dose_Checkbox(dosemax);\r\n    Dose_checkEvent();\r\n}\r\n\r\nlet img;\r\n\r\n// show image #1 initially\r\nfunction updateTheImage(CTimageIds, imageIndex) {\r\n    let el = document.getElementById('dicomImage');\r\n    cornerstone.enable(el)\r\n    currentImageIndex = imageIndex;\r\n    cornerstone.loadImage(CTimageIds[imageIndex]).then(function (CT_image) {\r\n        const viewport = cornerstone.getDefaultViewportForImage(el, CT_image);\r\n        if (CT_image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.2') {\r\n            cornerstone.displayImage(el, CT_image, viewport);\r\n\r\n\r\n            patientInformation(CT_image);\r\n            voxelCal(CT_image);\r\n            getCTImage(CT_image);\r\n            getCTimage2(CT_image);\r\n            sendDrawImage(CT_image);\r\n            checkAndDraw(dose_value[currentImageIndex], checkVal_check_dose);\r\n\r\n            let position = CT_image.data.string('x00200032').split('\\\\')[2];\r\n            document.getElementById('topleft2').textContent = 'Position : ' + position + 'mm';\r\n\r\n\r\n            img = CT_image;\r\n        } else {\r\n            alert(\"ERROR: Confirm this image's modality : CT , MRI ... \");\r\n        }\r\n    });\r\n    return img;\r\n}\r\n\r\n//load one CT Image from local file\r\nfunction firstLoader(CTimageIds, imageIndex) {\r\n    let el = document.getElementById('dicomImage');\r\n    cornerstone.enable(el)\r\n    cornerstone.loadImage(CTimageIds[imageIndex]).then(function (CT_image) {\r\n        const viewport = cornerstone.getDefaultViewportForImage(el, CT_image);\r\n        if (CT_image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.2') {\r\n            cornerstone.displayImage(el, CT_image, viewport);\r\n\r\n            patientInformation(CT_image);\r\n            voxelCal(CT_image);\r\n            getCTImage(CT_image);\r\n            sendDrawImage(CT_image);\r\n            getCTimage2(CT_image);\r\n            getCheckValue([]);\r\n\r\n            document.getElementById('topleft1').textContent = 'Image : ' + (currentImageIndex + 1) + '/' + (fileLength - 3);\r\n\r\n            let position = CT_image.data.string('x00200032').split('\\\\')[2];\r\n            document.getElementById('topleft2').textContent = 'Position : ' + position + 'mm';\r\n\r\n            img = CT_image;\r\n\r\n        } else if (CT_image.data.string('x0080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n            alert('dose file')\r\n        } else {\r\n            alert(\"ERROR: Confirm this image's modality : CT , MRI ... \");\r\n        }\r\n    });\r\n\r\n    return img;\r\n}\r\n\r\nexport {firstLoader, imageIdList, gridScaling, getCheckValue}\r\n\r\n\r\n","import $ from \"jquery\";\r\nimport {getCheckValue} from \"../Loader/firstLoader\";\r\n\r\nfunction Dose_Checkbox(dosemax) {\r\n    let level = [];\r\n    let pres = 40 * 100; //prescription : 4000cGy\r\n    level[0] = parseInt(dosemax);\r\n    level[1] = pres;\r\n    level[2] = pres * 0.98;\r\n    level[3] = pres * 0.95;\r\n    level[4] = pres * 0.9;\r\n    level[5] = pres * 0.8;\r\n    level[6] = pres * 0.7;\r\n    level[7] = pres * 0.5;\r\n    level[8] = pres * 0.3;\r\n    level[9] = 0;\r\n\r\n    //create checkbox list\r\n    level.forEach(function (n) {\r\n        let ul = document.getElementById('dose_checkbox_ul');\r\n        let li = document.createElement('li');\r\n\r\n        let checkbox = document.createElement('input');\r\n        checkbox.type = 'checkbox';\r\n        checkbox.value = n;\r\n        checkbox.name = 'dose';\r\n\r\n        li.append(checkbox);\r\n\r\n        let text = `${parseInt((n / pres) * 100)}% / ${n}cGy`;\r\n        li.append(document.createTextNode(text));\r\n        ul.append(li);\r\n    });\r\n}\r\n\r\nfunction Dose_checkEvent() {\r\n    /*Event Listener*/\r\n    $(document).ready(function () {\r\n        let dose = document.getElementsByName(\"dose\");\r\n        if (dose[0].addEventListener) {\r\n            for (let i = 0; i < dose.length; i++) {\r\n                dose[i].addEventListener(\"change\", addDoseSet, false);\r\n            }\r\n        } else if (dose[0].attachEvent) {\r\n            for (let i = 0; i < dose.length; i++) {\r\n                dose[i].attachEvent(\"onchange\", addDoseSet);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nlet information = {\r\n    Dose: []\r\n}\r\nfunction addDoseSet(evt) {\r\n    if (evt.target.checked === true) {\r\n        information.Dose.push(evt.target.value);\r\n        getCheckValue(information.Dose);\r\n    } else {\r\n        let index = information.Dose.indexOf(evt.target.value);\r\n        if (index !== -1) {\r\n            information.Dose.splice(index, 1);\r\n        }\r\n        getCheckValue(information.Dose);\r\n    }\r\n}\r\n\r\nexport {Dose_Checkbox, Dose_checkEvent};\r\n","import * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport dicomParser from \"dicom-parser\";\r\nimport {importPixelData} from \"./importPixelData\";\r\nimport {checkAndDraw, drawDose} from \"./drawDose\";\r\nimport * as math from 'mathjs';\r\n\r\nlet dataSet;\r\nlet Rows, Columns;\r\nlet dose_imgOriArr = [];\r\nlet dose_imgPosArr = [];\r\nlet dose_pixelSpaceArr = [];\r\n\r\nfunction doseFile(file) {\r\n    const imageId = cornerstoneWadoImageLoader.wadouri.fileManager.add(file);\r\n\r\n    let reader = new FileReader();\r\n    reader.onload = function (file) {\r\n        let arrayBuffer = reader.result;\r\n        // Here we have the file data as an ArrayBuffer.  dicomParser requires as input a\r\n        // Uint8Array so we create that here\r\n        let byteArray = new Uint8Array(arrayBuffer);\r\n\r\n        // set a short timeout to do the parse so the DOM has time to update itself with the above message\r\n        setTimeout(function () {\r\n            // Invoke the paresDicom function and get back a DataSet object with the contents\r\n            try {\r\n\r\n                dataSet = dicomParser.parseDicom(byteArray);\r\n                Rows = parseFloat(dataSet.uint16('x00280010'));\r\n                Columns = parseFloat(dataSet.uint16('x00280011'));\r\n\r\n                cornerstone.loadImage(imageId).then(function (dose_image) {\r\n                    if (dose_image.data.string('x00080016') === '1.2.840.10008.5.1.4.1.1.481.2') {\r\n                        let dose_pixelSpacing = 0;\r\n                        dose_pixelSpaceArr = [];\r\n\r\n                        dose_pixelSpacing = dose_image.data.string('x00280030');\r\n                        dose_pixelSpacing = dose_pixelSpacing.toString();\r\n                        dose_pixelSpaceArr = dose_pixelSpacing.split(\"\\\\\");\r\n\r\n                        let imgPos = dose_image.data.string('x00200032');\r\n                        dose_imgPosArr = imgPos.split(\"\\\\\");\r\n\r\n                        let imgOri = dose_image.data.string('x00200037');\r\n                        imgOri = imgOri.toString();\r\n                        dose_imgOriArr = imgOri.split(\"\\\\\");\r\n\r\n\r\n                        importPixelData(dose_image, dataSet);\r\n                    }\r\n                });\r\n            } catch (err) {\r\n                var message = err;\r\n                if (err.exception) {\r\n                    message = err.exception;\r\n                }\r\n            }\r\n        }, 10);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    return dataSet;\r\n}\r\n\r\nfunction findXY(dose_value, checkVal_check_dose, color) {\r\n    let Vi = [], Vj = [];\r\n    let cnt = 0;\r\n\r\n    try {\r\n        for (let y = 0; y < Rows; y++) {\r\n            for (let x = 0; x < Columns; x++) {\r\n                if (parseInt(checkVal_check_dose) <= dose_value[y][x]) {\r\n                    Vi[cnt] = x;\r\n                    Vj[cnt] = y;\r\n\r\n                    cnt++;\r\n                }\r\n            }\r\n        }\r\n        dose2patient(Vi, Vj, color);\r\n    } catch (err) {\r\n        alert('Can\\'t find x,y ');\r\n    }\r\n}\r\n\r\nlet dose_draw_color = 0;\r\n\r\nlet dose_Sx,dose_Sy,dose_Sz;\r\nlet dose_Xx,dose_Xy,dose_Xz,dose_Yx,dose_Yy,dose_Yz;\r\nlet dose_Di,dose_Dj;\r\n//Dose -> Patient\r\nfunction dose2patient(Vi, Vj, color) {\r\n    ////-146.0892796\\-105.3132142\\-157.5\r\n    dose_Sx = parseFloat(dose_imgPosArr[0]);\r\n    dose_Sy = parseFloat(dose_imgPosArr[1]);\r\n    dose_Sz = parseFloat(dose_imgPosArr[2]);\r\n    //1\\0.0\\0.0\\0.0\\1\\0.0\r\n    dose_Xx = parseFloat(dose_imgOriArr[0]); //1\r\n    dose_Xy = parseFloat(dose_imgOriArr[1]); //0.0\r\n    dose_Xz = parseFloat(dose_imgOriArr[2]); //0.0\r\n    dose_Yx = parseFloat(dose_imgOriArr[3]); //0.0\r\n    dose_Yy = parseFloat(dose_imgOriArr[4]); //1\r\n    dose_Yz = parseFloat(dose_imgOriArr[5]); //0.0\r\n\r\n    //2.5\\2.5\r\n    dose_Di = parseFloat(dose_pixelSpaceArr[0]);\r\n    dose_Dj = parseFloat(dose_pixelSpaceArr[1]);\r\n\r\n\r\n    let dose_vecPatHor = [dose_Xx * dose_Di, dose_Xy * dose_Di, dose_Xz * dose_Di];\r\n    let dose_vecPatVer = [dose_Yx * dose_Dj, dose_Yy * dose_Dj, dose_Yz * dose_Dj];\r\n\r\n\r\n    //cross product ( 외적 )\r\n    let dose_vecPatNor = math.cross(dose_vecPatHor, dose_vecPatVer);\r\n\r\n    let matrixDose2Patient = math.matrix([[dose_Xx * dose_Di, dose_Yx * dose_Dj, dose_vecPatNor[0], dose_Sx],\r\n        [dose_Xy * dose_Di, dose_Yy * dose_Dj, dose_vecPatNor[1], dose_Sy],\r\n        [dose_Xz * dose_Di, dose_Yz * dose_Dj, dose_vecPatNor[2], dose_Sz],\r\n        [0, 0, 0, 1]]);\r\n\r\n\r\n    /*\r\n    let dose_vecPatHor = [dose_Xx , dose_Xy , dose_Xz ];\r\n    let dose_vecPatVer = [dose_Yx , dose_Yy , dose_Yz ];\r\n\r\n\r\n    //cross product ( 외적 )\r\n    let dose_vecPatNor = math.cross(dose_vecPatHor, dose_vecPatVer);\r\n\r\n    let matrixDose2Patient = math.matrix([[dose_Xx , dose_Yx , dose_vecPatNor[0], dose_Sx],\r\n        [dose_Xy , dose_Yy , dose_vecPatNor[1], dose_Sy],\r\n        [dose_Xz , dose_Yz , dose_vecPatNor[2], dose_Sz],\r\n        [0, 0, 0, 1]]);\r\n\r\n     */\r\n    dose_draw_color = color;\r\n    CT2Patient(matrixDose2Patient, Vi, Vj);\r\n}\r\n\r\nlet img = 0;\r\n\r\nfunction getCTimage2(CT_img) {\r\n    img = CT_img;\r\n    return img;\r\n}\r\n\r\nlet CT_Sx = 0, CT_Sy = 0, CT_Sz = 0;\r\nlet CT_Xx = 0, CT_Xy = 0, CT_Xz = 0, CT_Yx = 0, CT_Yy = 0, CT_Yz = 0;\r\nlet CT_Di = 0, CT_Dj = 0;\r\n\r\n//CT->Patient\r\nfunction CT2Patient(matrixDose2Patient, Vi, Vj) {\r\n    let CT_pixelSpacing = 0;\r\n    let CT_pixelSpaceArr = [];\r\n\r\n    CT_pixelSpacing = img.data.string('x00280030');\r\n    CT_pixelSpacing = CT_pixelSpacing.toString();\r\n    CT_pixelSpaceArr = CT_pixelSpacing.split(\"\\\\\");\r\n\r\n    let CT_imgPos = img.data.string('x00200032');\r\n    let CT_imgPosArr = CT_imgPos.split(\"\\\\\");\r\n\r\n    let CT_imgOri = img.data.string('x00200037');\r\n    CT_imgOri = CT_imgOri.toString();\r\n    let CT_imgOriArr = CT_imgOri.split(\"\\\\\");\r\n\r\n    //x00200032\r\n    CT_Sx = parseFloat(CT_imgPosArr[0]);\r\n    CT_Sy = parseFloat(CT_imgPosArr[1]);\r\n    CT_Sz = parseFloat(CT_imgPosArr[2]);\r\n\r\n    //x00200037\r\n    //1\\0.0\\0.0\\0.0\\1\\0.0\r\n    CT_Xx = parseFloat(CT_imgOriArr[0]);//1\r\n    CT_Xy = parseFloat(CT_imgOriArr[1]); //0.0\r\n    CT_Xz = parseFloat(CT_imgOriArr[2]);\r\n    CT_Yx = parseFloat(CT_imgOriArr[3]);//0.0\r\n    CT_Yy = parseFloat(CT_imgOriArr[4]);//1\r\n    CT_Yz = parseFloat(CT_imgOriArr[5]);\r\n\r\n    //x00280030\r\n    CT_Di = parseFloat(CT_pixelSpaceArr[0]);\r\n    CT_Dj = parseFloat(CT_pixelSpaceArr[1]);\r\n\r\n    let vecPatHor = [CT_Xx * CT_Di, CT_Xy * CT_Di, CT_Xz * CT_Di];\r\n    let vecPatVer = [CT_Yx * CT_Dj, CT_Yy * CT_Dj, CT_Yz * CT_Dj];\r\n\r\n    //cross product ( 외적 )\r\n    let vecPatNor = math.cross((vecPatHor), (vecPatVer));\r\n\r\n    let matrixCT2Patient = math.matrix([[CT_Xx * CT_Di, CT_Yx * CT_Dj, vecPatNor[0], CT_Sx],\r\n        [CT_Xy * CT_Di, CT_Yy * CT_Dj, vecPatNor[1], CT_Sy],\r\n        [CT_Xz * CT_Di, CT_Yz * CT_Dj, vecPatNor[2], CT_Sz],\r\n        [0, 0, 0, 1]]);\r\n\r\n    DOSE2CT(matrixDose2Patient, matrixCT2Patient, Vi, Vj);\r\n}\r\n\r\nfunction DOSE2CT(matrixDose2Patient, matrixCT2Patient, Vi, Vj) {\r\n    let matrixPatient2CT = math.inv(matrixCT2Patient);\r\n\r\n    let DOSE2CT = math.multiply(matrixDose2Patient, matrixPatient2CT);\r\n\r\n    let coordsDOSE2CT = math.matrix([[], [], [], []]);\r\n    let DOSE2CT_xy = [];\r\n    let DOSE2CT_x = [], DOSE2CT_y = [];\r\n\r\n    //coords DOSE2CT\r\n    for (let i = 0; i < Vi.length; i++) {\r\n        coordsDOSE2CT[i] = math.multiply(DOSE2CT, math.matrix([[Vi[i]], [Vj[i]], [0], [1]]));\r\n        DOSE2CT_xy.push((coordsDOSE2CT[i]));\r\n    }\r\n\r\n\r\n    let output = [];\r\n    //find DOSE2CT x value\r\n    for (let i = 0; i < DOSE2CT_xy.length; i++) {\r\n        DOSE2CT_x[i] = math.subset(DOSE2CT_xy[i], math.index(0, 0));\r\n        DOSE2CT_y[i] = math.subset(DOSE2CT_xy[i], math.index(1, 0));\r\n        //output.push('<ul>' + '[' + DOSE2CT_x[i] + ',' + DOSE2CT_y[i] + ']' + '</ul>');\r\n    }\r\n\r\n    let Px = [], Py = [];\r\n    for (let i = 0; i < DOSE2CT_x.length; i++) {\r\n        Px[i] = (CT_Xx * CT_Di * DOSE2CT_x[i]) + (CT_Yx * CT_Dj * DOSE2CT_y[i]) + CT_Sx;\r\n        Py[i] = (CT_Xy * CT_Di * DOSE2CT_x[i]) + (CT_Yy * CT_Dj * DOSE2CT_y[i]) + CT_Sy;\r\n        output.push('<ul>' + '[' + Px[i] + ',' + Py[i] + ']' + '</ul>');\r\n    }\r\n\r\n    document.getElementById('dose2').innerHTML = '<ul>' + output.join(' ') + '</ul>';\r\n\r\n    drawDose(Px, Py, dose_draw_color);\r\n}\r\n\r\nexport {doseFile, findXY, CT2Patient, getCTimage2}\r\n","import {findXY} from \"./convertMatrix\";\r\n\r\nfunction checkAndDraw(dose_value, checkVal_check_dose) {\r\n    let color = [];\r\n    color[0] = '#780000';\r\n    color[1] = '#EE4500';\r\n    color[2] = '#FFA500';\r\n    color[3] = '#FFFF00';\r\n    color[4] = '#00FF00';\r\n    color[5] = '#008B00';\r\n    color[6] = '#00FFFF';\r\n    color[7] = '#0000FF';\r\n    color[8] = '#000080';\r\n    color[9] = '#C93F98';\r\n\r\n    for (let i = 0; i < checkVal_check_dose.length; i++) {\r\n        if (parseInt(checkVal_check_dose[i]) === 4185) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[0]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 4000) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[1]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 3920) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[2]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 3800) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[3]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 3600) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[4]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 3200) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[5]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 2800) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[6]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 2000) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[7]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 1200) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[8]);\r\n        } else if (parseInt(checkVal_check_dose[i]) === 0) {\r\n            findXY(dose_value, checkVal_check_dose[i], color[9]);\r\n        }\r\n    }\r\n}\r\n\r\nfunction drawDose(Px, Py, color) {\r\n    let canvas = document.getElementById('myCanvas');\r\n    let ctx = canvas.getContext('2d');\r\n\r\n\r\n    ctx.save();\r\n    ctx.scale(1.585938,1.585938)\r\n    ctx.translate(-146.0892796,-105.3132142)\r\n    ctx.beginPath();\r\n    ctx.moveTo(Px[0],Py[0]);\r\n\r\n    for(let i=1;i<Px.length;i++){\r\n        ctx.lineTo(Px[i],Py[i]);\r\n    }\r\n    ctx.closePath();\r\n    ctx.fillStyle = color;\r\n    ctx.globalAlpha =1 ;\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.restore();\r\n\r\n\r\n}\r\n\r\nexport {drawDose, checkAndDraw}\r\n","import {doseFile} from \"../RT_DOSE/convertMatrix\";\r\n\r\n// this function gets called once the user drops the file onto the div\r\n//for drag and drop import doseFile\r\nfunction handleFileSelect(evt) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    // Get the FileList object that contains the list of files that were dropped\r\n    let files = evt.dataTransfer.files;\r\n\r\n    doseFile(files[0]);\r\n}\r\n\r\n//this function manage drag event\r\nfunction handleDragOver(evt) {\r\n    evt.stopPropagation();\r\n    evt.preventDefault();\r\n\r\n    evt.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\r\n}\r\n\r\nexport {handleFileSelect,handleDragOver}\r\n","import React from \"react\";\r\nimport {MapInteractionCSS} from \"react-map-interaction\";\r\n\r\nclass Controlled extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: {\r\n                scale: 1,\r\n                translation: {x: 0, y: 0}\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {scale, translation} = this.state;\r\n\r\n        return (\r\n            <MapInteractionCSS\r\n                value={this.state.value}\r\n                onChange={(value) => this.setState({value})}\r\n            >\r\n                <div id=\"dicomImage\" className=\"viewportElement\"\r\n                     ref={input => {\r\n                         this.element = input;\r\n                     }}>\r\n\r\n                    <canvas id=\"myCanvas\" className={\"canvas\"} width={512} height={512}/>\r\n                    <canvas id=\"doseCanvas\" className={\"canvas\"} width={512} height={512}/>\r\n                </div>\r\n            </MapInteractionCSS>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Controlled\r\n","import React from \"react\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstoneMath from \"cornerstone-math\"\r\nimport * as cornerstoneWadoImageLoader from \"cornerstone-wado-image-loader\"\r\nimport Hammer from \"hammerjs\";\r\nimport dicomParser from \"dicom-parser\"\r\nimport \"./MainUI.css\"\r\nimport {\r\n    angleOn,\r\n    lengthOn,\r\n    eraserOn,\r\n    drawCircle,\r\n    drawRectangle,\r\n    invertOn,\r\n    interpolationOn,\r\n    hflipOn,\r\n    vflipOn,\r\n    rotateOn\r\n} from \"./RT_STRUCTURE/buttonEventFunction.js\"\r\nimport {imageIdList} from './Loader/firstLoader.js'\r\nimport {handleFileSelect, handleDragOver} from \"./Loader/dragAndDrop\";\r\nimport Controlled from \"./mouseControl\";\r\n\r\ncornerstoneWadoImageLoader.external.cornerstone = cornerstone\r\ncornerstoneWadoImageLoader.external.dicomParser = dicomParser\r\ncornerstoneTools.external.cornerstone = cornerstone\r\ncornerstoneTools.external.Hammer = Hammer;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath\r\ncornerstoneTools.init();\r\ndicomParser.toString().bold()\r\n\r\nclass MainUIElements extends React.Component {\r\n    componentDidMount() {\r\n        // Setup dropZon  and listeners.\r\n        let dropZone = document.getElementById('dicomImage');\r\n        dropZone.addEventListener('dragover', handleDragOver, false);\r\n        dropZone.addEventListener('drop', handleFileSelect, false);\r\n\r\n    const element = document.getElementById('dicomImage');\r\n        element.addEventListener('mousedown', function (e) {\r\n            let lastX = e.pageX;\r\n            let lastY = e.pageY;\r\n            const mouseButton = e.which;\r\n\r\n\r\n            function mouseMoveHandler(e) {\r\n                const deltaX = e.pageX - lastX;\r\n                const deltaY = e.pageY - lastY;\r\n                lastX = e.pageX;\r\n                lastY = e.pageY;\r\n\r\n                /*if (mouseButton === 1) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.translation.x += (deltaX / viewport.scale);\r\n                    viewport.translation.y += (deltaY / viewport.scale);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                } else*/\r\n                if (mouseButton === 2) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.voi.windowWidth += (deltaX / viewport.scale);\r\n                    viewport.voi.windowCenter += (deltaY / viewport.scale);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                    document.getElementById('topright1').textContent = \"WW/WC:\" + Math.round(viewport.voi.windowWidth)\r\n                        + \"/\" + Math.round(viewport.voi.windowCenter);\r\n                }/* else if (mouseButton === 3) {\r\n                    let viewport = cornerstone.getViewport(element);\r\n                    viewport.scale += (deltaY / 100);\r\n                    cornerstone.setViewport(element, viewport);\r\n\r\n                    document.getElementById('topright2').textContent = \"Zoom:\" + viewport.scale + \"x\";\r\n                }\r\n                */\r\n            }\r\n\r\n            function mouseUpHandler() {\r\n                document.removeEventListener('mousemove', mouseMoveHandler);\r\n                document.removeEventListener('mouseup', mouseUpHandler);\r\n            }\r\n\r\n            document.addEventListener('mousemove', mouseMoveHandler);\r\n            document.addEventListener('mouseup', mouseUpHandler);\r\n        });\r\n\r\n    }\r\n\r\n    //Rendering\r\n    render() {\r\n        return (\r\n            <div id=\"outsideWrapper\" className={\"outsideWrapper\"}>\r\n                <div> Open patient =>\r\n                    <input type=\"file\" id=\"filepicker\" name=\"fileList\" webkitdirectory={\"\"} directory={\"\"} multiple\r\n                           onChange={(e) => {\r\n                               imageIdList(e);\r\n                           }}/>\r\n                </div>\r\n                <ul id=\"listing\"></ul>\r\n\r\n                <div className={'left'}>\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            angleOn()\r\n                        }}>Angle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            lengthOn()\r\n                        }}>Length\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            drawCircle()\r\n                        }}>Circle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            drawRectangle()\r\n                        }}>Rectangle\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            eraserOn()\r\n                        }}>Erase\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={() => {\r\n                            invertOn()\r\n                        }}>Toggle Invert\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            interpolationOn()\r\n                        }}>Toggle Interpolation\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            hflipOn()\r\n                        }}>Horizontal Flip\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            vflipOn()\r\n                        }}>Vertical Flip\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button onClick={() => {\r\n                            rotateOn()\r\n                        }}>Rotate 90\r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                    </div>\r\n                </div>\r\n                <div className={'right'}>\r\n                    <ul>\r\n                        <li>mouse click drag - pan</li>\r\n                        <li>Mouse wheel - scroll images / zoom in, out</li>\r\n                        <li>Double Click - save pixel/voxel</li>\r\n                    </ul>\r\n                </div>\r\n                <br></br> <br></br> <br></br>\r\n                <div class=\"left\">\r\n                    <div>\r\n                        <div>\r\n                            <span id=\"patientName\">Patient Name : </span>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <span id=\"patientID\">Patient ID : </span>\r\n                        </div>\r\n                        <div>\r\n                            <span id=\"gender\">Gender : </span>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div id=\"dicomImageWrapper\" className=\"wrapper\"\r\n                             onContextMenu=\"return false\" onWheel={(e) => {\r\n                        }}>\r\n                            <div>\r\n                                <Controlled/>\r\n                            </div>\r\n                            <div id='topleft' className=\"overlay\" className=\"topleft\">\r\n                                <div id=\"topleft1\" >\r\n                                    Image :\r\n                                </div>\r\n                                <div id=\"topleft2\" >\r\n                                    Position:\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"overlay\" className=\"topright\">\r\n                                <div id=\"topright1\" >\r\n                                    WW/WC:\r\n                                </div>\r\n                                <div id=\"topright2\">\r\n                                    Zoom:\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <span id=\"coords\"></span>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <span id=\"voxelCoords\"></span>\r\n                        </div>\r\n                        <div>\r\n                            <span id=\"pixelValue\"></span>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <span id=\"voxelValue\"></span>\r\n                        </div>\r\n                        <div>\r\n                            <span id=\"doseCoords\"></span>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n                </div>\r\n                <div className={'right'}>\r\n                    <div className=\"lefthalf\">\r\n                        <ul id=\"structure_checkbox_ul\">Structures</ul>\r\n                    </div>\r\n                    <div className=\"righthalf\">\r\n                        <ul id=\"dose_checkbox_ul\">Isodoses</ul>\r\n                    </div>\r\n                </div>\r\n                <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n                <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\r\n                {/*\r\n                <div>\r\n                    <div className=\"left\">\r\n                        <div id=\"status1\" className=\"alert alert-success\">\r\n                            <div id=\"statusText\">\r\n                                Status: Ready (no file loaded)\r\n                            </div>\r\n                            <ul id=\"warnings\">\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"row2\">\r\n                            <div className=\"col-md-12\">\r\n                                <div id=\"rtstruct\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3>item</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br></br><br></br>\r\n\r\n                    <div className=\"right\">\r\n                        <div className=\"row2\">\r\n                            <div className=\"col-md-12\">\r\n                                <div id=\"rtstruct3\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3>contour data</h3>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"right\">\r\n                    <div className=\"row2\">\r\n                        <div className=\"col-md-12\">\r\n                            <div id=\"dose\">\r\n                                <div className=\"text-center\">\r\n                                    <h3>dose</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                */}\r\n                <div className=\"left\">\r\n                    <div className=\"row2\">\r\n                        <div className=\"col-md-12\">\r\n                            <div id=\"dose2\">\r\n                                <div className=\"text-center\">\r\n                                    <h3>dose</h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MainUIElements\r\n","import \"../MainUI.css\"\r\nimport \"../MainUI.js\"\r\nimport * as cornerstoneTools from \"cornerstone-tools\";\r\nimport * as cornerstone from \"cornerstone-core\";\r\n\r\nexport {\r\n    angleOn,\r\n    lengthOn,\r\n    eraserOn,\r\n    drawCircle,\r\n    drawRectangle,\r\n    invertOn,\r\n    interpolationOn,\r\n    hflipOn,\r\n    vflipOn,\r\n    rotateOn\r\n}\r\n\r\nfunction angleOn() {\r\n    const AngleTool = cornerstoneTools.AngleTool;\r\n    cornerstoneTools.addTool(AngleTool)\r\n    cornerstoneTools.setToolActive('Angle', {mouseButtonMask: 1});\r\n}\r\n\r\nfunction lengthOn() {\r\n    const LengthTool = cornerstoneTools.LengthTool;\r\n    cornerstoneTools.addTool(LengthTool)\r\n    cornerstoneTools.setToolActive(\"Length\", {mouseButtonMask: 1})\r\n}\r\n\r\nfunction eraserOn() {\r\n    const EraserTool = cornerstoneTools.EraserTool;\r\n    cornerstoneTools.addTool(EraserTool);\r\n    cornerstoneTools.setToolActive(\"Eraser\", {mouseButtonMask: 1})\r\n}\r\n\r\nfunction invertOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.invert = !viewport.invert;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction interpolationOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.pixelReplication = !viewport.pixelReplication;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction hflipOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.hflip = !viewport.hflip;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction vflipOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.vflip = !viewport.vflip;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction rotateOn() {\r\n    const element = document.getElementById('dicomImage')\r\n    const viewport = cornerstone.getViewport(element);\r\n    viewport.rotation += 90;\r\n    cornerstone.setViewport(element, viewport);\r\n}\r\n\r\nfunction drawCircle() {\r\n    const EllipticalRoiTool = cornerstoneTools.EllipticalRoiTool;\r\n    cornerstoneTools.addTool(EllipticalRoiTool)\r\n    cornerstoneTools.setToolActive('EllipticalRoi', {mouseButtonMask: 1})\r\n}\r\n\r\nfunction drawRectangle() {\r\n    const RectangleRoiTool = cornerstoneTools.RectangleRoiTool;\r\n    cornerstoneTools.addTool(RectangleRoiTool)\r\n    cornerstoneTools.setToolActive('RectangleRoi', {mouseButtonMask: 1})\r\n}\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport MainUIElements from \"./main/MainUI\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return <div>\r\n      <MainUIElements/>\r\n    </div>\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}